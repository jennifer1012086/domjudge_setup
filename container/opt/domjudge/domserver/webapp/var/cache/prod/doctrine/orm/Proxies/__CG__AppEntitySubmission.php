<?php

namespace Proxies\__CG__\App\Entity;


/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Submission extends \App\Entity\Submission implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'submitid', 'externalid', '' . "\0" . 'App\\Entity\\Submission' . "\0" . 'submittime', '' . "\0" . 'App\\Entity\\Submission' . "\0" . 'valid', '' . "\0" . 'App\\Entity\\Submission' . "\0" . 'expected_results', '' . "\0" . 'App\\Entity\\Submission' . "\0" . 'entry_point', '' . "\0" . 'App\\Entity\\Submission' . "\0" . 'contest', '' . "\0" . 'App\\Entity\\Submission' . "\0" . 'language', '' . "\0" . 'App\\Entity\\Submission' . "\0" . 'team', '' . "\0" . 'App\\Entity\\Submission' . "\0" . 'user', '' . "\0" . 'App\\Entity\\Submission' . "\0" . 'problem', '' . "\0" . 'App\\Entity\\Submission' . "\0" . 'contest_problem', '' . "\0" . 'App\\Entity\\Submission' . "\0" . 'judgings', '' . "\0" . 'App\\Entity\\Submission' . "\0" . 'external_judgements', '' . "\0" . 'App\\Entity\\Submission' . "\0" . 'files', '' . "\0" . 'App\\Entity\\Submission' . "\0" . 'balloons', '' . "\0" . 'App\\Entity\\Submission' . "\0" . 'rejudging', '' . "\0" . 'App\\Entity\\Submission' . "\0" . 'originalSubmission', '' . "\0" . 'App\\Entity\\Submission' . "\0" . 'resubmissions', '' . "\0" . 'App\\Entity\\Submission' . "\0" . 'old_result'];
        }

        return ['__isInitialized__', 'submitid', 'externalid', '' . "\0" . 'App\\Entity\\Submission' . "\0" . 'submittime', '' . "\0" . 'App\\Entity\\Submission' . "\0" . 'valid', '' . "\0" . 'App\\Entity\\Submission' . "\0" . 'expected_results', '' . "\0" . 'App\\Entity\\Submission' . "\0" . 'entry_point', '' . "\0" . 'App\\Entity\\Submission' . "\0" . 'contest', '' . "\0" . 'App\\Entity\\Submission' . "\0" . 'language', '' . "\0" . 'App\\Entity\\Submission' . "\0" . 'team', '' . "\0" . 'App\\Entity\\Submission' . "\0" . 'user', '' . "\0" . 'App\\Entity\\Submission' . "\0" . 'problem', '' . "\0" . 'App\\Entity\\Submission' . "\0" . 'contest_problem', '' . "\0" . 'App\\Entity\\Submission' . "\0" . 'judgings', '' . "\0" . 'App\\Entity\\Submission' . "\0" . 'external_judgements', '' . "\0" . 'App\\Entity\\Submission' . "\0" . 'files', '' . "\0" . 'App\\Entity\\Submission' . "\0" . 'balloons', '' . "\0" . 'App\\Entity\\Submission' . "\0" . 'rejudging', '' . "\0" . 'App\\Entity\\Submission' . "\0" . 'originalSubmission', '' . "\0" . 'App\\Entity\\Submission' . "\0" . 'resubmissions', '' . "\0" . 'App\\Entity\\Submission' . "\0" . 'old_result'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Submission $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load(): void
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized(): bool
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized): void
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null): void
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer(): ?\Closure
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null): void
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner(): ?\Closure
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties(): array
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getResult(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getResult', []);

        return parent::getResult();
    }

    /**
     * {@inheritDoc}
     */
    public function getSubmitid(): int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getSubmitid();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSubmitid', []);

        return parent::getSubmitid();
    }

    /**
     * {@inheritDoc}
     */
    public function setExternalid(?string $externalid): \App\Entity\Submission
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setExternalid', [$externalid]);

        return parent::setExternalid($externalid);
    }

    /**
     * {@inheritDoc}
     */
    public function getExternalid(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExternalid', []);

        return parent::getExternalid();
    }

    /**
     * {@inheritDoc}
     */
    public function getLanguageId(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLanguageId', []);

        return parent::getLanguageId();
    }

    /**
     * {@inheritDoc}
     */
    public function setSubmittime($submittime): \App\Entity\Submission
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSubmittime', [$submittime]);

        return parent::setSubmittime($submittime);
    }

    /**
     * {@inheritDoc}
     */
    public function getSubmittime()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSubmittime', []);

        return parent::getSubmittime();
    }

    /**
     * {@inheritDoc}
     */
    public function getAbsoluteSubmitTime(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAbsoluteSubmitTime', []);

        return parent::getAbsoluteSubmitTime();
    }

    /**
     * {@inheritDoc}
     */
    public function getRelativeSubmitTime(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRelativeSubmitTime', []);

        return parent::getRelativeSubmitTime();
    }

    /**
     * {@inheritDoc}
     */
    public function setValid(bool $valid): \App\Entity\Submission
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setValid', [$valid]);

        return parent::setValid($valid);
    }

    /**
     * {@inheritDoc}
     */
    public function getValid(): bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getValid', []);

        return parent::getValid();
    }

    /**
     * {@inheritDoc}
     */
    public function setExpectedResults(array $expectedResults): \App\Entity\Submission
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setExpectedResults', [$expectedResults]);

        return parent::setExpectedResults($expectedResults);
    }

    /**
     * {@inheritDoc}
     */
    public function getExpectedResults(): ?array
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExpectedResults', []);

        return parent::getExpectedResults();
    }

    /**
     * {@inheritDoc}
     */
    public function setEntryPoint(?string $entryPoint): \App\Entity\Submission
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEntryPoint', [$entryPoint]);

        return parent::setEntryPoint($entryPoint);
    }

    /**
     * {@inheritDoc}
     */
    public function getEntryPoint(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEntryPoint', []);

        return parent::getEntryPoint();
    }

    /**
     * {@inheritDoc}
     */
    public function setTeam(\App\Entity\Team $team = NULL): \App\Entity\Submission
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTeam', [$team]);

        return parent::setTeam($team);
    }

    /**
     * {@inheritDoc}
     */
    public function getTeam(): \App\Entity\Team
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTeam', []);

        return parent::getTeam();
    }

    /**
     * {@inheritDoc}
     */
    public function getTeamId(): int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTeamId', []);

        return parent::getTeamId();
    }

    /**
     * {@inheritDoc}
     */
    public function setUser(\App\Entity\User $user = NULL): \App\Entity\Submission
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUser', [$user]);

        return parent::setUser($user);
    }

    /**
     * {@inheritDoc}
     */
    public function getUser(): ?\App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUser', []);

        return parent::getUser();
    }

    /**
     * {@inheritDoc}
     */
    public function addJudging(\App\Entity\Judging $judging): \App\Entity\Submission
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addJudging', [$judging]);

        return parent::addJudging($judging);
    }

    /**
     * {@inheritDoc}
     */
    public function removeJudging(\App\Entity\Judging $judging): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeJudging', [$judging]);

        parent::removeJudging($judging);
    }

    /**
     * {@inheritDoc}
     */
    public function getJudgings(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getJudgings', []);

        return parent::getJudgings();
    }

    /**
     * {@inheritDoc}
     */
    public function setLanguage(\App\Entity\Language $language = NULL): \App\Entity\Submission
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLanguage', [$language]);

        return parent::setLanguage($language);
    }

    /**
     * {@inheritDoc}
     */
    public function getLanguage(): \App\Entity\Language
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLanguage', []);

        return parent::getLanguage();
    }

    /**
     * {@inheritDoc}
     */
    public function addFile(\App\Entity\SubmissionFile $file): \App\Entity\Submission
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addFile', [$file]);

        return parent::addFile($file);
    }

    /**
     * {@inheritDoc}
     */
    public function removeFile(\App\Entity\SubmissionFile $file): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeFile', [$file]);

        parent::removeFile($file);
    }

    /**
     * {@inheritDoc}
     */
    public function getFiles(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFiles', []);

        return parent::getFiles();
    }

    /**
     * {@inheritDoc}
     */
    public function addBalloon(\App\Entity\Balloon $balloon): \App\Entity\Submission
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addBalloon', [$balloon]);

        return parent::addBalloon($balloon);
    }

    /**
     * {@inheritDoc}
     */
    public function removeBalloon(\App\Entity\Balloon $balloon): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeBalloon', [$balloon]);

        parent::removeBalloon($balloon);
    }

    /**
     * {@inheritDoc}
     */
    public function getBalloons(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBalloons', []);

        return parent::getBalloons();
    }

    /**
     * {@inheritDoc}
     */
    public function setContest(\App\Entity\Contest $contest = NULL): \App\Entity\Submission
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContest', [$contest]);

        return parent::setContest($contest);
    }

    /**
     * {@inheritDoc}
     */
    public function getContest(): \App\Entity\Contest
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContest', []);

        return parent::getContest();
    }

    /**
     * {@inheritDoc}
     */
    public function setProblem(\App\Entity\Problem $problem = NULL): \App\Entity\Submission
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProblem', [$problem]);

        return parent::setProblem($problem);
    }

    /**
     * {@inheritDoc}
     */
    public function getProblem(): \App\Entity\Problem
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProblem', []);

        return parent::getProblem();
    }

    /**
     * {@inheritDoc}
     */
    public function getProblemId(): int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProblemId', []);

        return parent::getProblemId();
    }

    /**
     * {@inheritDoc}
     */
    public function setContestProblem(\App\Entity\ContestProblem $contestProblem = NULL): \App\Entity\Submission
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContestProblem', [$contestProblem]);

        return parent::setContestProblem($contestProblem);
    }

    /**
     * {@inheritDoc}
     */
    public function getContestProblem(): \App\Entity\ContestProblem
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContestProblem', []);

        return parent::getContestProblem();
    }

    /**
     * {@inheritDoc}
     */
    public function setRejudging(\App\Entity\Rejudging $rejudging = NULL): \App\Entity\Submission
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRejudging', [$rejudging]);

        return parent::setRejudging($rejudging);
    }

    /**
     * {@inheritDoc}
     */
    public function getRejudging(): ?\App\Entity\Rejudging
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRejudging', []);

        return parent::getRejudging();
    }

    /**
     * {@inheritDoc}
     */
    public function getExternalRelationships(): array
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExternalRelationships', []);

        return parent::getExternalRelationships();
    }

    /**
     * {@inheritDoc}
     */
    public function isAfterFreeze(): bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isAfterFreeze', []);

        return parent::isAfterFreeze();
    }

    /**
     * {@inheritDoc}
     */
    public function getOldResult(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOldResult', []);

        return parent::getOldResult();
    }

    /**
     * {@inheritDoc}
     */
    public function setOldResult(?string $old_result): \App\Entity\Submission
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOldResult', [$old_result]);

        return parent::setOldResult($old_result);
    }

    /**
     * {@inheritDoc}
     */
    public function getOriginalSubmission(): ?\App\Entity\Submission
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOriginalSubmission', []);

        return parent::getOriginalSubmission();
    }

    /**
     * {@inheritDoc}
     */
    public function setOriginalSubmission(?\App\Entity\Submission $originalSubmission): \App\Entity\Submission
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOriginalSubmission', [$originalSubmission]);

        return parent::setOriginalSubmission($originalSubmission);
    }

    /**
     * {@inheritDoc}
     */
    public function addResubmission(\App\Entity\Submission $submission): \App\Entity\Submission
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addResubmission', [$submission]);

        return parent::addResubmission($submission);
    }

    /**
     * {@inheritDoc}
     */
    public function removeResubmission(\App\Entity\Submission $submission): \App\Entity\Submission
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeResubmission', [$submission]);

        return parent::removeResubmission($submission);
    }

    /**
     * {@inheritDoc}
     */
    public function getResubmissions(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getResubmissions', []);

        return parent::getResubmissions();
    }

    /**
     * {@inheritDoc}
     */
    public function isAborted(): bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isAborted', []);

        return parent::isAborted();
    }

    /**
     * {@inheritDoc}
     */
    public function isStillBusy(): bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isStillBusy', []);

        return parent::isStillBusy();
    }

    /**
     * {@inheritDoc}
     */
    public function addExternalJudgement(\App\Entity\ExternalJudgement $externalJudgement): \App\Entity\Submission
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addExternalJudgement', [$externalJudgement]);

        return parent::addExternalJudgement($externalJudgement);
    }

    /**
     * {@inheritDoc}
     */
    public function removeExternalJudgement(\App\Entity\ExternalJudgement $externalJudgement): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeExternalJudgement', [$externalJudgement]);

        parent::removeExternalJudgement($externalJudgement);
    }

    /**
     * {@inheritDoc}
     */
    public function getExternalJudgements(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExternalJudgements', []);

        return parent::getExternalJudgements();
    }

    /**
     * {@inheritDoc}
     */
    public function getApiIdField(\App\Service\EventLogService $eventLogService): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getApiIdField', [$eventLogService]);

        return parent::getApiIdField($eventLogService);
    }

    /**
     * {@inheritDoc}
     */
    public function getApiId(\App\Service\EventLogService $eventLogService): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getApiId', [$eventLogService]);

        return parent::getApiId($eventLogService);
    }

}
