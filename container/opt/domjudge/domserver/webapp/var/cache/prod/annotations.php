<?php

// This file has been auto-generated by the Symfony Cache Component.

return [[

'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController' => 0,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23setContainer' => 0,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23getParameter' => 0,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23getSubscribedServices' => 0,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23has' => 0,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23get' => 0,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23generateUrl' => 0,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23forward' => 0,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23redirect' => 0,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23redirectToRoute' => 0,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23json' => 0,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23file' => 0,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23addFlash' => 0,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23isGranted' => 0,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23denyAccessUnlessGranted' => 0,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23renderView' => 0,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23render' => 0,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23renderForm' => 0,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23stream' => 0,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23createNotFoundException' => 0,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23createAccessDeniedException' => 0,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23createForm' => 0,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23createFormBuilder' => 0,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23getDoctrine' => 0,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23getUser' => 0,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23isCsrfTokenValid' => 0,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23dispatchMessage' => 0,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23addLink' => 0,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%24container' => 0,
'App%5CController%5CAPI%5CAbstractRestController' => 0,
'App%5CController%5CAPI%5CAbstractRestController%23__construct' => 0,
'App%5CController%5CAPI%5CAbstractRestController%23performListAction' => 0,
'App%5CController%5CAPI%5CAbstractRestController%23performSingleAction' => 0,
'App%5CController%5CAPI%5CAbstractRestController%23renderData' => 0,
'App%5CController%5CAPI%5CAbstractRestController%23renderCreateData' => 0,
'App%5CController%5CAPI%5CAbstractRestController%23getContestQueryBuilder' => 0,
'App%5CController%5CAPI%5CAbstractRestController%23getContestId' => 0,
'App%5CController%5CAPI%5CAbstractRestController%23getContestIdField' => 0,
'App%5CController%5CAPI%5CAbstractRestController%23getQueryBuilder' => 0,
'App%5CController%5CAPI%5CAbstractRestController%23getIdField' => 0,
'App%5CController%5CAPI%5CAbstractRestController%23listActionHelper' => 0,
'App%5CController%5CAPI%5CAbstractRestController%23sendBinaryFileResponse' => 0,
'App%5CController%5CAPI%5CAbstractRestController%23responseForErrors' => 0,
'FOS%5CRestBundle%5CController%5CAbstractFOSRestController%23getViewHandler' => 0,
'FOS%5CRestBundle%5CController%5CBaseAbstractFOSRestController%23getSubscribedServices' => 0,
'FOS%5CRestBundle%5CController%5CAbstractFOSRestController%23setViewHandler' => 0,
'FOS%5CRestBundle%5CController%5CAbstractFOSRestController%23view' => 0,
'FOS%5CRestBundle%5CController%5CAbstractFOSRestController%23redirectView' => 0,
'FOS%5CRestBundle%5CController%5CAbstractFOSRestController%23routeRedirectView' => 0,
'FOS%5CRestBundle%5CController%5CAbstractFOSRestController%23handleView' => 0,
'App%5CController%5CAPI%5CAbstractRestController%24em' => 0,
'App%5CController%5CAPI%5CAbstractRestController%24dj' => 0,
'App%5CController%5CAPI%5CAbstractRestController%24config' => 0,
'App%5CController%5CAPI%5CAbstractRestController%24eventLogService' => 0,
'App%5CController%5CAPI%5CAccountController' => 1,
'App%5CController%5CAPI%5CAccountController%23listAction' => 2,
'App%5CController%5CAPI%5CAccountController%23singleAction' => 3,
'App%5CController%5CAPI%5CAccountController%23getCurrentAction' => 4,
'App%5CController%5CAPI%5CAccountController%23getQueryBuilder' => 0,
'App%5CController%5CAPI%5CAccountController%23getIdField' => 0,
'App%5CController%5CAPI%5CAwardsController' => 5,
'App%5CController%5CAPI%5CAwardsController%23__construct' => 0,
'App%5CController%5CAPI%5CAwardsController%23listAction' => 6,
'App%5CController%5CAPI%5CAwardsController%23singleAction' => 7,
'App%5CController%5CAPI%5CAwardsController%23getAwardsData' => 0,
'App%5CController%5CAPI%5CAwardsController%23getQueryBuilder' => 0,
'App%5CController%5CAPI%5CAwardsController%23getIdField' => 0,
'App%5CController%5CAPI%5CAwardsController%24scoreboardService' => 0,
'App%5CController%5CAPI%5CBalloonController' => 8,
'App%5CController%5CAPI%5CBalloonController%23listAction' => 9,
'App%5CController%5CAPI%5CBalloonController%23markDoneAction' => 10,
'App%5CController%5CAPI%5CBalloonController%23getQueryBuilder' => 0,
'App%5CController%5CAPI%5CBalloonController%23getIdField' => 0,
'App%5CController%5CAPI%5CClarificationController' => 11,
'App%5CController%5CAPI%5CClarificationController%23listAction' => 12,
'App%5CController%5CAPI%5CClarificationController%23singleAction' => 13,
'App%5CController%5CAPI%5CClarificationController%23addAction' => 14,
'App%5CController%5CAPI%5CClarificationController%23getQueryBuilder' => 0,
'App%5CController%5CAPI%5CClarificationController%23getIdField' => 0,
'App%5CController%5CAPI%5CContestController' => 15,
'App%5CController%5CAPI%5CContestController%23__construct' => 0,
'App%5CController%5CAPI%5CContestController%23addContestAction' => 16,
'App%5CController%5CAPI%5CContestController%23listAction' => 17,
'App%5CController%5CAPI%5CContestController%23singleAction' => 18,
'App%5CController%5CAPI%5CContestController%23bannerAction' => 19,
'App%5CController%5CAPI%5CContestController%23deleteBannerAction' => 20,
'App%5CController%5CAPI%5CContestController%23setBannerAction' => 21,
'App%5CController%5CAPI%5CContestController%23changeStartTimeAction' => 22,
'App%5CController%5CAPI%5CContestController%23getContestYamlAction' => 23,
'App%5CController%5CAPI%5CContestController%23getContestStateAction' => 24,
'App%5CController%5CAPI%5CContestController%23getEventFeedAction' => 25,
'App%5CController%5CAPI%5CContestController%23getStatusAction' => 26,
'App%5CController%5CAPI%5CContestController%23getQueryBuilder' => 0,
'App%5CController%5CAPI%5CContestController%23getIdField' => 0,
'App%5CController%5CAPI%5CContestController%23getContestWithId' => 0,
'App%5CController%5CAPI%5CContestController%24importExportService' => 0,
'App%5CController%5CAPI%5CContestController%24assetUpdater' => 0,
'App%5CController%5CAPI%5CExecutableController' => 27,
'App%5CController%5CAPI%5CExecutableController%23__construct' => 0,
'App%5CController%5CAPI%5CExecutableController%23singleAction' => 28,
'App%5CController%5CAPI%5CExecutableController%24em' => 0,
'App%5CController%5CAPI%5CExecutableController%24dj' => 0,
'App%5CController%5CAPI%5CGeneralInfoController' => 29,
'App%5CController%5CAPI%5CGeneralInfoController%23__construct' => 0,
'App%5CController%5CAPI%5CGeneralInfoController%23getVersionAction' => 30,
'App%5CController%5CAPI%5CGeneralInfoController%23getInfoAction' => 31,
'App%5CController%5CAPI%5CGeneralInfoController%23getStatusAction' => 32,
'App%5CController%5CAPI%5CGeneralInfoController%23getUserAction' => 33,
'App%5CController%5CAPI%5CGeneralInfoController%23getDatabaseConfigurationAction' => 34,
'App%5CController%5CAPI%5CGeneralInfoController%23updateConfigurationAction' => 35,
'App%5CController%5CAPI%5CGeneralInfoController%23getConfigCheckAction' => 36,
'App%5CController%5CAPI%5CGeneralInfoController%23countryFlagAction' => 37,
'App%5CController%5CAPI%5CGeneralInfoController%23addProblemAction' => 38,
'App%5CController%5CAPI%5CGeneralInfoController%23getContestIdField' => 0,
'App%5CController%5CAPI%5CGeneralInfoController%24em' => 0,
'App%5CController%5CAPI%5CGeneralInfoController%24dj' => 0,
'App%5CController%5CAPI%5CGeneralInfoController%24config' => 0,
'App%5CController%5CAPI%5CGeneralInfoController%24eventLogService' => 0,
'App%5CController%5CAPI%5CGeneralInfoController%24checkConfigService' => 0,
'App%5CController%5CAPI%5CGeneralInfoController%24router' => 0,
'App%5CController%5CAPI%5CGeneralInfoController%24logger' => 0,
'App%5CController%5CAPI%5CGeneralInfoController%24importProblemService' => 0,
'App%5CController%5CAPI%5CGroupController' => 39,
'App%5CController%5CAPI%5CGroupController%23listAction' => 40,
'App%5CController%5CAPI%5CGroupController%23singleAction' => 41,
'App%5CController%5CAPI%5CGroupController%23addAction' => 42,
'App%5CController%5CAPI%5CGroupController%23getQueryBuilder' => 0,
'App%5CController%5CAPI%5CGroupController%23getIdField' => 0,
'App%5CController%5CAPI%5CJudgehostController' => 43,
'App%5CController%5CAPI%5CJudgehostController%23__construct' => 0,
'App%5CController%5CAPI%5CJudgehostController%23getJudgehostsAction' => 44,
'App%5CController%5CAPI%5CJudgehostController%23createJudgehostAction' => 45,
'App%5CController%5CAPI%5CJudgehostController%23updateJudgeHostAction' => 46,
'App%5CController%5CAPI%5CJudgehostController%23updateJudgingAction' => 47,
'App%5CController%5CAPI%5CJudgehostController%23addDebugInfo' => 48,
'App%5CController%5CAPI%5CJudgehostController%23addJudgingRunAction' => 49,
'App%5CController%5CAPI%5CJudgehostController%23internalErrorAction' => 50,
'App%5CController%5CAPI%5CJudgehostController%23giveBackJudging' => 0,
'App%5CController%5CAPI%5CJudgehostController%23addSingleJudgingRun' => 0,
'App%5CController%5CAPI%5CJudgehostController%23maybeUpdateActiveJudging' => 0,
'App%5CController%5CAPI%5CJudgehostController%23getFilesAction' => 51,
'App%5CController%5CAPI%5CJudgehostController%23getSourceFiles' => 0,
'App%5CController%5CAPI%5CJudgehostController%23getExecutableFiles' => 0,
'App%5CController%5CAPI%5CJudgehostController%23getTestcaseFiles' => 0,
'App%5CController%5CAPI%5CJudgehostController%23getJudgeTasksAction' => 52,
'App%5CController%5CAPI%5CJudgehostController%23serializeJudgeTasks' => 0,
'App%5CController%5CAPI%5CJudgehostController%23getJudgetasks' => 0,
'App%5CController%5CAPI%5CJudgehostController%24em' => 0,
'App%5CController%5CAPI%5CJudgehostController%24dj' => 0,
'App%5CController%5CAPI%5CJudgehostController%24config' => 0,
'App%5CController%5CAPI%5CJudgehostController%24eventLogService' => 0,
'App%5CController%5CAPI%5CJudgehostController%24scoreboardService' => 0,
'App%5CController%5CAPI%5CJudgehostController%24submissionService' => 0,
'App%5CController%5CAPI%5CJudgehostController%24balloonService' => 0,
'App%5CController%5CAPI%5CJudgehostController%24rejudgingService' => 0,
'App%5CController%5CAPI%5CJudgehostController%24logger' => 0,
'App%5CController%5CAPI%5CJudgementController' => 53,
'App%5CController%5CAPI%5CJudgementController%23__construct' => 0,
'App%5CController%5CAPI%5CJudgementController%23listAction' => 54,
'App%5CController%5CAPI%5CJudgementController%23singleAction' => 55,
'App%5CController%5CAPI%5CJudgementController%23getQueryBuilder' => 0,
'App%5CController%5CAPI%5CJudgementController%23getIdField' => 0,
'App%5CController%5CAPI%5CJudgementController%23transformObject' => 0,
'App%5CController%5CAPI%5CJudgementController%24verdicts' => 0,
'App%5CController%5CAPI%5CJudgementTypeController' => 56,
'App%5CController%5CAPI%5CJudgementTypeController%23listAction' => 57,
'App%5CController%5CAPI%5CJudgementTypeController%23singleAction' => 58,
'App%5CController%5CAPI%5CJudgementTypeController%23getJudgementTypes' => 0,
'App%5CController%5CAPI%5CJudgementTypeController%23getQueryBuilder' => 0,
'App%5CController%5CAPI%5CJudgementTypeController%23getIdField' => 0,
'App%5CController%5CAPI%5CLanguageController' => 59,
'App%5CController%5CAPI%5CLanguageController%23listAction' => 60,
'App%5CController%5CAPI%5CLanguageController%23singleAction' => 61,
'App%5CController%5CAPI%5CLanguageController%23getQueryBuilder' => 0,
'App%5CController%5CAPI%5CLanguageController%23getIdField' => 0,
'App%5CController%5CAPI%5CMetricsController' => 62,
'App%5CController%5CAPI%5CMetricsController%23__construct' => 0,
'App%5CController%5CAPI%5CMetricsController%23prometheusAction' => 63,
'App%5CController%5CAPI%5CMetricsController%24em' => 0,
'App%5CController%5CAPI%5CMetricsController%24dj' => 0,
'App%5CController%5CAPI%5CMetricsController%24submissionService' => 0,
'App%5CController%5CAPI%5CMetricsController%24registry' => 0,
'App%5CController%5CAPI%5COrganizationController' => 64,
'App%5CController%5CAPI%5COrganizationController%23__construct' => 0,
'App%5CController%5CAPI%5COrganizationController%23listAction' => 65,
'App%5CController%5CAPI%5COrganizationController%23singleAction' => 66,
'App%5CController%5CAPI%5COrganizationController%23logoAction' => 67,
'App%5CController%5CAPI%5COrganizationController%23deleteLogoAction' => 68,
'App%5CController%5CAPI%5COrganizationController%23setLogoAction' => 69,
'App%5CController%5CAPI%5COrganizationController%23addAction' => 70,
'App%5CController%5CAPI%5COrganizationController%23getQueryBuilder' => 0,
'App%5CController%5CAPI%5COrganizationController%23getIdField' => 0,
'App%5CController%5CAPI%5COrganizationController%24assetUpdater' => 0,
'App%5CController%5CAPI%5CProblemController' => 71,
'App%5CController%5CAPI%5CProblemController%23__construct' => 0,
'App%5CController%5CAPI%5CProblemController%23addProblemsAction' => 72,
'App%5CController%5CAPI%5CProblemController%23listAction' => 73,
'App%5CController%5CAPI%5CProblemController%23addProblemAction' => 74,
'App%5CController%5CAPI%5CProblemController%23unlinkProblemAction' => 75,
'App%5CController%5CAPI%5CProblemController%23linkProblemAction' => 76,
'App%5CController%5CAPI%5CProblemController%23singleAction' => 77,
'App%5CController%5CAPI%5CProblemController%23getQueryBuilder' => 0,
'App%5CController%5CAPI%5CProblemController%23getIdField' => 0,
'App%5CController%5CAPI%5CProblemController%23transformObject' => 0,
'App%5CController%5CAPI%5CProblemController%24importProblemService' => 0,
'App%5CController%5CAPI%5CProblemController%24importExportService' => 0,
'App%5CController%5CAPI%5CQueryObjectTransformer' => 0,
'App%5CController%5CAPI%5CQueryObjectTransformer%23transformObject' => 0,
'App%5CController%5CAPI%5CRunController' => 78,
'App%5CController%5CAPI%5CRunController%23__construct' => 0,
'App%5CController%5CAPI%5CRunController%23listAction' => 79,
'App%5CController%5CAPI%5CRunController%23singleAction' => 80,
'App%5CController%5CAPI%5CRunController%23getQueryBuilder' => 0,
'App%5CController%5CAPI%5CRunController%23getIdField' => 0,
'App%5CController%5CAPI%5CRunController%23transformObject' => 0,
'App%5CController%5CAPI%5CRunController%24verdicts' => 0,
'App%5CController%5CAPI%5CScoreboardController' => 81,
'App%5CController%5CAPI%5CScoreboardController%23__construct' => 0,
'App%5CController%5CAPI%5CScoreboardController%23getScoreboardAction' => 82,
'App%5CController%5CAPI%5CScoreboardController%23getQueryBuilder' => 0,
'App%5CController%5CAPI%5CScoreboardController%23getIdField' => 0,
'App%5CController%5CAPI%5CScoreboardController%24scoreboardService' => 0,
'App%5CController%5CAPI%5CSubmissionController' => 83,
'App%5CController%5CAPI%5CSubmissionController%23__construct' => 0,
'App%5CController%5CAPI%5CSubmissionController%23listAction' => 84,
'App%5CController%5CAPI%5CSubmissionController%23singleAction' => 85,
'App%5CController%5CAPI%5CSubmissionController%23addSubmissionAction' => 86,
'App%5CController%5CAPI%5CSubmissionController%23getSubmissionFilesAction' => 87,
'App%5CController%5CAPI%5CSubmissionController%23getSubmissionSourceCodeAction' => 88,
'App%5CController%5CAPI%5CSubmissionController%23getQueryBuilder' => 0,
'App%5CController%5CAPI%5CSubmissionController%23getIdField' => 0,
'App%5CController%5CAPI%5CSubmissionController%24submissionService' => 0,
'App%5CController%5CAPI%5CTeamController' => 89,
'App%5CController%5CAPI%5CTeamController%23__construct' => 0,
'App%5CController%5CAPI%5CTeamController%23listAction' => 90,
'App%5CController%5CAPI%5CTeamController%23singleAction' => 91,
'App%5CController%5CAPI%5CTeamController%23photoAction' => 92,
'App%5CController%5CAPI%5CTeamController%23deletePhotoAction' => 93,
'App%5CController%5CAPI%5CTeamController%23setPhotoAction' => 94,
'App%5CController%5CAPI%5CTeamController%23addAction' => 95,
'App%5CController%5CAPI%5CTeamController%23getQueryBuilder' => 0,
'App%5CController%5CAPI%5CTeamController%23getIdField' => 0,
'App%5CController%5CAPI%5CTeamController%24assetUpdater' => 0,
'App%5CController%5CAPI%5CUserController' => 96,
'App%5CController%5CAPI%5CUserController%23__construct' => 0,
'App%5CController%5CAPI%5CUserController%23addGroupsAction' => 97,
'App%5CController%5CAPI%5CUserController%23addOrganizationsAction' => 98,
'App%5CController%5CAPI%5CUserController%23addTeamsAction' => 99,
'App%5CController%5CAPI%5CUserController%23addAccountsAction' => 100,
'App%5CController%5CAPI%5CUserController%23listAction' => 101,
'App%5CController%5CAPI%5CUserController%23singleAction' => 102,
'App%5CController%5CAPI%5CUserController%23addAction' => 103,
'App%5CController%5CAPI%5CUserController%23getQueryBuilder' => 0,
'App%5CController%5CAPI%5CUserController%23getIdField' => 0,
'App%5CController%5CAPI%5CUserController%24importExportService' => 0,
'App%5CController%5CBaseController' => 0,
'App%5CController%5CBaseController%23isLocalReferer' => 0,
'App%5CController%5CBaseController%23isLocalRefererUrl' => 0,
'App%5CController%5CBaseController%23redirectToLocalReferrer' => 0,
'App%5CController%5CBaseController%23saveEntity' => 0,
'App%5CController%5CBaseController%23getDatabaseRelations' => 0,
'App%5CController%5CBaseController%23commitDeleteEntity' => 0,
'App%5CController%5CBaseController%23buildDeleteTree' => 0,
'App%5CController%5CBaseController%23deleteEntities' => 0,
'App%5CController%5CBaseController%23getDependentEntities' => 0,
'App%5CController%5CBaseController%23contestsForEntity' => 0,
'App%5CController%5CBaseController%23streamResponse' => 0,
'App%5CController%5CBaseController%23judgeRemaining' => 0,
'App%5CController%5CJury%5CAnalysisController' => 104,
'App%5CController%5CJury%5CAnalysisController%23__construct' => 0,
'App%5CController%5CJury%5CAnalysisController%23indexAction' => 105,
'App%5CController%5CJury%5CAnalysisController%23teamAction' => 106,
'App%5CController%5CJury%5CAnalysisController%23problemAction' => 107,
'App%5CController%5CJury%5CAnalysisController%24dj' => 0,
'App%5CController%5CJury%5CAnalysisController%24stats' => 0,
'App%5CController%5CJury%5CAnalysisController%24em' => 0,
'App%5CController%5CJury%5CAuditLogController' => 108,
'App%5CController%5CJury%5CAuditLogController%23__construct' => 0,
'App%5CController%5CJury%5CAuditLogController%23indexAction' => 109,
'App%5CController%5CJury%5CAuditLogController%23generateDatatypeUrl' => 0,
'App%5CController%5CJury%5CAuditLogController%24em' => 0,
'App%5CController%5CJury%5CAuditLogController%24dj' => 0,
'App%5CController%5CJury%5CAuditLogController%24config' => 0,
'App%5CController%5CJury%5CAuditLogController%24eventLogService' => 0,
'App%5CController%5CJury%5CBalloonController' => 110,
'App%5CController%5CJury%5CBalloonController%23__construct' => 0,
'App%5CController%5CJury%5CBalloonController%23indexAction' => 111,
'App%5CController%5CJury%5CBalloonController%23setDoneAction' => 112,
'App%5CController%5CJury%5CBalloonController%24em' => 0,
'App%5CController%5CJury%5CBalloonController%24dj' => 0,
'App%5CController%5CJury%5CBalloonController%24config' => 0,
'App%5CController%5CJury%5CBalloonController%24eventLogService' => 0,
'App%5CController%5CJury%5CClarificationController' => 113,
'App%5CController%5CJury%5CClarificationController%23__construct' => 0,
'App%5CController%5CJury%5CClarificationController%23indexAction' => 114,
'App%5CController%5CJury%5CClarificationController%23viewAction' => 115,
'App%5CController%5CJury%5CClarificationController%23getClarificationFormData' => 0,
'App%5CController%5CJury%5CClarificationController%23composeClarificationAction' => 116,
'App%5CController%5CJury%5CClarificationController%23toggleClaimAction' => 117,
'App%5CController%5CJury%5CClarificationController%23toggleAnsweredAction' => 118,
'App%5CController%5CJury%5CClarificationController%23changeSubjectAction' => 119,
'App%5CController%5CJury%5CClarificationController%23changeQueueAction' => 120,
'App%5CController%5CJury%5CClarificationController%23sendAction' => 121,
'App%5CController%5CJury%5CClarificationController%24em' => 0,
'App%5CController%5CJury%5CClarificationController%24dj' => 0,
'App%5CController%5CJury%5CClarificationController%24config' => 0,
'App%5CController%5CJury%5CClarificationController%24eventLogService' => 0,
'App%5CController%5CJury%5CConfigController' => 122,
'App%5CController%5CJury%5CConfigController%23__construct' => 0,
'App%5CController%5CJury%5CConfigController%23indexAction' => 123,
'App%5CController%5CJury%5CConfigController%23checkAction' => 124,
'App%5CController%5CJury%5CConfigController%23phpinfoAction' => 125,
'App%5CController%5CJury%5CConfigController%24em' => 0,
'App%5CController%5CJury%5CConfigController%24logger' => 0,
'App%5CController%5CJury%5CConfigController%24dj' => 0,
'App%5CController%5CJury%5CConfigController%24checkConfigService' => 0,
'App%5CController%5CJury%5CConfigController%24config' => 0,
'App%5CController%5CJury%5CContestController' => 126,
'App%5CController%5CJury%5CContestController%23__construct' => 0,
'App%5CController%5CJury%5CContestController%23indexAction' => 127,
'App%5CController%5CJury%5CContestController%23viewAction' => 128,
'App%5CController%5CJury%5CContestController%23removeIntervalAction' => 129,
'App%5CController%5CJury%5CContestController%23editAction' => 130,
'App%5CController%5CJury%5CContestController%23deleteAction' => 131,
'App%5CController%5CJury%5CContestController%23deleteProblemAction' => 132,
'App%5CController%5CJury%5CContestController%23addAction' => 133,
'App%5CController%5CJury%5CContestController%23prefetchAction' => 134,
'App%5CController%5CJury%5CContestController%23finalizeAction' => 135,
'App%5CController%5CJury%5CContestController%23requestRemainingRunsWholeContestAction' => 136,
'App%5CController%5CJury%5CContestController%23requestRemainingRunsContestProblemAction' => 137,
'App%5CController%5CJury%5CContestController%23checkTimezones' => 0,
'App%5CController%5CJury%5CContestController%24em' => 0,
'App%5CController%5CJury%5CContestController%24dj' => 0,
'App%5CController%5CJury%5CContestController%24config' => 0,
'App%5CController%5CJury%5CContestController%24kernel' => 0,
'App%5CController%5CJury%5CContestController%24eventLogService' => 0,
'App%5CController%5CJury%5CContestController%24assetUpdater' => 0,
'App%5CController%5CJury%5CExecutableController' => 138,
'App%5CController%5CJury%5CExecutableController%23__construct' => 0,
'App%5CController%5CJury%5CExecutableController%23indexAction' => 139,
'App%5CController%5CJury%5CExecutableController%23addAction' => 140,
'App%5CController%5CJury%5CExecutableController%23viewAction' => 141,
'App%5CController%5CJury%5CExecutableController%23downloadAction' => 142,
'App%5CController%5CJury%5CExecutableController%23deleteSingleAction' => 143,
'App%5CController%5CJury%5CExecutableController%23downloadSingleAction' => 144,
'App%5CController%5CJury%5CExecutableController%23editAction' => 145,
'App%5CController%5CJury%5CExecutableController%23deleteAction' => 146,
'App%5CController%5CJury%5CExecutableController%23editFilesAction' => 147,
'App%5CController%5CJury%5CExecutableController%23dataForEditor' => 0,
'App%5CController%5CJury%5CExecutableController%24em' => 0,
'App%5CController%5CJury%5CExecutableController%24dj' => 0,
'App%5CController%5CJury%5CExecutableController%24config' => 0,
'App%5CController%5CJury%5CExecutableController%24kernel' => 0,
'App%5CController%5CJury%5CExecutableController%24eventLogService' => 0,
'App%5CController%5CJury%5CExternalContestSourceController' => 148,
'App%5CController%5CJury%5CExternalContestSourceController%23__construct' => 0,
'App%5CController%5CJury%5CExternalContestSourceController%23indexAction' => 149,
'App%5CController%5CJury%5CExternalContestSourceController%23viewAction' => 150,
'App%5CController%5CJury%5CExternalContestSourceController%23editAction' => 151,
'App%5CController%5CJury%5CExternalContestSourceController%23addAction' => 152,
'App%5CController%5CJury%5CExternalContestSourceController%23deleteAction' => 153,
'App%5CController%5CJury%5CExternalContestSourceController%23enableAction' => 154,
'App%5CController%5CJury%5CExternalContestSourceController%23disableAction' => 155,
'App%5CController%5CJury%5CExternalContestSourceController%24em' => 0,
'App%5CController%5CJury%5CExternalContestSourceController%24dj' => 0,
'App%5CController%5CJury%5CExternalContestSourceController%24config' => 0,
'App%5CController%5CJury%5CExternalContestSourceController%24eventLog' => 0,
'App%5CController%5CJury%5CExternalContestSourceController%24kernel' => 0,
'App%5CController%5CJury%5CExternalContestSourceController%24sourceService' => 0,
'App%5CController%5CJury%5CImportExportController' => 156,
'App%5CController%5CJury%5CImportExportController%23__construct' => 0,
'App%5CController%5CJury%5CImportExportController%23indexAction' => 157,
'App%5CController%5CJury%5CImportExportController%23exportTsvAction' => 158,
'App%5CController%5CJury%5CImportExportController%23exportHtmlAction' => 159,
'App%5CController%5CJury%5CImportExportController%23getResultsHtml' => 0,
'App%5CController%5CJury%5CImportExportController%23getClarificationsHtml' => 0,
'App%5CController%5CJury%5CImportExportController%24icpcCmsService' => 0,
'App%5CController%5CJury%5CImportExportController%24importExportService' => 0,
'App%5CController%5CJury%5CImportExportController%24importProblemService' => 0,
'App%5CController%5CJury%5CImportExportController%24em' => 0,
'App%5CController%5CJury%5CImportExportController%24scoreboardService' => 0,
'App%5CController%5CJury%5CImportExportController%24dj' => 0,
'App%5CController%5CJury%5CImportExportController%24config' => 0,
'App%5CController%5CJury%5CImportExportController%24eventLogService' => 0,
'App%5CController%5CJury%5CImportExportController%24domjudgeVersion' => 0,
'App%5CController%5CJury%5CInternalErrorController' => 160,
'App%5CController%5CJury%5CInternalErrorController%23__construct' => 0,
'App%5CController%5CJury%5CInternalErrorController%23indexAction' => 161,
'App%5CController%5CJury%5CInternalErrorController%23viewAction' => 162,
'App%5CController%5CJury%5CInternalErrorController%23handleAction' => 163,
'App%5CController%5CJury%5CInternalErrorController%24em' => 0,
'App%5CController%5CJury%5CInternalErrorController%24dj' => 0,
'App%5CController%5CJury%5CInternalErrorController%24rejudgingService' => 0,
'App%5CController%5CJury%5CJudgehostController' => 164,
'App%5CController%5CJury%5CJudgehostController%23__construct' => 0,
'App%5CController%5CJury%5CJudgehostController%23indexAction' => 165,
'App%5CController%5CJury%5CJudgehostController%23viewAction' => 166,
'App%5CController%5CJury%5CJudgehostController%23deleteAction' => 167,
'App%5CController%5CJury%5CJudgehostController%23enableAction' => 168,
'App%5CController%5CJury%5CJudgehostController%23disableAction' => 169,
'App%5CController%5CJury%5CJudgehostController%23enableAllAction' => 170,
'App%5CController%5CJury%5CJudgehostController%23disableAllAction' => 171,
'App%5CController%5CJury%5CJudgehostController%23autohideInactive' => 172,
'App%5CController%5CJury%5CJudgehostController%23editMultipleAction' => 173,
'App%5CController%5CJury%5CJudgehostController%24em' => 0,
'App%5CController%5CJury%5CJudgehostController%24dj' => 0,
'App%5CController%5CJury%5CJudgehostController%24config' => 0,
'App%5CController%5CJury%5CJudgehostController%24eventLog' => 0,
'App%5CController%5CJury%5CJudgehostController%24kernel' => 0,
'App%5CController%5CJury%5CJuryMiscController' => 174,
'App%5CController%5CJury%5CJuryMiscController%23__construct' => 0,
'App%5CController%5CJury%5CJuryMiscController%23indexAction' => 175,
'App%5CController%5CJury%5CJuryMiscController%23updatesAction' => 176,
'App%5CController%5CJury%5CJuryMiscController%23ajaxDataAction' => 177,
'App%5CController%5CJury%5CJuryMiscController%23refreshCacheAction' => 178,
'App%5CController%5CJury%5CJuryMiscController%23judgingVerifierAction' => 179,
'App%5CController%5CJury%5CJuryMiscController%23changeContestAction' => 180,
'App%5CController%5CJury%5CJuryMiscController%24em' => 0,
'App%5CController%5CJury%5CJuryMiscController%24dj' => 0,
'App%5CController%5CJury%5CLanguageController' => 181,
'App%5CController%5CJury%5CLanguageController%23__construct' => 0,
'App%5CController%5CJury%5CLanguageController%23indexAction' => 182,
'App%5CController%5CJury%5CLanguageController%23addAction' => 183,
'App%5CController%5CJury%5CLanguageController%23viewAction' => 184,
'App%5CController%5CJury%5CLanguageController%23toggleSubmitAction' => 185,
'App%5CController%5CJury%5CLanguageController%23toggleJudgeAction' => 186,
'App%5CController%5CJury%5CLanguageController%23editAction' => 187,
'App%5CController%5CJury%5CLanguageController%23deleteAction' => 188,
'App%5CController%5CJury%5CLanguageController%23requestRemainingRunsWholeLanguageAction' => 189,
'App%5CController%5CJury%5CLanguageController%24em' => 0,
'App%5CController%5CJury%5CLanguageController%24dj' => 0,
'App%5CController%5CJury%5CLanguageController%24config' => 0,
'App%5CController%5CJury%5CLanguageController%24kernel' => 0,
'App%5CController%5CJury%5CLanguageController%24eventLogService' => 0,
'App%5CController%5CJury%5CPrintController' => 190,
'App%5CController%5CJury%5CPrintController%23__construct' => 0,
'App%5CController%5CJury%5CPrintController%23showAction' => 191,
'App%5CController%5CJury%5CPrintController%24em' => 0,
'App%5CController%5CJury%5CPrintController%24dj' => 0,
'App%5CController%5CJury%5CPrintController%24config' => 0,
'App%5CController%5CJury%5CProblemController' => 192,
'App%5CController%5CJury%5CProblemController%23__construct' => 0,
'App%5CController%5CJury%5CProblemController%23indexAction' => 193,
'App%5CController%5CJury%5CProblemController%23exportAction' => 194,
'App%5CController%5CJury%5CProblemController%23viewAction' => 195,
'App%5CController%5CJury%5CProblemController%23viewTextAction' => 196,
'App%5CController%5CJury%5CProblemController%23testcasesAction' => 197,
'App%5CController%5CJury%5CProblemController%23moveTestcaseAction' => 198,
'App%5CController%5CJury%5CProblemController%23fetchTestcaseAction' => 199,
'App%5CController%5CJury%5CProblemController%23editAction' => 200,
'App%5CController%5CJury%5CProblemController%23deleteAction' => 201,
'App%5CController%5CJury%5CProblemController%23fetchAttachmentAction' => 202,
'App%5CController%5CJury%5CProblemController%23deleteAttachmentAction' => 203,
'App%5CController%5CJury%5CProblemController%23deleteTestcaseAction' => 204,
'App%5CController%5CJury%5CProblemController%23addAction' => 205,
'App%5CController%5CJury%5CProblemController%23addTestcasesToZip' => 0,
'App%5CController%5CJury%5CProblemController%23requestRemainingRunsWholeProblemAction' => 206,
'App%5CController%5CJury%5CProblemController%24em' => 0,
'App%5CController%5CJury%5CProblemController%24dj' => 0,
'App%5CController%5CJury%5CProblemController%24config' => 0,
'App%5CController%5CJury%5CProblemController%24kernel' => 0,
'App%5CController%5CJury%5CProblemController%24eventLogService' => 0,
'App%5CController%5CJury%5CProblemController%24submissionService' => 0,
'App%5CController%5CJury%5CProblemController%24importProblemService' => 0,
'App%5CController%5CJury%5CQueueTaskController' => 207,
'App%5CController%5CJury%5CQueueTaskController%23__construct' => 0,
'App%5CController%5CJury%5CQueueTaskController%23indexAction' => 208,
'App%5CController%5CJury%5CQueueTaskController%23changePriorityAction' => 209,
'App%5CController%5CJury%5CQueueTaskController%23viewJudgeTasksAction' => 210,
'App%5CController%5CJury%5CQueueTaskController%24em' => 0,
'App%5CController%5CJury%5CRejudgingController' => 211,
'App%5CController%5CJury%5CRejudgingController%23__construct' => 0,
'App%5CController%5CJury%5CRejudgingController%23indexAction' => 212,
'App%5CController%5CJury%5CRejudgingController%23viewAction' => 213,
'App%5CController%5CJury%5CRejudgingController%23finishAction' => 214,
'App%5CController%5CJury%5CRejudgingController%23addAction' => 215,
'App%5CController%5CJury%5CRejudgingController%23createAction' => 216,
'App%5CController%5CJury%5CRejudgingController%23generateFlashMessagesForSkippedJudgings' => 0,
'App%5CController%5CJury%5CRejudgingController%23getStats' => 0,
'App%5CController%5CJury%5CRejudgingController%24em' => 0,
'App%5CController%5CJury%5CRejudgingController%24dj' => 0,
'App%5CController%5CJury%5CRejudgingController%24config' => 0,
'App%5CController%5CJury%5CRejudgingController%24rejudgingService' => 0,
'App%5CController%5CJury%5CRejudgingController%24router' => 0,
'App%5CController%5CJury%5CRejudgingController%24requestStack' => 0,
'App%5CController%5CJury%5CScoreboardController' => 217,
'App%5CController%5CJury%5CScoreboardController%23__construct' => 0,
'App%5CController%5CJury%5CScoreboardController%23scoreboardAction' => 218,
'App%5CController%5CJury%5CScoreboardController%24dj' => 0,
'App%5CController%5CJury%5CScoreboardController%24scoreboardService' => 0,
'App%5CController%5CJury%5CShadowDifferencesController' => 219,
'App%5CController%5CJury%5CShadowDifferencesController%23__construct' => 0,
'App%5CController%5CJury%5CShadowDifferencesController%23indexAction' => 220,
'App%5CController%5CJury%5CShadowDifferencesController%24dj' => 0,
'App%5CController%5CJury%5CShadowDifferencesController%24config' => 0,
'App%5CController%5CJury%5CShadowDifferencesController%24submissions' => 0,
'App%5CController%5CJury%5CShadowDifferencesController%24requestStack' => 0,
'App%5CController%5CJury%5CShadowDifferencesController%24em' => 0,
'App%5CController%5CJury%5CSubmissionController' => 221,
'App%5CController%5CJury%5CSubmissionController%23__construct' => 0,
'App%5CController%5CJury%5CSubmissionController%23indexAction' => 222,
'App%5CController%5CJury%5CSubmissionController%23viewAction' => 223,
'App%5CController%5CJury%5CSubmissionController%23requestFullDebug' => 224,
'App%5CController%5CJury%5CSubmissionController%23downloadFullDebug' => 225,
'App%5CController%5CJury%5CSubmissionController%23requestOutput' => 226,
'App%5CController%5CJury%5CSubmissionController%23viewForJudgingAction' => 227,
'App%5CController%5CJury%5CSubmissionController%23viewForExternalJudgementAction' => 228,
'App%5CController%5CJury%5CSubmissionController%23viewForExternalIdAction' => 229,
'App%5CController%5CJury%5CSubmissionController%23teamOutputAction' => 230,
'App%5CController%5CJury%5CSubmissionController%23sourceAction' => 231,
'App%5CController%5CJury%5CSubmissionController%23editSourceAction' => 232,
'App%5CController%5CJury%5CSubmissionController%23requestRemainingRuns' => 233,
'App%5CController%5CJury%5CSubmissionController%23updateStatusAction' => 234,
'App%5CController%5CJury%5CSubmissionController%23verifyAction' => 235,
'App%5CController%5CJury%5CSubmissionController%23verifyShadowDifferenceAction' => 236,
'App%5CController%5CJury%5CSubmissionController%23determineFileChanged' => 0,
'App%5CController%5CJury%5CSubmissionController%23processClaim' => 0,
'App%5CController%5CJury%5CSubmissionController%24em' => 0,
'App%5CController%5CJury%5CSubmissionController%24dj' => 0,
'App%5CController%5CJury%5CSubmissionController%24config' => 0,
'App%5CController%5CJury%5CSubmissionController%24submissionService' => 0,
'App%5CController%5CJury%5CSubmissionController%24router' => 0,
'App%5CController%5CJury%5CTeamAffiliationController' => 237,
'App%5CController%5CJury%5CTeamAffiliationController%23__construct' => 0,
'App%5CController%5CJury%5CTeamAffiliationController%23indexAction' => 238,
'App%5CController%5CJury%5CTeamAffiliationController%23viewAction' => 239,
'App%5CController%5CJury%5CTeamAffiliationController%23editAction' => 240,
'App%5CController%5CJury%5CTeamAffiliationController%23deleteAction' => 241,
'App%5CController%5CJury%5CTeamAffiliationController%23addAction' => 242,
'App%5CController%5CJury%5CTeamAffiliationController%24em' => 0,
'App%5CController%5CJury%5CTeamAffiliationController%24dj' => 0,
'App%5CController%5CJury%5CTeamAffiliationController%24config' => 0,
'App%5CController%5CJury%5CTeamAffiliationController%24kernel' => 0,
'App%5CController%5CJury%5CTeamAffiliationController%24eventLogService' => 0,
'App%5CController%5CJury%5CTeamAffiliationController%24assetUpdater' => 0,
'App%5CController%5CJury%5CTeamCategoryController' => 243,
'App%5CController%5CJury%5CTeamCategoryController%23__construct' => 0,
'App%5CController%5CJury%5CTeamCategoryController%23indexAction' => 244,
'App%5CController%5CJury%5CTeamCategoryController%23viewAction' => 245,
'App%5CController%5CJury%5CTeamCategoryController%23editAction' => 246,
'App%5CController%5CJury%5CTeamCategoryController%23deleteAction' => 247,
'App%5CController%5CJury%5CTeamCategoryController%23addAction' => 248,
'App%5CController%5CJury%5CTeamCategoryController%23requestRemainingRunsWholeTeamCategoryAction' => 249,
'App%5CController%5CJury%5CTeamCategoryController%24em' => 0,
'App%5CController%5CJury%5CTeamCategoryController%24dj' => 0,
'App%5CController%5CJury%5CTeamCategoryController%24config' => 0,
'App%5CController%5CJury%5CTeamCategoryController%24kernel' => 0,
'App%5CController%5CJury%5CTeamCategoryController%24eventLogService' => 0,
'App%5CController%5CJury%5CTeamController' => 250,
'App%5CController%5CJury%5CTeamController%23__construct' => 0,
'App%5CController%5CJury%5CTeamController%23indexAction' => 251,
'App%5CController%5CJury%5CTeamController%23viewAction' => 252,
'App%5CController%5CJury%5CTeamController%23editAction' => 253,
'App%5CController%5CJury%5CTeamController%23deleteAction' => 254,
'App%5CController%5CJury%5CTeamController%23addAction' => 255,
'App%5CController%5CJury%5CTeamController%24em' => 0,
'App%5CController%5CJury%5CTeamController%24dj' => 0,
'App%5CController%5CJury%5CTeamController%24config' => 0,
'App%5CController%5CJury%5CTeamController%24kernel' => 0,
'App%5CController%5CJury%5CTeamController%24eventLogService' => 0,
'App%5CController%5CJury%5CTeamController%24assetUpdater' => 0,
'App%5CController%5CJury%5CUserController' => 256,
'App%5CController%5CJury%5CUserController%23__construct' => 0,
'App%5CController%5CJury%5CUserController%23indexAction' => 257,
'App%5CController%5CJury%5CUserController%23viewAction' => 258,
'App%5CController%5CJury%5CUserController%23checkPasswordLength' => 0,
'App%5CController%5CJury%5CUserController%23editAction' => 259,
'App%5CController%5CJury%5CUserController%23deleteAction' => 260,
'App%5CController%5CJury%5CUserController%23addAction' => 261,
'App%5CController%5CJury%5CUserController%23generatePasswordsAction' => 262,
'App%5CController%5CJury%5CUserController%24em' => 0,
'App%5CController%5CJury%5CUserController%24dj' => 0,
'App%5CController%5CJury%5CUserController%24config' => 0,
'App%5CController%5CJury%5CUserController%24kernel' => 0,
'App%5CController%5CJury%5CUserController%24eventLogService' => 0,
'App%5CController%5CJury%5CUserController%24tokenStorage' => 0,
'App%5CController%5CPublicController' => 263,
'App%5CController%5CPublicController%23__construct' => 0,
'App%5CController%5CPublicController%23scoreboardAction' => 264,
'App%5CController%5CPublicController%23changeContestAction' => 265,
'App%5CController%5CPublicController%23teamAction' => 266,
'App%5CController%5CPublicController%23problemsAction' => 267,
'App%5CController%5CPublicController%23problemTextAction' => 268,
'App%5CController%5CPublicController%23attachmentAction' => 269,
'App%5CController%5CPublicController%23sampleZipAction' => 270,
'App%5CController%5CPublicController%23getBinaryFile' => 0,
'App%5CController%5CPublicController%24dj' => 0,
'App%5CController%5CPublicController%24config' => 0,
'App%5CController%5CPublicController%24scoreboardService' => 0,
'App%5CController%5CPublicController%24stats' => 0,
'App%5CController%5CPublicController%24em' => 0,
'App%5CController%5CRootController' => 271,
'App%5CController%5CRootController%23__construct' => 0,
'App%5CController%5CRootController%23redirectAction' => 272,
'App%5CController%5CRootController%24dj' => 0,
'App%5CController%5CSecurityController' => 0,
'App%5CController%5CSecurityController%23__construct' => 0,
'App%5CController%5CSecurityController%23loginAction' => 273,
'App%5CController%5CSecurityController%23registerAction' => 274,
'App%5CController%5CSecurityController%24dj' => 0,
'App%5CController%5CSecurityController%24config' => 0,
'App%5CController%5CSecurityController%24em' => 0,
'App%5CController%5CTeam%5CClarificationController' => 275,
'App%5CController%5CTeam%5CClarificationController%23__construct' => 0,
'App%5CController%5CTeam%5CClarificationController%23viewAction' => 276,
'App%5CController%5CTeam%5CClarificationController%23addAction' => 277,
'App%5CController%5CTeam%5CClarificationController%23newClarificationHelper' => 0,
'App%5CController%5CTeam%5CClarificationController%24dj' => 0,
'App%5CController%5CTeam%5CClarificationController%24config' => 0,
'App%5CController%5CTeam%5CClarificationController%24em' => 0,
'App%5CController%5CTeam%5CClarificationController%24eventLogService' => 0,
'App%5CController%5CTeam%5CClarificationController%24formFactory' => 0,
'App%5CController%5CTeam%5CMiscController' => 275,
'App%5CController%5CTeam%5CMiscController%23__construct' => 0,
'App%5CController%5CTeam%5CMiscController%23homeAction' => 278,
'App%5CController%5CTeam%5CMiscController%23changeContestAction' => 279,
'App%5CController%5CTeam%5CMiscController%23printAction' => 280,
'App%5CController%5CTeam%5CMiscController%23docsAction' => 281,
'App%5CController%5CTeam%5CMiscController%24dj' => 0,
'App%5CController%5CTeam%5CMiscController%24config' => 0,
'App%5CController%5CTeam%5CMiscController%24em' => 0,
'App%5CController%5CTeam%5CMiscController%24scoreboardService' => 0,
'App%5CController%5CTeam%5CMiscController%24submissionService' => 0,
'App%5CController%5CTeam%5CProblemController' => 282,
'App%5CController%5CTeam%5CProblemController%23__construct' => 0,
'App%5CController%5CTeam%5CProblemController%23problemsAction' => 283,
'App%5CController%5CTeam%5CProblemController%23problemTextAction' => 284,
'App%5CController%5CTeam%5CProblemController%23attachmentAction' => 285,
'App%5CController%5CTeam%5CProblemController%23sampleZipAction' => 286,
'App%5CController%5CTeam%5CProblemController%23getBinaryFile' => 0,
'App%5CController%5CTeam%5CProblemController%24dj' => 0,
'App%5CController%5CTeam%5CProblemController%24config' => 0,
'App%5CController%5CTeam%5CProblemController%24stats' => 0,
'App%5CController%5CTeam%5CProblemController%24em' => 0,
'App%5CController%5CTeam%5CScoreboardController' => 282,
'App%5CController%5CTeam%5CScoreboardController%23__construct' => 0,
'App%5CController%5CTeam%5CScoreboardController%23scoreboardAction' => 287,
'App%5CController%5CTeam%5CScoreboardController%23teamAction' => 288,
'App%5CController%5CTeam%5CScoreboardController%24dj' => 0,
'App%5CController%5CTeam%5CScoreboardController%24config' => 0,
'App%5CController%5CTeam%5CScoreboardController%24scoreboardService' => 0,
'App%5CController%5CTeam%5CScoreboardController%24em' => 0,
'App%5CController%5CTeam%5CSubmissionController' => 282,
'App%5CController%5CTeam%5CSubmissionController%23__construct' => 0,
'App%5CController%5CTeam%5CSubmissionController%23createAction' => 289,
'App%5CController%5CTeam%5CSubmissionController%23viewAction' => 290,
'App%5CController%5CTeam%5CSubmissionController%23downloadAction' => 291,
'App%5CController%5CTeam%5CSubmissionController%24em' => 0,
'App%5CController%5CTeam%5CSubmissionController%24submissionService' => 0,
'App%5CController%5CTeam%5CSubmissionController%24dj' => 0,
'App%5CController%5CTeam%5CSubmissionController%24config' => 0,
'App%5CController%5CTeam%5CSubmissionController%24formFactory' => 0,
'App%5CEntity%5CAssetEntityInterface' => 0,
'App%5CEntity%5CAssetEntityInterface%23getAssetProperties' => 0,
'App%5CEntity%5CAssetEntityInterface%23getAssetFile' => 0,
'App%5CEntity%5CAssetEntityInterface%23isClearAsset' => 0,
'App%5CEntity%5CAuditLog' => 292,
'App%5CEntity%5CAuditLog%23getLogid' => 0,
'App%5CEntity%5CAuditLog%23setLogtime' => 0,
'App%5CEntity%5CAuditLog%23getLogtime' => 0,
'App%5CEntity%5CAuditLog%23setCid' => 0,
'App%5CEntity%5CAuditLog%23getCid' => 0,
'App%5CEntity%5CAuditLog%23setUser' => 0,
'App%5CEntity%5CAuditLog%23getUser' => 0,
'App%5CEntity%5CAuditLog%23setDatatype' => 0,
'App%5CEntity%5CAuditLog%23getDatatype' => 0,
'App%5CEntity%5CAuditLog%23setDataid' => 0,
'App%5CEntity%5CAuditLog%23getDataid' => 0,
'App%5CEntity%5CAuditLog%23setAction' => 0,
'App%5CEntity%5CAuditLog%23getAction' => 0,
'App%5CEntity%5CAuditLog%23setExtrainfo' => 0,
'App%5CEntity%5CAuditLog%23getExtrainfo' => 0,
'App%5CEntity%5CAuditLog%24logid' => 293,
'App%5CEntity%5CAuditLog%24logtime' => 294,
'App%5CEntity%5CAuditLog%24cid' => 295,
'App%5CEntity%5CAuditLog%24user' => 296,
'App%5CEntity%5CAuditLog%24datatype' => 297,
'App%5CEntity%5CAuditLog%24dataid' => 298,
'App%5CEntity%5CAuditLog%24action' => 299,
'App%5CEntity%5CAuditLog%24extrainfo' => 300,
'App%5CEntity%5CBalloon' => 301,
'App%5CEntity%5CBalloon%23getBalloonid' => 0,
'App%5CEntity%5CBalloon%23setDone' => 0,
'App%5CEntity%5CBalloon%23getDone' => 0,
'App%5CEntity%5CBalloon%23setSubmission' => 0,
'App%5CEntity%5CBalloon%23getSubmission' => 0,
'App%5CEntity%5CBalloon%24balloonid' => 302,
'App%5CEntity%5CBalloon%24done' => 303,
'App%5CEntity%5CBalloon%24submission' => 304,
'App%5CEntity%5CBaseApiEntity' => 0,
'App%5CEntity%5CBaseApiEntity%23getApiIdField' => 0,
'App%5CEntity%5CBaseApiEntity%23getApiId' => 0,
'App%5CEntity%5CClarification' => 305,
'App%5CEntity%5CClarification%23__construct' => 0,
'App%5CEntity%5CClarification%23setClarid' => 0,
'App%5CEntity%5CClarification%23getClarid' => 0,
'App%5CEntity%5CClarification%23setExternalid' => 0,
'App%5CEntity%5CClarification%23getExternalid' => 0,
'App%5CEntity%5CClarification%23setSubmittime' => 0,
'App%5CEntity%5CClarification%23getSubmittime' => 0,
'App%5CEntity%5CClarification%23getAbsoluteSubmitTime' => 306,
'App%5CEntity%5CClarification%23getRelativeSubmitTime' => 307,
'App%5CEntity%5CClarification%23setJuryMember' => 0,
'App%5CEntity%5CClarification%23getJuryMember' => 0,
'App%5CEntity%5CClarification%23setCategory' => 0,
'App%5CEntity%5CClarification%23getCategory' => 0,
'App%5CEntity%5CClarification%23setQueue' => 0,
'App%5CEntity%5CClarification%23getQueue' => 0,
'App%5CEntity%5CClarification%23setBody' => 0,
'App%5CEntity%5CClarification%23getBody' => 0,
'App%5CEntity%5CClarification%23setAnswered' => 0,
'App%5CEntity%5CClarification%23getAnswered' => 0,
'App%5CEntity%5CClarification%23setProblem' => 0,
'App%5CEntity%5CClarification%23getProblem' => 0,
'App%5CEntity%5CClarification%23getProblemId' => 308,
'App%5CEntity%5CClarification%23setContest' => 0,
'App%5CEntity%5CClarification%23getContest' => 0,
'App%5CEntity%5CClarification%23setInReplyTo' => 0,
'App%5CEntity%5CClarification%23getInReplyTo' => 0,
'App%5CEntity%5CClarification%23getInReplyToId' => 309,
'App%5CEntity%5CClarification%23addReply' => 0,
'App%5CEntity%5CClarification%23removeReply' => 0,
'App%5CEntity%5CClarification%23getReplies' => 0,
'App%5CEntity%5CClarification%23setSender' => 0,
'App%5CEntity%5CClarification%23getSender' => 0,
'App%5CEntity%5CClarification%23getSenderId' => 310,
'App%5CEntity%5CClarification%23setRecipient' => 0,
'App%5CEntity%5CClarification%23getRecipient' => 0,
'App%5CEntity%5CClarification%23getRecipientId' => 311,
'App%5CEntity%5CClarification%23getExternalRelationships' => 0,
'App%5CEntity%5CClarification%23getSummary' => 0,
'App%5CEntity%5CClarification%24clarid' => 312,
'App%5CEntity%5CClarification%24externalid' => 313,
'App%5CEntity%5CClarification%24submittime' => 314,
'App%5CEntity%5CClarification%24jury_member' => 315,
'App%5CEntity%5CClarification%24category' => 316,
'App%5CEntity%5CClarification%24queue' => 317,
'App%5CEntity%5CClarification%24body' => 318,
'App%5CEntity%5CClarification%24answered' => 319,
'App%5CEntity%5CClarification%24problem' => 320,
'App%5CEntity%5CClarification%24contest' => 321,
'App%5CEntity%5CClarification%24in_reply_to' => 322,
'App%5CEntity%5CClarification%24replies' => 323,
'App%5CEntity%5CClarification%24sender' => 324,
'App%5CEntity%5CClarification%24recipient' => 325,
'App%5CEntity%5CConfiguration' => 326,
'App%5CEntity%5CConfiguration%23getConfigid' => 0,
'App%5CEntity%5CConfiguration%23setName' => 0,
'App%5CEntity%5CConfiguration%23getName' => 0,
'App%5CEntity%5CConfiguration%23setValue' => 0,
'App%5CEntity%5CConfiguration%23getValue' => 0,
'App%5CEntity%5CConfiguration%24configid' => 327,
'App%5CEntity%5CConfiguration%24name' => 328,
'App%5CEntity%5CConfiguration%24value' => 329,
'App%5CEntity%5CContest' => 330,
'App%5CEntity%5CContest%23__construct' => 0,
'App%5CEntity%5CContest%23getCid' => 0,
'App%5CEntity%5CContest%23setExternalid' => 0,
'App%5CEntity%5CContest%23getExternalid' => 0,
'App%5CEntity%5CContest%23setName' => 0,
'App%5CEntity%5CContest%23getName' => 0,
'App%5CEntity%5CContest%23setShortname' => 0,
'App%5CEntity%5CContest%23getShortname' => 0,
'App%5CEntity%5CContest%23getShortDescription' => 0,
'App%5CEntity%5CContest%23getActivatetime' => 0,
'App%5CEntity%5CContest%23setStarttime' => 0,
'App%5CEntity%5CContest%23getStarttime' => 0,
'App%5CEntity%5CContest%23getStartTimeObject' => 331,
'App%5CEntity%5CContest%23setStarttimeEnabled' => 0,
'App%5CEntity%5CContest%23getStarttimeEnabled' => 0,
'App%5CEntity%5CContest%23getFreezetime' => 0,
'App%5CEntity%5CContest%23getEndtime' => 0,
'App%5CEntity%5CContest%23getEndTimeObject' => 332,
'App%5CEntity%5CContest%23getUnfreezetime' => 0,
'App%5CEntity%5CContest%23getFinalizetime' => 0,
'App%5CEntity%5CContest%23setFinalizetime' => 0,
'App%5CEntity%5CContest%23getFinalizecomment' => 0,
'App%5CEntity%5CContest%23setFinalizecomment' => 0,
'App%5CEntity%5CContest%23getB' => 0,
'App%5CEntity%5CContest%23setB' => 0,
'App%5CEntity%5CContest%23getDeactivatetime' => 0,
'App%5CEntity%5CContest%23setActivatetimeString' => 0,
'App%5CEntity%5CContest%23getActivatetimeString' => 0,
'App%5CEntity%5CContest%23setStarttimeString' => 0,
'App%5CEntity%5CContest%23getStarttimeString' => 0,
'App%5CEntity%5CContest%23setFreezetimeString' => 0,
'App%5CEntity%5CContest%23getFreezetimeString' => 0,
'App%5CEntity%5CContest%23setEndtimeString' => 0,
'App%5CEntity%5CContest%23getEndtimeString' => 0,
'App%5CEntity%5CContest%23setUnfreezetimeString' => 0,
'App%5CEntity%5CContest%23getUnfreezetimeString' => 0,
'App%5CEntity%5CContest%23setDeactivatetimeString' => 0,
'App%5CEntity%5CContest%23getDeactivatetimeString' => 0,
'App%5CEntity%5CContest%23setActivatetime' => 0,
'App%5CEntity%5CContest%23setFreezetime' => 0,
'App%5CEntity%5CContest%23setEndtime' => 0,
'App%5CEntity%5CContest%23setUnfreezetime' => 0,
'App%5CEntity%5CContest%23setDeactivatetime' => 0,
'App%5CEntity%5CContest%23setEnabled' => 0,
'App%5CEntity%5CContest%23getEnabled' => 0,
'App%5CEntity%5CContest%23setProcessBalloons' => 0,
'App%5CEntity%5CContest%23getProcessBalloons' => 0,
'App%5CEntity%5CContest%23setMedalsEnabled' => 0,
'App%5CEntity%5CContest%23getMedalsEnabled' => 0,
'App%5CEntity%5CContest%23getMedalCategories' => 0,
'App%5CEntity%5CContest%23addMedalCategory' => 0,
'App%5CEntity%5CContest%23removeMedalCategories' => 0,
'App%5CEntity%5CContest%23setGoldMedals' => 0,
'App%5CEntity%5CContest%23getGoldMedals' => 0,
'App%5CEntity%5CContest%23setSilverMedals' => 0,
'App%5CEntity%5CContest%23getSilverMedals' => 0,
'App%5CEntity%5CContest%23setBronzeMedals' => 0,
'App%5CEntity%5CContest%23getBronzeMedals' => 0,
'App%5CEntity%5CContest%23setPublic' => 0,
'App%5CEntity%5CContest%23getPublic' => 0,
'App%5CEntity%5CContest%23setOpenToAllTeams' => 0,
'App%5CEntity%5CContest%23isOpenToAllTeams' => 0,
'App%5CEntity%5CContest%23addTeam' => 0,
'App%5CEntity%5CContest%23removeTeam' => 0,
'App%5CEntity%5CContest%23getTeams' => 0,
'App%5CEntity%5CContest%23addProblem' => 0,
'App%5CEntity%5CContest%23removeProblem' => 0,
'App%5CEntity%5CContest%23getProblems' => 0,
'App%5CEntity%5CContest%23addClarification' => 0,
'App%5CEntity%5CContest%23removeClarification' => 0,
'App%5CEntity%5CContest%23getClarifications' => 0,
'App%5CEntity%5CContest%23addSubmission' => 0,
'App%5CEntity%5CContest%23removeSubmission' => 0,
'App%5CEntity%5CContest%23getSubmissions' => 0,
'App%5CEntity%5CContest%23addInternalError' => 0,
'App%5CEntity%5CContest%23removeInternalError' => 0,
'App%5CEntity%5CContest%23getInternalErrors' => 0,
'App%5CEntity%5CContest%23getDuration' => 333,
'App%5CEntity%5CContest%23getScoreboardFreezeDuration' => 333,
'App%5CEntity%5CContest%23isActive' => 0,
'App%5CEntity%5CContest%23getAbsoluteTime' => 0,
'App%5CEntity%5CContest%23addRemovedInterval' => 0,
'App%5CEntity%5CContest%23removeRemovedInterval' => 0,
'App%5CEntity%5CContest%23getRemovedIntervals' => 0,
'App%5CEntity%5CContest%23getContestTime' => 0,
'App%5CEntity%5CContest%23getDataForJuryInterface' => 0,
'App%5CEntity%5CContest%23getState' => 0,
'App%5CEntity%5CContest%23getMinutesRemaining' => 0,
'App%5CEntity%5CContest%23getFreezeData' => 0,
'App%5CEntity%5CContest%23updateTimes' => 334,
'App%5CEntity%5CContest%23validate' => 335,
'App%5CEntity%5CContest%23isTimeInContest' => 0,
'App%5CEntity%5CContest%23getCountdownString' => 0,
'App%5CEntity%5CContest%23getOpenToAllTeams' => 0,
'App%5CEntity%5CContest%23getTeamCategories' => 0,
'App%5CEntity%5CContest%23addTeamCategory' => 0,
'App%5CEntity%5CContest%23removeTeamCategory' => 0,
'App%5CEntity%5CContest%23getExternalContestSources' => 0,
'App%5CEntity%5CContest%23addExternalContestSource' => 0,
'App%5CEntity%5CContest%23removeExternalContestSource' => 0,
'App%5CEntity%5CContest%23getBannerFile' => 0,
'App%5CEntity%5CContest%23setBannerFile' => 0,
'App%5CEntity%5CContest%23isClearBanner' => 0,
'App%5CEntity%5CContest%23setClearBanner' => 0,
'App%5CEntity%5CContest%23getAssetProperties' => 0,
'App%5CEntity%5CContest%23getAssetFile' => 0,
'App%5CEntity%5CContest%23isClearAsset' => 0,
'App%5CEntity%5CContest%24cid' => 336,
'App%5CEntity%5CContest%24externalid' => 337,
'App%5CEntity%5CContest%24name' => 338,
'App%5CEntity%5CContest%24shortname' => 339,
'App%5CEntity%5CContest%24activatetime' => 340,
'App%5CEntity%5CContest%24starttime' => 341,
'App%5CEntity%5CContest%24starttimeEnabled' => 342,
'App%5CEntity%5CContest%24freezetime' => 343,
'App%5CEntity%5CContest%24endtime' => 344,
'App%5CEntity%5CContest%24unfreezetime' => 345,
'App%5CEntity%5CContest%24finalizetime' => 346,
'App%5CEntity%5CContest%24finalizecomment' => 347,
'App%5CEntity%5CContest%24b' => 348,
'App%5CEntity%5CContest%24medalsEnabled' => 349,
'App%5CEntity%5CContest%24medal_categories' => 350,
'App%5CEntity%5CContest%24goldMedals' => 351,
'App%5CEntity%5CContest%24silverMedals' => 352,
'App%5CEntity%5CContest%24bronzeMedals' => 353,
'App%5CEntity%5CContest%24deactivatetime' => 354,
'App%5CEntity%5CContest%24activatetimeString' => 355,
'App%5CEntity%5CContest%24starttimeString' => 356,
'App%5CEntity%5CContest%24freezetimeString' => 357,
'App%5CEntity%5CContest%24endtimeString' => 358,
'App%5CEntity%5CContest%24unfreezetimeString' => 359,
'App%5CEntity%5CContest%24deactivatetimeString' => 360,
'App%5CEntity%5CContest%24enabled' => 361,
'App%5CEntity%5CContest%24processBalloons' => 362,
'App%5CEntity%5CContest%24public' => 363,
'App%5CEntity%5CContest%24bannerFile' => 364,
'App%5CEntity%5CContest%24clearBanner' => 365,
'App%5CEntity%5CContest%24openToAllTeams' => 366,
'App%5CEntity%5CContest%24teams' => 367,
'App%5CEntity%5CContest%24team_categories' => 368,
'App%5CEntity%5CContest%24clarifications' => 369,
'App%5CEntity%5CContest%24submissions' => 370,
'App%5CEntity%5CContest%24problems' => 371,
'App%5CEntity%5CContest%24internal_errors' => 372,
'App%5CEntity%5CContest%24removedIntervals' => 373,
'App%5CEntity%5CContest%24externalContestSources' => 374,
'App%5CEntity%5CContestProblem' => 375,
'App%5CEntity%5CContestProblem%23__construct' => 0,
'App%5CEntity%5CContestProblem%23getCid' => 0,
'App%5CEntity%5CContestProblem%23getProbid' => 0,
'App%5CEntity%5CContestProblem%23setShortname' => 0,
'App%5CEntity%5CContestProblem%23getShortname' => 0,
'App%5CEntity%5CContestProblem%23getShortDescription' => 0,
'App%5CEntity%5CContestProblem%23setPoints' => 0,
'App%5CEntity%5CContestProblem%23getPoints' => 0,
'App%5CEntity%5CContestProblem%23setAllowSubmit' => 0,
'App%5CEntity%5CContestProblem%23getAllowSubmit' => 0,
'App%5CEntity%5CContestProblem%23setAllowJudge' => 0,
'App%5CEntity%5CContestProblem%23getAllowJudge' => 0,
'App%5CEntity%5CContestProblem%23setColor' => 0,
'App%5CEntity%5CContestProblem%23getColor' => 0,
'App%5CEntity%5CContestProblem%23setLazyEvalResults' => 0,
'App%5CEntity%5CContestProblem%23getLazyEvalResults' => 0,
'App%5CEntity%5CContestProblem%23setContest' => 0,
'App%5CEntity%5CContestProblem%23getContest' => 0,
'App%5CEntity%5CContestProblem%23setProblem' => 0,
'App%5CEntity%5CContestProblem%23getProblem' => 0,
'App%5CEntity%5CContestProblem%23addSubmission' => 0,
'App%5CEntity%5CContestProblem%23removeSubmission' => 0,
'App%5CEntity%5CContestProblem%23getSubmissions' => 0,
'App%5CEntity%5CContestProblem%23getExternalId' => 0,
'App%5CEntity%5CContestProblem%23getApiId' => 0,
'App%5CEntity%5CContestProblem%23validate' => 335,
'App%5CEntity%5CContestProblem%24shortname' => 376,
'App%5CEntity%5CContestProblem%24points' => 377,
'App%5CEntity%5CContestProblem%24allowSubmit' => 378,
'App%5CEntity%5CContestProblem%24allowJudge' => 379,
'App%5CEntity%5CContestProblem%24color' => 380,
'App%5CEntity%5CContestProblem%24lazyEvalResults' => 381,
'App%5CEntity%5CContestProblem%24contest' => 382,
'App%5CEntity%5CContestProblem%24problem' => 383,
'App%5CEntity%5CContestProblem%24submissions' => 384,
'App%5CEntity%5CDebugPackage' => 385,
'App%5CEntity%5CDebugPackage%23getDebugPackageId' => 0,
'App%5CEntity%5CDebugPackage%23getJudging' => 0,
'App%5CEntity%5CDebugPackage%23setJudging' => 0,
'App%5CEntity%5CDebugPackage%23getFilename' => 0,
'App%5CEntity%5CDebugPackage%23setFilename' => 0,
'App%5CEntity%5CDebugPackage%23getJudgehost' => 0,
'App%5CEntity%5CDebugPackage%23setJudgehost' => 0,
'App%5CEntity%5CDebugPackage%24debug_package_id' => 386,
'App%5CEntity%5CDebugPackage%24judging' => 387,
'App%5CEntity%5CDebugPackage%24filename' => 388,
'App%5CEntity%5CDebugPackage%24judgehost' => 389,
'App%5CEntity%5CEvent' => 390,
'App%5CEntity%5CEvent%23setEventid' => 0,
'App%5CEntity%5CEvent%23getEventid' => 0,
'App%5CEntity%5CEvent%23setEventtime' => 0,
'App%5CEntity%5CEvent%23getEventtime' => 0,
'App%5CEntity%5CEvent%23setEndpointtype' => 0,
'App%5CEntity%5CEvent%23getEndpointtype' => 0,
'App%5CEntity%5CEvent%23setEndpointid' => 0,
'App%5CEntity%5CEvent%23getEndpointid' => 0,
'App%5CEntity%5CEvent%23setAction' => 0,
'App%5CEntity%5CEvent%23getAction' => 0,
'App%5CEntity%5CEvent%23setContent' => 0,
'App%5CEntity%5CEvent%23getContent' => 0,
'App%5CEntity%5CEvent%23setContest' => 0,
'App%5CEntity%5CEvent%23getContest' => 0,
'App%5CEntity%5CEvent%24eventid' => 391,
'App%5CEntity%5CEvent%24eventtime' => 392,
'App%5CEntity%5CEvent%24endpointtype' => 393,
'App%5CEntity%5CEvent%24endpointid' => 394,
'App%5CEntity%5CEvent%24action' => 395,
'App%5CEntity%5CEvent%24content' => 396,
'App%5CEntity%5CEvent%24contest' => 397,
'App%5CEntity%5CExecutable' => 398,
'App%5CEntity%5CExecutable%23__construct' => 0,
'App%5CEntity%5CExecutable%23setExecid' => 0,
'App%5CEntity%5CExecutable%23getExecid' => 0,
'App%5CEntity%5CExecutable%23setDescription' => 0,
'App%5CEntity%5CExecutable%23getDescription' => 0,
'App%5CEntity%5CExecutable%23getShortDescription' => 0,
'App%5CEntity%5CExecutable%23setType' => 0,
'App%5CEntity%5CExecutable%23getType' => 0,
'App%5CEntity%5CExecutable%23addLanguage' => 0,
'App%5CEntity%5CExecutable%23removeLanguage' => 0,
'App%5CEntity%5CExecutable%23getLanguages' => 0,
'App%5CEntity%5CExecutable%23addProblemsCompare' => 0,
'App%5CEntity%5CExecutable%23removeProblemsCompare' => 0,
'App%5CEntity%5CExecutable%23getProblemsCompare' => 0,
'App%5CEntity%5CExecutable%23addProblemsRun' => 0,
'App%5CEntity%5CExecutable%23removeProblemsRun' => 0,
'App%5CEntity%5CExecutable%23getProblemsRun' => 0,
'App%5CEntity%5CExecutable%23setImmutableExecutable' => 0,
'App%5CEntity%5CExecutable%23getImmutableExecutable' => 0,
'App%5CEntity%5CExecutable%23getZipfileContent' => 0,
'App%5CEntity%5CExecutable%24execid' => 399,
'App%5CEntity%5CExecutable%24description' => 400,
'App%5CEntity%5CExecutable%24type' => 401,
'App%5CEntity%5CExecutable%24immutableExecutable' => 402,
'App%5CEntity%5CExecutable%24languages' => 403,
'App%5CEntity%5CExecutable%24problems_compare' => 404,
'App%5CEntity%5CExecutable%24problems_run' => 405,
'App%5CEntity%5CExecutableFile' => 406,
'App%5CEntity%5CExecutableFile%23getExecFileId' => 0,
'App%5CEntity%5CExecutableFile%23setExecFileId' => 0,
'App%5CEntity%5CExecutableFile%23setFilename' => 0,
'App%5CEntity%5CExecutableFile%23getFilename' => 0,
'App%5CEntity%5CExecutableFile%23setRank' => 0,
'App%5CEntity%5CExecutableFile%23getRank' => 0,
'App%5CEntity%5CExecutableFile%23setImmutableExecutable' => 0,
'App%5CEntity%5CExecutableFile%23getImmutableExecutable' => 0,
'App%5CEntity%5CExecutableFile%23setFileContent' => 0,
'App%5CEntity%5CExecutableFile%23getHash' => 0,
'App%5CEntity%5CExecutableFile%23getFileContent' => 0,
'App%5CEntity%5CExecutableFile%23setIsExecutable' => 0,
'App%5CEntity%5CExecutableFile%23isExecutable' => 0,
'App%5CEntity%5CExecutableFile%24execfileid' => 407,
'App%5CEntity%5CExecutableFile%24filename' => 408,
'App%5CEntity%5CExecutableFile%24rank' => 409,
'App%5CEntity%5CExecutableFile%24immutableExecutable' => 410,
'App%5CEntity%5CExecutableFile%24fileContent' => 411,
'App%5CEntity%5CExecutableFile%24hash' => 412,
'App%5CEntity%5CExecutableFile%24isExecutable' => 413,
'App%5CEntity%5CExternalContestSource' => 414,
'App%5CEntity%5CExternalContestSource%23__construct' => 0,
'App%5CEntity%5CExternalContestSource%23getExtsourceid' => 0,
'App%5CEntity%5CExternalContestSource%23isEnabled' => 0,
'App%5CEntity%5CExternalContestSource%23setEnabled' => 0,
'App%5CEntity%5CExternalContestSource%23getType' => 0,
'App%5CEntity%5CExternalContestSource%23getReadableType' => 0,
'App%5CEntity%5CExternalContestSource%23setType' => 0,
'App%5CEntity%5CExternalContestSource%23getSource' => 0,
'App%5CEntity%5CExternalContestSource%23setSource' => 0,
'App%5CEntity%5CExternalContestSource%23getUsername' => 0,
'App%5CEntity%5CExternalContestSource%23setUsername' => 0,
'App%5CEntity%5CExternalContestSource%23getPassword' => 0,
'App%5CEntity%5CExternalContestSource%23setPassword' => 0,
'App%5CEntity%5CExternalContestSource%23getLastEventId' => 0,
'App%5CEntity%5CExternalContestSource%23setLastEventId' => 0,
'App%5CEntity%5CExternalContestSource%23getLastPollTime' => 0,
'App%5CEntity%5CExternalContestSource%23setLastPollTime' => 0,
'App%5CEntity%5CExternalContestSource%23setContest' => 0,
'App%5CEntity%5CExternalContestSource%23getContest' => 0,
'App%5CEntity%5CExternalContestSource%23getExternalSourceWarnings' => 0,
'App%5CEntity%5CExternalContestSource%23addExternalSourceWarning' => 0,
'App%5CEntity%5CExternalContestSource%23removeExternalSourceWarning' => 0,
'App%5CEntity%5CExternalContestSource%23getShortDescription' => 0,
'App%5CEntity%5CExternalContestSource%23validate' => 335,
'App%5CEntity%5CExternalContestSource%23readableType' => 0,
'App%5CEntity%5CExternalContestSource%24extsourceid' => 415,
'App%5CEntity%5CExternalContestSource%24enabled' => 416,
'App%5CEntity%5CExternalContestSource%24type' => 417,
'App%5CEntity%5CExternalContestSource%24source' => 418,
'App%5CEntity%5CExternalContestSource%24username' => 419,
'App%5CEntity%5CExternalContestSource%24password' => 420,
'App%5CEntity%5CExternalContestSource%24lastEventId' => 421,
'App%5CEntity%5CExternalContestSource%24lastPollTime' => 422,
'App%5CEntity%5CExternalContestSource%24contest' => 423,
'App%5CEntity%5CExternalContestSource%24warnings' => 424,
'App%5CEntity%5CExternalJudgement' => 425,
'App%5CEntity%5CExternalJudgement%23__construct' => 0,
'App%5CEntity%5CExternalJudgement%23getExtjudgementid' => 0,
'App%5CEntity%5CExternalJudgement%23setExternalid' => 0,
'App%5CEntity%5CExternalJudgement%23getExternalid' => 0,
'App%5CEntity%5CExternalJudgement%23setResult' => 0,
'App%5CEntity%5CExternalJudgement%23getResult' => 0,
'App%5CEntity%5CExternalJudgement%23setVerified' => 0,
'App%5CEntity%5CExternalJudgement%23getVerified' => 0,
'App%5CEntity%5CExternalJudgement%23setJuryMember' => 0,
'App%5CEntity%5CExternalJudgement%23getJuryMember' => 0,
'App%5CEntity%5CExternalJudgement%23setVerifyComment' => 0,
'App%5CEntity%5CExternalJudgement%23getVerifyComment' => 0,
'App%5CEntity%5CExternalJudgement%23setStarttime' => 0,
'App%5CEntity%5CExternalJudgement%23getStarttime' => 0,
'App%5CEntity%5CExternalJudgement%23setEndtime' => 0,
'App%5CEntity%5CExternalJudgement%23getEndtime' => 0,
'App%5CEntity%5CExternalJudgement%23setValid' => 0,
'App%5CEntity%5CExternalJudgement%23getValid' => 0,
'App%5CEntity%5CExternalJudgement%23setContest' => 0,
'App%5CEntity%5CExternalJudgement%23getContest' => 0,
'App%5CEntity%5CExternalJudgement%23setSubmission' => 0,
'App%5CEntity%5CExternalJudgement%23getSubmission' => 0,
'App%5CEntity%5CExternalJudgement%23addExternalRun' => 0,
'App%5CEntity%5CExternalJudgement%23removeExternalRun' => 0,
'App%5CEntity%5CExternalJudgement%23getExternalRuns' => 0,
'App%5CEntity%5CExternalJudgement%23getMaxRuntime' => 0,
'App%5CEntity%5CExternalJudgement%23getSumRuntime' => 0,
'App%5CEntity%5CExternalJudgement%24extjudgementid' => 426,
'App%5CEntity%5CExternalJudgement%24externalid' => 427,
'App%5CEntity%5CExternalJudgement%24result' => 428,
'App%5CEntity%5CExternalJudgement%24verified' => 429,
'App%5CEntity%5CExternalJudgement%24jury_member' => 430,
'App%5CEntity%5CExternalJudgement%24verify_comment' => 431,
'App%5CEntity%5CExternalJudgement%24starttime' => 432,
'App%5CEntity%5CExternalJudgement%24endtime' => 433,
'App%5CEntity%5CExternalJudgement%24valid' => 434,
'App%5CEntity%5CExternalJudgement%24contest' => 435,
'App%5CEntity%5CExternalJudgement%24submission' => 436,
'App%5CEntity%5CExternalJudgement%24external_runs' => 437,
'App%5CEntity%5CExternalRelationshipEntityInterface' => 0,
'App%5CEntity%5CExternalRelationshipEntityInterface%23getExternalRelationships' => 0,
'App%5CEntity%5CExternalRun' => 438,
'App%5CEntity%5CExternalRun%23getExtrunid' => 0,
'App%5CEntity%5CExternalRun%23setExternalid' => 0,
'App%5CEntity%5CExternalRun%23getExternalid' => 0,
'App%5CEntity%5CExternalRun%23setResult' => 0,
'App%5CEntity%5CExternalRun%23getResult' => 0,
'App%5CEntity%5CExternalRun%23setEndtime' => 0,
'App%5CEntity%5CExternalRun%23getEndtime' => 0,
'App%5CEntity%5CExternalRun%23setRuntime' => 0,
'App%5CEntity%5CExternalRun%23getRuntime' => 0,
'App%5CEntity%5CExternalRun%23setExternalJudgement' => 0,
'App%5CEntity%5CExternalRun%23getExternalJudgement' => 0,
'App%5CEntity%5CExternalRun%23setTestcase' => 0,
'App%5CEntity%5CExternalRun%23getTestcase' => 0,
'App%5CEntity%5CExternalRun%23setContest' => 0,
'App%5CEntity%5CExternalRun%23getContest' => 0,
'App%5CEntity%5CExternalRun%24extrunid' => 439,
'App%5CEntity%5CExternalRun%24externalid' => 440,
'App%5CEntity%5CExternalRun%24result' => 441,
'App%5CEntity%5CExternalRun%24endtime' => 442,
'App%5CEntity%5CExternalRun%24runtime' => 443,
'App%5CEntity%5CExternalRun%24external_judgement' => 444,
'App%5CEntity%5CExternalRun%24testcase' => 445,
'App%5CEntity%5CExternalRun%24contest' => 435,
'App%5CEntity%5CExternalSourceWarning' => 446,
'App%5CEntity%5CExternalSourceWarning%23getExtwarningid' => 0,
'App%5CEntity%5CExternalSourceWarning%23getLastEventId' => 0,
'App%5CEntity%5CExternalSourceWarning%23setLastEventId' => 0,
'App%5CEntity%5CExternalSourceWarning%23getLastTime' => 0,
'App%5CEntity%5CExternalSourceWarning%23setLastTime' => 0,
'App%5CEntity%5CExternalSourceWarning%23getEntityType' => 0,
'App%5CEntity%5CExternalSourceWarning%23setEntityType' => 0,
'App%5CEntity%5CExternalSourceWarning%23getEntityId' => 0,
'App%5CEntity%5CExternalSourceWarning%23setEntityId' => 0,
'App%5CEntity%5CExternalSourceWarning%23getType' => 0,
'App%5CEntity%5CExternalSourceWarning%23setType' => 0,
'App%5CEntity%5CExternalSourceWarning%23getHash' => 0,
'App%5CEntity%5CExternalSourceWarning%23setHash' => 0,
'App%5CEntity%5CExternalSourceWarning%23getContent' => 0,
'App%5CEntity%5CExternalSourceWarning%23setContent' => 0,
'App%5CEntity%5CExternalSourceWarning%23getExternalContestSource' => 0,
'App%5CEntity%5CExternalSourceWarning%23setExternalContestSource' => 0,
'App%5CEntity%5CExternalSourceWarning%23fillhash' => 447,
'App%5CEntity%5CExternalSourceWarning%23calculateHash' => 0,
'App%5CEntity%5CExternalSourceWarning%23readableType' => 0,
'App%5CEntity%5CExternalSourceWarning%24extwarningid' => 448,
'App%5CEntity%5CExternalSourceWarning%24lastEventId' => 449,
'App%5CEntity%5CExternalSourceWarning%24lastTime' => 450,
'App%5CEntity%5CExternalSourceWarning%24entityType' => 451,
'App%5CEntity%5CExternalSourceWarning%24entityId' => 452,
'App%5CEntity%5CExternalSourceWarning%24type' => 453,
'App%5CEntity%5CExternalSourceWarning%24hash' => 454,
'App%5CEntity%5CExternalSourceWarning%24content' => 455,
'App%5CEntity%5CExternalSourceWarning%24externalContestSource' => 456,
'App%5CEntity%5CImmutableExecutable' => 457,
'App%5CEntity%5CImmutableExecutable%23__construct' => 0,
'App%5CEntity%5CImmutableExecutable%23getImmutableExecId' => 0,
'App%5CEntity%5CImmutableExecutable%23setUser' => 0,
'App%5CEntity%5CImmutableExecutable%23getUser' => 0,
'App%5CEntity%5CImmutableExecutable%23addFile' => 0,
'App%5CEntity%5CImmutableExecutable%23updateHash' => 0,
'App%5CEntity%5CImmutableExecutable%23getFiles' => 0,
'App%5CEntity%5CImmutableExecutable%23getHash' => 0,
'App%5CEntity%5CImmutableExecutable%24immutable_execid' => 458,
'App%5CEntity%5CImmutableExecutable%24user' => 459,
'App%5CEntity%5CImmutableExecutable%24files' => 460,
'App%5CEntity%5CImmutableExecutable%24hash' => 461,
'App%5CEntity%5CInternalError' => 462,
'App%5CEntity%5CInternalError%23__construct' => 0,
'App%5CEntity%5CInternalError%23setErrorid' => 0,
'App%5CEntity%5CInternalError%23getErrorid' => 0,
'App%5CEntity%5CInternalError%23setDescription' => 0,
'App%5CEntity%5CInternalError%23getDescription' => 0,
'App%5CEntity%5CInternalError%23setJudgehostlog' => 0,
'App%5CEntity%5CInternalError%23getJudgehostlog' => 0,
'App%5CEntity%5CInternalError%23setTime' => 0,
'App%5CEntity%5CInternalError%23getTime' => 0,
'App%5CEntity%5CInternalError%23setDisabled' => 0,
'App%5CEntity%5CInternalError%23getDisabled' => 0,
'App%5CEntity%5CInternalError%23setStatus' => 0,
'App%5CEntity%5CInternalError%23getStatus' => 0,
'App%5CEntity%5CInternalError%23setContest' => 0,
'App%5CEntity%5CInternalError%23getContest' => 0,
'App%5CEntity%5CInternalError%23setJudging' => 0,
'App%5CEntity%5CInternalError%23getJudging' => 0,
'App%5CEntity%5CInternalError%23getAffectedJudgings' => 0,
'App%5CEntity%5CInternalError%24errorid' => 463,
'App%5CEntity%5CInternalError%24description' => 464,
'App%5CEntity%5CInternalError%24judgehostlog' => 465,
'App%5CEntity%5CInternalError%24time' => 466,
'App%5CEntity%5CInternalError%24disabled' => 467,
'App%5CEntity%5CInternalError%24status' => 468,
'App%5CEntity%5CInternalError%24contest' => 469,
'App%5CEntity%5CInternalError%24judging' => 470,
'App%5CEntity%5CInternalError%24affectedJudgings' => 471,
'App%5CEntity%5CJudgeTask' => 472,
'App%5CEntity%5CJudgeTask%23__construct' => 0,
'App%5CEntity%5CJudgeTask%23getJudgetaskid' => 0,
'App%5CEntity%5CJudgeTask%23setJudgehost' => 0,
'App%5CEntity%5CJudgeTask%23getJudgehost' => 0,
'App%5CEntity%5CJudgeTask%23setType' => 0,
'App%5CEntity%5CJudgeTask%23getType' => 0,
'App%5CEntity%5CJudgeTask%23setPriority' => 0,
'App%5CEntity%5CJudgeTask%23getPriority' => 0,
'App%5CEntity%5CJudgeTask%23setJobId' => 0,
'App%5CEntity%5CJudgeTask%23getJobId' => 0,
'App%5CEntity%5CJudgeTask%23setUuid' => 0,
'App%5CEntity%5CJudgeTask%23getUuid' => 0,
'App%5CEntity%5CJudgeTask%23setSubmitid' => 0,
'App%5CEntity%5CJudgeTask%23getSubmitid' => 0,
'App%5CEntity%5CJudgeTask%23setCompileScriptId' => 0,
'App%5CEntity%5CJudgeTask%23getCompileScriptId' => 0,
'App%5CEntity%5CJudgeTask%23setRunScriptId' => 0,
'App%5CEntity%5CJudgeTask%23getRunScriptId' => 0,
'App%5CEntity%5CJudgeTask%23setCompareScriptId' => 0,
'App%5CEntity%5CJudgeTask%23getCompareScriptId' => 0,
'App%5CEntity%5CJudgeTask%23setTestcaseId' => 0,
'App%5CEntity%5CJudgeTask%23getTestcaseId' => 0,
'App%5CEntity%5CJudgeTask%23setTestcaseHash' => 0,
'App%5CEntity%5CJudgeTask%23getTestcaseHash' => 0,
'App%5CEntity%5CJudgeTask%23setCompileConfig' => 0,
'App%5CEntity%5CJudgeTask%23getCompileConfig' => 0,
'App%5CEntity%5CJudgeTask%23setRunConfig' => 0,
'App%5CEntity%5CJudgeTask%23getRunConfig' => 0,
'App%5CEntity%5CJudgeTask%23setCompareConfig' => 0,
'App%5CEntity%5CJudgeTask%23getCompareConfig' => 0,
'App%5CEntity%5CJudgeTask%23setValid' => 0,
'App%5CEntity%5CJudgeTask%23getValid' => 0,
'App%5CEntity%5CJudgeTask%23setStarttime' => 0,
'App%5CEntity%5CJudgeTask%23getStarttime' => 0,
'App%5CEntity%5CJudgeTask%23parsePriority' => 0,
'App%5CEntity%5CJudgeTask%23addJudgingRun' => 0,
'App%5CEntity%5CJudgeTask%23removeJudgingRun' => 0,
'App%5CEntity%5CJudgeTask%23getJudgingRuns' => 0,
'App%5CEntity%5CJudgeTask%23getFirstJudgingRun' => 0,
'App%5CEntity%5CJudgeTask%24judgetaskid' => 473,
'App%5CEntity%5CJudgeTask%24judgehost' => 474,
'App%5CEntity%5CJudgeTask%24type' => 475,
'App%5CEntity%5CJudgeTask%24priority' => 476,
'App%5CEntity%5CJudgeTask%24jobid' => 477,
'App%5CEntity%5CJudgeTask%24uuid' => 478,
'App%5CEntity%5CJudgeTask%24submitid' => 479,
'App%5CEntity%5CJudgeTask%24compile_script_id' => 480,
'App%5CEntity%5CJudgeTask%24run_script_id' => 481,
'App%5CEntity%5CJudgeTask%24compare_script_id' => 482,
'App%5CEntity%5CJudgeTask%24testcase_id' => 483,
'App%5CEntity%5CJudgeTask%24testcase_hash' => 484,
'App%5CEntity%5CJudgeTask%24compile_config' => 485,
'App%5CEntity%5CJudgeTask%24run_config' => 486,
'App%5CEntity%5CJudgeTask%24compare_config' => 487,
'App%5CEntity%5CJudgeTask%24valid' => 488,
'App%5CEntity%5CJudgeTask%24starttime' => 489,
'App%5CEntity%5CJudgeTask%24judging_runs' => 490,
'App%5CEntity%5CJudgehost' => 491,
'App%5CEntity%5CJudgehost%23__construct' => 0,
'App%5CEntity%5CJudgehost%23getJudgehostid' => 0,
'App%5CEntity%5CJudgehost%23setHostname' => 0,
'App%5CEntity%5CJudgehost%23getHostname' => 0,
'App%5CEntity%5CJudgehost%23getShortDescription' => 0,
'App%5CEntity%5CJudgehost%23setEnabled' => 0,
'App%5CEntity%5CJudgehost%23getEnabled' => 0,
'App%5CEntity%5CJudgehost%23setPolltime' => 0,
'App%5CEntity%5CJudgehost%23getPolltime' => 0,
'App%5CEntity%5CJudgehost%23addJudgeTask' => 0,
'App%5CEntity%5CJudgehost%23removeJudgeTask' => 0,
'App%5CEntity%5CJudgehost%23getJudgeTasks' => 0,
'App%5CEntity%5CJudgehost%23setHidden' => 0,
'App%5CEntity%5CJudgehost%23getHidden' => 0,
'App%5CEntity%5CJudgehost%24judgehostid' => 492,
'App%5CEntity%5CJudgehost%24hostname' => 493,
'App%5CEntity%5CJudgehost%24enabled' => 494,
'App%5CEntity%5CJudgehost%24polltime' => 495,
'App%5CEntity%5CJudgehost%24judgetasks' => 496,
'App%5CEntity%5CJudgehost%24hidden' => 497,
'App%5CEntity%5CJudging' => 498,
'App%5CEntity%5CJudging%23getMaxRuntime' => 0,
'App%5CEntity%5CJudging%23getSumRuntime' => 0,
'App%5CEntity%5CJudging%23getJudgingid' => 0,
'App%5CEntity%5CJudging%23setStarttime' => 0,
'App%5CEntity%5CJudging%23getStarttime' => 0,
'App%5CEntity%5CJudging%23getAbsoluteStartTime' => 499,
'App%5CEntity%5CJudging%23getRelativeStartTime' => 500,
'App%5CEntity%5CJudging%23setEndtime' => 0,
'App%5CEntity%5CJudging%23getEndtime' => 0,
'App%5CEntity%5CJudging%23getAbsoluteEndTime' => 501,
'App%5CEntity%5CJudging%23getRelativeEndTime' => 502,
'App%5CEntity%5CJudging%23setResult' => 0,
'App%5CEntity%5CJudging%23getResult' => 0,
'App%5CEntity%5CJudging%23setVerified' => 0,
'App%5CEntity%5CJudging%23getVerified' => 0,
'App%5CEntity%5CJudging%23setJuryMember' => 0,
'App%5CEntity%5CJudging%23getJuryMember' => 0,
'App%5CEntity%5CJudging%23setVerifyComment' => 0,
'App%5CEntity%5CJudging%23getVerifyComment' => 0,
'App%5CEntity%5CJudging%23setValid' => 0,
'App%5CEntity%5CJudging%23getValid' => 0,
'App%5CEntity%5CJudging%23setOutputCompile' => 0,
'App%5CEntity%5CJudging%23getOutputCompile' => 0,
'App%5CEntity%5CJudging%23setSeen' => 0,
'App%5CEntity%5CJudging%23getSeen' => 0,
'App%5CEntity%5CJudging%23setJudgeCompletely' => 0,
'App%5CEntity%5CJudging%23getJudgeCompletely' => 0,
'App%5CEntity%5CJudging%23setSubmission' => 0,
'App%5CEntity%5CJudging%23getSubmission' => 0,
'App%5CEntity%5CJudging%23getSubmissionId' => 503,
'App%5CEntity%5CJudging%23setContest' => 0,
'App%5CEntity%5CJudging%23getContest' => 0,
'App%5CEntity%5CJudging%23setRejudging' => 0,
'App%5CEntity%5CJudging%23getRejudging' => 0,
'App%5CEntity%5CJudging%23setOriginalJudging' => 0,
'App%5CEntity%5CJudging%23getOriginalJudging' => 0,
'App%5CEntity%5CJudging%23__construct' => 0,
'App%5CEntity%5CJudging%23getUuid' => 0,
'App%5CEntity%5CJudging%23addRun' => 0,
'App%5CEntity%5CJudging%23removeRun' => 0,
'App%5CEntity%5CJudging%23getRuns' => 0,
'App%5CEntity%5CJudging%23setInternalError' => 0,
'App%5CEntity%5CJudging%23getInternalError' => 0,
'App%5CEntity%5CJudging%23getExternalRelationships' => 0,
'App%5CEntity%5CJudging%23isStarted' => 0,
'App%5CEntity%5CJudging%23isAborted' => 0,
'App%5CEntity%5CJudging%23isStillBusy' => 0,
'App%5CEntity%5CJudging%23getJudgehosts' => 0,
'App%5CEntity%5CJudging%23getDebugPackages' => 0,
'App%5CEntity%5CJudging%23getCompileMetadata' => 0,
'App%5CEntity%5CJudging%23setCompileMetadata' => 0,
'App%5CEntity%5CJudging%24judgingid' => 504,
'App%5CEntity%5CJudging%24starttime' => 505,
'App%5CEntity%5CJudging%24endtime' => 506,
'App%5CEntity%5CJudging%24result' => 507,
'App%5CEntity%5CJudging%24verified' => 508,
'App%5CEntity%5CJudging%24jury_member' => 509,
'App%5CEntity%5CJudging%24verify_comment' => 510,
'App%5CEntity%5CJudging%24valid' => 511,
'App%5CEntity%5CJudging%24output_compile' => 512,
'App%5CEntity%5CJudging%24compile_metadata' => 513,
'App%5CEntity%5CJudging%24output_compile_as_string' => 365,
'App%5CEntity%5CJudging%24seen' => 514,
'App%5CEntity%5CJudging%24judgeCompletely' => 515,
'App%5CEntity%5CJudging%24uuid' => 516,
'App%5CEntity%5CJudging%24contest' => 517,
'App%5CEntity%5CJudging%24submission' => 518,
'App%5CEntity%5CJudging%24rejudging' => 519,
'App%5CEntity%5CJudging%24original_judging' => 520,
'App%5CEntity%5CJudging%24runs' => 521,
'App%5CEntity%5CJudging%24debug_packages' => 522,
'App%5CEntity%5CJudging%24internalError' => 523,
'App%5CEntity%5CJudgingRun' => 524,
'App%5CEntity%5CJudgingRun%23__construct' => 0,
'App%5CEntity%5CJudgingRun%23getRunid' => 0,
'App%5CEntity%5CJudgingRun%23setJudgeTaskId' => 0,
'App%5CEntity%5CJudgingRun%23getJudgeTaskId' => 0,
'App%5CEntity%5CJudgingRun%23getJudgeTask' => 0,
'App%5CEntity%5CJudgingRun%23setJudgeTask' => 0,
'App%5CEntity%5CJudgingRun%23setRunresult' => 0,
'App%5CEntity%5CJudgingRun%23getRunresult' => 0,
'App%5CEntity%5CJudgingRun%23setRuntime' => 0,
'App%5CEntity%5CJudgingRun%23getRuntime' => 525,
'App%5CEntity%5CJudgingRun%23setEndtime' => 0,
'App%5CEntity%5CJudgingRun%23getEndtime' => 0,
'App%5CEntity%5CJudgingRun%23getAbsoluteEndTime' => 306,
'App%5CEntity%5CJudgingRun%23getRelativeEndTime' => 307,
'App%5CEntity%5CJudgingRun%23setJudging' => 0,
'App%5CEntity%5CJudgingRun%23getJudging' => 0,
'App%5CEntity%5CJudgingRun%23getJudgingId' => 526,
'App%5CEntity%5CJudgingRun%23setTestcase' => 0,
'App%5CEntity%5CJudgingRun%23getTestcase' => 0,
'App%5CEntity%5CJudgingRun%23getTestcaseRank' => 527,
'App%5CEntity%5CJudgingRun%23setOutput' => 0,
'App%5CEntity%5CJudgingRun%23getOutput' => 0,
'App%5CEntity%5CJudgingRun%24runid' => 528,
'App%5CEntity%5CJudgingRun%24judgetaskid' => 529,
'App%5CEntity%5CJudgingRun%24runresult' => 530,
'App%5CEntity%5CJudgingRun%24runtime' => 531,
'App%5CEntity%5CJudgingRun%24endtime' => 532,
'App%5CEntity%5CJudgingRun%24judging' => 533,
'App%5CEntity%5CJudgingRun%24testcase' => 534,
'App%5CEntity%5CJudgingRun%24output' => 535,
'App%5CEntity%5CJudgingRun%24judgetask' => 536,
'App%5CEntity%5CJudgingRunOutput' => 537,
'App%5CEntity%5CJudgingRunOutput%23setRun' => 0,
'App%5CEntity%5CJudgingRunOutput%23getRun' => 0,
'App%5CEntity%5CJudgingRunOutput%23setOutputRun' => 0,
'App%5CEntity%5CJudgingRunOutput%23getOutputRun' => 0,
'App%5CEntity%5CJudgingRunOutput%23setOutputDiff' => 0,
'App%5CEntity%5CJudgingRunOutput%23getOutputDiff' => 0,
'App%5CEntity%5CJudgingRunOutput%23setOutputError' => 0,
'App%5CEntity%5CJudgingRunOutput%23getOutputError' => 0,
'App%5CEntity%5CJudgingRunOutput%23setOutputSystem' => 0,
'App%5CEntity%5CJudgingRunOutput%23getOutputSystem' => 0,
'App%5CEntity%5CJudgingRunOutput%23getMetadata' => 0,
'App%5CEntity%5CJudgingRunOutput%23setMetadata' => 0,
'App%5CEntity%5CJudgingRunOutput%24run' => 538,
'App%5CEntity%5CJudgingRunOutput%24output_run' => 539,
'App%5CEntity%5CJudgingRunOutput%24output_diff' => 540,
'App%5CEntity%5CJudgingRunOutput%24output_error' => 541,
'App%5CEntity%5CJudgingRunOutput%24output_system' => 542,
'App%5CEntity%5CJudgingRunOutput%24metadata' => 543,
'App%5CEntity%5CLanguage' => 544,
'App%5CEntity%5CLanguage%23setLangid' => 0,
'App%5CEntity%5CLanguage%23getLangid' => 0,
'App%5CEntity%5CLanguage%23setExternalid' => 0,
'App%5CEntity%5CLanguage%23getExternalid' => 0,
'App%5CEntity%5CLanguage%23setName' => 0,
'App%5CEntity%5CLanguage%23getName' => 0,
'App%5CEntity%5CLanguage%23getShortDescription' => 0,
'App%5CEntity%5CLanguage%23setExtensions' => 0,
'App%5CEntity%5CLanguage%23getExtensions' => 0,
'App%5CEntity%5CLanguage%23setFilterCompilerFiles' => 0,
'App%5CEntity%5CLanguage%23getFilterCompilerFiles' => 0,
'App%5CEntity%5CLanguage%23setAllowSubmit' => 0,
'App%5CEntity%5CLanguage%23getAllowSubmit' => 0,
'App%5CEntity%5CLanguage%23setAllowJudge' => 0,
'App%5CEntity%5CLanguage%23getAllowJudge' => 0,
'App%5CEntity%5CLanguage%23setTimeFactor' => 0,
'App%5CEntity%5CLanguage%23getTimeFactor' => 0,
'App%5CEntity%5CLanguage%23setRequireEntryPoint' => 0,
'App%5CEntity%5CLanguage%23getRequireEntryPoint' => 0,
'App%5CEntity%5CLanguage%23setEntryPointDescription' => 0,
'App%5CEntity%5CLanguage%23getEntryPointDescription' => 0,
'App%5CEntity%5CLanguage%23setCompileExecutable' => 0,
'App%5CEntity%5CLanguage%23getCompileExecutable' => 0,
'App%5CEntity%5CLanguage%23__construct' => 0,
'App%5CEntity%5CLanguage%23addSubmission' => 0,
'App%5CEntity%5CLanguage%23removeSubmission' => 0,
'App%5CEntity%5CLanguage%23getSubmissions' => 0,
'App%5CEntity%5CLanguage%23getAceLanguage' => 0,
'App%5CEntity%5CLanguage%24langid' => 545,
'App%5CEntity%5CLanguage%24externalid' => 546,
'App%5CEntity%5CLanguage%24name' => 547,
'App%5CEntity%5CLanguage%24extensions' => 548,
'App%5CEntity%5CLanguage%24filterCompilerFiles' => 549,
'App%5CEntity%5CLanguage%24allowSubmit' => 550,
'App%5CEntity%5CLanguage%24allowJudge' => 551,
'App%5CEntity%5CLanguage%24timeFactor' => 552,
'App%5CEntity%5CLanguage%24require_entry_point' => 553,
'App%5CEntity%5CLanguage%24entry_point_description' => 554,
'App%5CEntity%5CLanguage%24compile_executable' => 555,
'App%5CEntity%5CLanguage%24submissions' => 556,
'App%5CEntity%5CProblem' => 557,
'App%5CEntity%5CProblem%23setProbid' => 0,
'App%5CEntity%5CProblem%23getProbid' => 0,
'App%5CEntity%5CProblem%23setExternalid' => 0,
'App%5CEntity%5CProblem%23getExternalid' => 0,
'App%5CEntity%5CProblem%23setName' => 0,
'App%5CEntity%5CProblem%23getName' => 0,
'App%5CEntity%5CProblem%23getShortDescription' => 0,
'App%5CEntity%5CProblem%23setTimelimit' => 0,
'App%5CEntity%5CProblem%23getTimelimit' => 558,
'App%5CEntity%5CProblem%23setMemlimit' => 0,
'App%5CEntity%5CProblem%23getMemlimit' => 0,
'App%5CEntity%5CProblem%23setOutputlimit' => 0,
'App%5CEntity%5CProblem%23getOutputlimit' => 0,
'App%5CEntity%5CProblem%23setSpecialCompareArgs' => 0,
'App%5CEntity%5CProblem%23getSpecialCompareArgs' => 0,
'App%5CEntity%5CProblem%23setCombinedRunCompare' => 0,
'App%5CEntity%5CProblem%23getCombinedRunCompare' => 0,
'App%5CEntity%5CProblem%23setProblemtext' => 0,
'App%5CEntity%5CProblem%23setProblemtextFile' => 0,
'App%5CEntity%5CProblem%23setClearProblemtext' => 0,
'App%5CEntity%5CProblem%23getProblemtext' => 0,
'App%5CEntity%5CProblem%23getProblemtextFile' => 0,
'App%5CEntity%5CProblem%23isClearProblemtext' => 0,
'App%5CEntity%5CProblem%23setProblemtextType' => 0,
'App%5CEntity%5CProblem%23getProblemtextType' => 0,
'App%5CEntity%5CProblem%23setCompareExecutable' => 0,
'App%5CEntity%5CProblem%23getCompareExecutable' => 0,
'App%5CEntity%5CProblem%23setRunExecutable' => 0,
'App%5CEntity%5CProblem%23getRunExecutable' => 0,
'App%5CEntity%5CProblem%23__construct' => 0,
'App%5CEntity%5CProblem%23addTestcase' => 0,
'App%5CEntity%5CProblem%23removeTestcase' => 0,
'App%5CEntity%5CProblem%23getTestcases' => 0,
'App%5CEntity%5CProblem%23addContestProblem' => 0,
'App%5CEntity%5CProblem%23removeContestProblem' => 0,
'App%5CEntity%5CProblem%23getContestProblems' => 0,
'App%5CEntity%5CProblem%23addSubmission' => 0,
'App%5CEntity%5CProblem%23removeSubmission' => 0,
'App%5CEntity%5CProblem%23getSubmissions' => 0,
'App%5CEntity%5CProblem%23addClarification' => 0,
'App%5CEntity%5CProblem%23removeClarification' => 0,
'App%5CEntity%5CProblem%23getClarifications' => 0,
'App%5CEntity%5CProblem%23addAttachment' => 0,
'App%5CEntity%5CProblem%23removeAttachment' => 0,
'App%5CEntity%5CProblem%23getAttachments' => 0,
'App%5CEntity%5CProblem%23processProblemText' => 334,
'App%5CEntity%5CProblem%23getProblemTextStreamedResponse' => 0,
'App%5CEntity%5CProblem%24probid' => 559,
'App%5CEntity%5CProblem%24externalid' => 560,
'App%5CEntity%5CProblem%24name' => 561,
'App%5CEntity%5CProblem%24timelimit' => 562,
'App%5CEntity%5CProblem%24memlimit' => 563,
'App%5CEntity%5CProblem%24outputlimit' => 564,
'App%5CEntity%5CProblem%24special_compare_args' => 565,
'App%5CEntity%5CProblem%24combined_run_compare' => 566,
'App%5CEntity%5CProblem%24problemtext' => 567,
'App%5CEntity%5CProblem%24problemtextFile' => 568,
'App%5CEntity%5CProblem%24clearProblemtext' => 365,
'App%5CEntity%5CProblem%24problemtext_type' => 569,
'App%5CEntity%5CProblem%24submissions' => 570,
'App%5CEntity%5CProblem%24clarifications' => 571,
'App%5CEntity%5CProblem%24contest_problems' => 572,
'App%5CEntity%5CProblem%24compare_executable' => 573,
'App%5CEntity%5CProblem%24run_executable' => 574,
'App%5CEntity%5CProblem%24testcases' => 575,
'App%5CEntity%5CProblem%24attachments' => 576,
'App%5CEntity%5CProblemAttachment' => 577,
'App%5CEntity%5CProblemAttachment%23__construct' => 0,
'App%5CEntity%5CProblemAttachment%23getAttachmentid' => 0,
'App%5CEntity%5CProblemAttachment%23getName' => 0,
'App%5CEntity%5CProblemAttachment%23setName' => 0,
'App%5CEntity%5CProblemAttachment%23getShortDescription' => 0,
'App%5CEntity%5CProblemAttachment%23getType' => 0,
'App%5CEntity%5CProblemAttachment%23setType' => 0,
'App%5CEntity%5CProblemAttachment%23getProblem' => 0,
'App%5CEntity%5CProblemAttachment%23setProblem' => 0,
'App%5CEntity%5CProblemAttachment%23setContent' => 0,
'App%5CEntity%5CProblemAttachment%23getContent' => 0,
'App%5CEntity%5CProblemAttachment%23getStreamedResponse' => 0,
'App%5CEntity%5CProblemAttachment%24attachmentid' => 578,
'App%5CEntity%5CProblemAttachment%24name' => 579,
'App%5CEntity%5CProblemAttachment%24type' => 580,
'App%5CEntity%5CProblemAttachment%24problem' => 581,
'App%5CEntity%5CProblemAttachment%24content' => 582,
'App%5CEntity%5CProblemAttachmentContent' => 583,
'App%5CEntity%5CProblemAttachmentContent%23getAttachment' => 0,
'App%5CEntity%5CProblemAttachmentContent%23setAttachment' => 0,
'App%5CEntity%5CProblemAttachmentContent%23getContent' => 0,
'App%5CEntity%5CProblemAttachmentContent%23setContent' => 0,
'App%5CEntity%5CProblemAttachmentContent%24attachment' => 584,
'App%5CEntity%5CProblemAttachmentContent%24content' => 585,
'App%5CEntity%5CQueueTask' => 586,
'App%5CEntity%5CQueueTask%23getQueueTaskid' => 0,
'App%5CEntity%5CQueueTask%23setJobId' => 0,
'App%5CEntity%5CQueueTask%23getJobId' => 0,
'App%5CEntity%5CQueueTask%23setPriority' => 0,
'App%5CEntity%5CQueueTask%23getPriority' => 0,
'App%5CEntity%5CQueueTask%23setTeamPriority' => 0,
'App%5CEntity%5CQueueTask%23getTeamPriority' => 0,
'App%5CEntity%5CQueueTask%23setTeam' => 0,
'App%5CEntity%5CQueueTask%23getTeam' => 0,
'App%5CEntity%5CQueueTask%23setStartTime' => 0,
'App%5CEntity%5CQueueTask%23getStartTime' => 0,
'App%5CEntity%5CQueueTask%24queuetaskid' => 587,
'App%5CEntity%5CQueueTask%24jobid' => 588,
'App%5CEntity%5CQueueTask%24priority' => 476,
'App%5CEntity%5CQueueTask%24teamPriority' => 589,
'App%5CEntity%5CQueueTask%24team' => 590,
'App%5CEntity%5CQueueTask%24startTime' => 591,
'App%5CEntity%5CRankCache' => 592,
'App%5CEntity%5CRankCache%23setPointsRestricted' => 0,
'App%5CEntity%5CRankCache%23getPointsRestricted' => 0,
'App%5CEntity%5CRankCache%23setTotaltimeRestricted' => 0,
'App%5CEntity%5CRankCache%23getTotaltimeRestricted' => 0,
'App%5CEntity%5CRankCache%23setPointsPublic' => 0,
'App%5CEntity%5CRankCache%23getPointsPublic' => 0,
'App%5CEntity%5CRankCache%23setTotaltimePublic' => 0,
'App%5CEntity%5CRankCache%23getTotaltimePublic' => 0,
'App%5CEntity%5CRankCache%23setContest' => 0,
'App%5CEntity%5CRankCache%23getContest' => 0,
'App%5CEntity%5CRankCache%23setTeam' => 0,
'App%5CEntity%5CRankCache%23getTeam' => 0,
'App%5CEntity%5CRankCache%24points_restricted' => 593,
'App%5CEntity%5CRankCache%24totaltime_restricted' => 594,
'App%5CEntity%5CRankCache%24points_public' => 595,
'App%5CEntity%5CRankCache%24totaltime_public' => 596,
'App%5CEntity%5CRankCache%24contest' => 597,
'App%5CEntity%5CRankCache%24team' => 598,
'App%5CEntity%5CRejudging' => 599,
'App%5CEntity%5CRejudging%23__construct' => 0,
'App%5CEntity%5CRejudging%23getRejudgingid' => 0,
'App%5CEntity%5CRejudging%23setStarttime' => 0,
'App%5CEntity%5CRejudging%23getStarttime' => 0,
'App%5CEntity%5CRejudging%23setEndtime' => 0,
'App%5CEntity%5CRejudging%23getEndtime' => 0,
'App%5CEntity%5CRejudging%23setReason' => 0,
'App%5CEntity%5CRejudging%23getReason' => 0,
'App%5CEntity%5CRejudging%23setValid' => 0,
'App%5CEntity%5CRejudging%23getValid' => 0,
'App%5CEntity%5CRejudging%23setStartUser' => 0,
'App%5CEntity%5CRejudging%23getStartUser' => 0,
'App%5CEntity%5CRejudging%23setFinishUser' => 0,
'App%5CEntity%5CRejudging%23getFinishUser' => 0,
'App%5CEntity%5CRejudging%23addJudging' => 0,
'App%5CEntity%5CRejudging%23removeJudging' => 0,
'App%5CEntity%5CRejudging%23getJudgings' => 0,
'App%5CEntity%5CRejudging%23addSubmission' => 0,
'App%5CEntity%5CRejudging%23removeSubmission' => 0,
'App%5CEntity%5CRejudging%23getSubmissions' => 0,
'App%5CEntity%5CRejudging%23setAutoApply' => 0,
'App%5CEntity%5CRejudging%23getAutoApply' => 0,
'App%5CEntity%5CRejudging%23setRepeat' => 0,
'App%5CEntity%5CRejudging%23getRepeat' => 0,
'App%5CEntity%5CRejudging%23setRepeatedRejudging' => 0,
'App%5CEntity%5CRejudging%23getRepeatedRejudging' => 0,
'App%5CEntity%5CRejudging%24rejudgingid' => 600,
'App%5CEntity%5CRejudging%24starttime' => 601,
'App%5CEntity%5CRejudging%24endtime' => 602,
'App%5CEntity%5CRejudging%24reason' => 603,
'App%5CEntity%5CRejudging%24valid' => 604,
'App%5CEntity%5CRejudging%24start_user' => 605,
'App%5CEntity%5CRejudging%24finish_user' => 606,
'App%5CEntity%5CRejudging%24judgings' => 607,
'App%5CEntity%5CRejudging%24submissions' => 608,
'App%5CEntity%5CRejudging%24autoApply' => 609,
'App%5CEntity%5CRejudging%24repeat' => 610,
'App%5CEntity%5CRejudging%24repeatedRejudging' => 611,
'App%5CEntity%5CRemovedInterval' => 612,
'App%5CEntity%5CRemovedInterval%23getIntervalid' => 0,
'App%5CEntity%5CRemovedInterval%23setStarttime' => 0,
'App%5CEntity%5CRemovedInterval%23getStarttime' => 0,
'App%5CEntity%5CRemovedInterval%23setEndtime' => 0,
'App%5CEntity%5CRemovedInterval%23getEndtime' => 0,
'App%5CEntity%5CRemovedInterval%23setStarttimeString' => 0,
'App%5CEntity%5CRemovedInterval%23getStarttimeString' => 0,
'App%5CEntity%5CRemovedInterval%23setEndtimeString' => 0,
'App%5CEntity%5CRemovedInterval%23getEndtimeString' => 0,
'App%5CEntity%5CRemovedInterval%23setContest' => 0,
'App%5CEntity%5CRemovedInterval%23getContest' => 0,
'App%5CEntity%5CRemovedInterval%23validate' => 335,
'App%5CEntity%5CRemovedInterval%24intervalid' => 613,
'App%5CEntity%5CRemovedInterval%24starttime' => 614,
'App%5CEntity%5CRemovedInterval%24endtime' => 615,
'App%5CEntity%5CRemovedInterval%24starttimeString' => 616,
'App%5CEntity%5CRemovedInterval%24endtimeString' => 617,
'App%5CEntity%5CRemovedInterval%24contest' => 618,
'App%5CEntity%5CRole' => 619,
'App%5CEntity%5CRole%23getRole' => 0,
'App%5CEntity%5CRole%23getRoleid' => 0,
'App%5CEntity%5CRole%23setDescription' => 0,
'App%5CEntity%5CRole%23getDescription' => 0,
'App%5CEntity%5CRole%23setDjRole' => 0,
'App%5CEntity%5CRole%23getDjRole' => 0,
'App%5CEntity%5CRole%23__construct' => 0,
'App%5CEntity%5CRole%23addUser' => 0,
'App%5CEntity%5CRole%23removeUser' => 0,
'App%5CEntity%5CRole%23getUsers' => 0,
'App%5CEntity%5CRole%23__toString' => 0,
'App%5CEntity%5CRole%24roleid' => 620,
'App%5CEntity%5CRole%24dj_role' => 621,
'App%5CEntity%5CRole%24description' => 622,
'App%5CEntity%5CRole%24users' => 623,
'App%5CEntity%5CScoreCache' => 624,
'App%5CEntity%5CScoreCache%23setSubmissionsRestricted' => 0,
'App%5CEntity%5CScoreCache%23getSubmissionsRestricted' => 0,
'App%5CEntity%5CScoreCache%23setPendingRestricted' => 0,
'App%5CEntity%5CScoreCache%23getPendingRestricted' => 0,
'App%5CEntity%5CScoreCache%23setIsCorrectRestricted' => 0,
'App%5CEntity%5CScoreCache%23getIsCorrectRestricted' => 0,
'App%5CEntity%5CScoreCache%23setSolvetimeRestricted' => 0,
'App%5CEntity%5CScoreCache%23getSolvetimeRestricted' => 0,
'App%5CEntity%5CScoreCache%23setSubmissionsPublic' => 0,
'App%5CEntity%5CScoreCache%23getSubmissionsPublic' => 0,
'App%5CEntity%5CScoreCache%23setPendingPublic' => 0,
'App%5CEntity%5CScoreCache%23getPendingPublic' => 0,
'App%5CEntity%5CScoreCache%23setIsCorrectPublic' => 0,
'App%5CEntity%5CScoreCache%23getIsCorrectPublic' => 0,
'App%5CEntity%5CScoreCache%23setSolvetimePublic' => 0,
'App%5CEntity%5CScoreCache%23getSolvetimePublic' => 0,
'App%5CEntity%5CScoreCache%23setIsFirstToSolve' => 0,
'App%5CEntity%5CScoreCache%23getIsFirstToSolve' => 0,
'App%5CEntity%5CScoreCache%23setContest' => 0,
'App%5CEntity%5CScoreCache%23getContest' => 0,
'App%5CEntity%5CScoreCache%23setTeam' => 0,
'App%5CEntity%5CScoreCache%23getTeam' => 0,
'App%5CEntity%5CScoreCache%23setProblem' => 0,
'App%5CEntity%5CScoreCache%23getProblem' => 0,
'App%5CEntity%5CScoreCache%23getSubmissions' => 0,
'App%5CEntity%5CScoreCache%23getPending' => 0,
'App%5CEntity%5CScoreCache%23getSolveTime' => 0,
'App%5CEntity%5CScoreCache%23getIsCorrect' => 0,
'App%5CEntity%5CScoreCache%24submissions_restricted' => 625,
'App%5CEntity%5CScoreCache%24pending_restricted' => 626,
'App%5CEntity%5CScoreCache%24is_correct_restricted' => 627,
'App%5CEntity%5CScoreCache%24solvetime_restricted' => 628,
'App%5CEntity%5CScoreCache%24submissions_public' => 629,
'App%5CEntity%5CScoreCache%24pending_public' => 630,
'App%5CEntity%5CScoreCache%24is_correct_public' => 631,
'App%5CEntity%5CScoreCache%24solvetime_public' => 632,
'App%5CEntity%5CScoreCache%24is_first_to_solve' => 633,
'App%5CEntity%5CScoreCache%24contest' => 597,
'App%5CEntity%5CScoreCache%24team' => 598,
'App%5CEntity%5CScoreCache%24problem' => 634,
'App%5CEntity%5CSubmission' => 635,
'App%5CEntity%5CSubmission%23getResult' => 0,
'App%5CEntity%5CSubmission%23getSubmitid' => 0,
'App%5CEntity%5CSubmission%23setExternalid' => 0,
'App%5CEntity%5CSubmission%23getExternalid' => 0,
'App%5CEntity%5CSubmission%23getLanguageId' => 636,
'App%5CEntity%5CSubmission%23setSubmittime' => 0,
'App%5CEntity%5CSubmission%23getSubmittime' => 0,
'App%5CEntity%5CSubmission%23getAbsoluteSubmitTime' => 306,
'App%5CEntity%5CSubmission%23getRelativeSubmitTime' => 307,
'App%5CEntity%5CSubmission%23setValid' => 0,
'App%5CEntity%5CSubmission%23getValid' => 0,
'App%5CEntity%5CSubmission%23setExpectedResults' => 0,
'App%5CEntity%5CSubmission%23getExpectedResults' => 0,
'App%5CEntity%5CSubmission%23setEntryPoint' => 0,
'App%5CEntity%5CSubmission%23getEntryPoint' => 0,
'App%5CEntity%5CSubmission%23setTeam' => 0,
'App%5CEntity%5CSubmission%23getTeam' => 0,
'App%5CEntity%5CSubmission%23getTeamId' => 637,
'App%5CEntity%5CSubmission%23setUser' => 0,
'App%5CEntity%5CSubmission%23getUser' => 0,
'App%5CEntity%5CSubmission%23__construct' => 0,
'App%5CEntity%5CSubmission%23addJudging' => 0,
'App%5CEntity%5CSubmission%23removeJudging' => 0,
'App%5CEntity%5CSubmission%23getJudgings' => 0,
'App%5CEntity%5CSubmission%23setLanguage' => 0,
'App%5CEntity%5CSubmission%23getLanguage' => 0,
'App%5CEntity%5CSubmission%23addFile' => 0,
'App%5CEntity%5CSubmission%23removeFile' => 0,
'App%5CEntity%5CSubmission%23getFiles' => 0,
'App%5CEntity%5CSubmission%23addBalloon' => 0,
'App%5CEntity%5CSubmission%23removeBalloon' => 0,
'App%5CEntity%5CSubmission%23getBalloons' => 0,
'App%5CEntity%5CSubmission%23setContest' => 0,
'App%5CEntity%5CSubmission%23getContest' => 0,
'App%5CEntity%5CSubmission%23setProblem' => 0,
'App%5CEntity%5CSubmission%23getProblem' => 0,
'App%5CEntity%5CSubmission%23getProblemId' => 308,
'App%5CEntity%5CSubmission%23setContestProblem' => 0,
'App%5CEntity%5CSubmission%23getContestProblem' => 0,
'App%5CEntity%5CSubmission%23setRejudging' => 0,
'App%5CEntity%5CSubmission%23getRejudging' => 0,
'App%5CEntity%5CSubmission%23getExternalRelationships' => 0,
'App%5CEntity%5CSubmission%23isAfterFreeze' => 0,
'App%5CEntity%5CSubmission%23getOldResult' => 0,
'App%5CEntity%5CSubmission%23setOldResult' => 0,
'App%5CEntity%5CSubmission%23getOriginalSubmission' => 0,
'App%5CEntity%5CSubmission%23setOriginalSubmission' => 0,
'App%5CEntity%5CSubmission%23addResubmission' => 0,
'App%5CEntity%5CSubmission%23removeResubmission' => 0,
'App%5CEntity%5CSubmission%23getResubmissions' => 0,
'App%5CEntity%5CSubmission%23isAborted' => 0,
'App%5CEntity%5CSubmission%23isStillBusy' => 0,
'App%5CEntity%5CSubmission%23addExternalJudgement' => 0,
'App%5CEntity%5CSubmission%23removeExternalJudgement' => 0,
'App%5CEntity%5CSubmission%23getExternalJudgements' => 0,
'App%5CEntity%5CSubmission%24submitid' => 638,
'App%5CEntity%5CSubmission%24externalid' => 639,
'App%5CEntity%5CSubmission%24submittime' => 640,
'App%5CEntity%5CSubmission%24valid' => 641,
'App%5CEntity%5CSubmission%24expected_results' => 642,
'App%5CEntity%5CSubmission%24entry_point' => 643,
'App%5CEntity%5CSubmission%24contest' => 644,
'App%5CEntity%5CSubmission%24language' => 645,
'App%5CEntity%5CSubmission%24team' => 646,
'App%5CEntity%5CSubmission%24user' => 647,
'App%5CEntity%5CSubmission%24problem' => 648,
'App%5CEntity%5CSubmission%24contest_problem' => 649,
'App%5CEntity%5CSubmission%24judgings' => 650,
'App%5CEntity%5CSubmission%24external_judgements' => 651,
'App%5CEntity%5CSubmission%24files' => 652,
'App%5CEntity%5CSubmission%24balloons' => 653,
'App%5CEntity%5CSubmission%24rejudging' => 654,
'App%5CEntity%5CSubmission%24originalSubmission' => 655,
'App%5CEntity%5CSubmission%24resubmissions' => 656,
'App%5CEntity%5CSubmission%24old_result' => 365,
'App%5CEntity%5CSubmissionFile' => 657,
'App%5CEntity%5CSubmissionFile%23getSubmitfileid' => 0,
'App%5CEntity%5CSubmissionFile%23setFilename' => 0,
'App%5CEntity%5CSubmissionFile%23getFilename' => 0,
'App%5CEntity%5CSubmissionFile%23setRank' => 0,
'App%5CEntity%5CSubmissionFile%23getRank' => 0,
'App%5CEntity%5CSubmissionFile%23setSubmission' => 0,
'App%5CEntity%5CSubmissionFile%23getSubmission' => 0,
'App%5CEntity%5CSubmissionFile%23setSourcecode' => 0,
'App%5CEntity%5CSubmissionFile%23getSourcecode' => 0,
'App%5CEntity%5CSubmissionFile%24submitfileid' => 658,
'App%5CEntity%5CSubmissionFile%24filename' => 659,
'App%5CEntity%5CSubmissionFile%24ranknumber' => 660,
'App%5CEntity%5CSubmissionFile%24submission' => 661,
'App%5CEntity%5CSubmissionFile%24sourcecode' => 662,
'App%5CEntity%5CTeam' => 663,
'App%5CEntity%5CTeam%23setTeamid' => 0,
'App%5CEntity%5CTeam%23getTeamid' => 0,
'App%5CEntity%5CTeam%23setExternalid' => 0,
'App%5CEntity%5CTeam%23getExternalid' => 0,
'App%5CEntity%5CTeam%23setIcpcid' => 0,
'App%5CEntity%5CTeam%23getIcpcid' => 0,
'App%5CEntity%5CTeam%23setName' => 0,
'App%5CEntity%5CTeam%23getName' => 0,
'App%5CEntity%5CTeam%23setDisplayName' => 0,
'App%5CEntity%5CTeam%23getDisplayName' => 0,
'App%5CEntity%5CTeam%23getEffectiveName' => 0,
'App%5CEntity%5CTeam%23getShortDescription' => 0,
'App%5CEntity%5CTeam%23setEnabled' => 0,
'App%5CEntity%5CTeam%23getEnabled' => 0,
'App%5CEntity%5CTeam%23setPublicDescription' => 0,
'App%5CEntity%5CTeam%23getPublicDescription' => 0,
'App%5CEntity%5CTeam%23setRoom' => 0,
'App%5CEntity%5CTeam%23getRoom' => 0,
'App%5CEntity%5CTeam%23setInternalComments' => 0,
'App%5CEntity%5CTeam%23getInternalComments' => 0,
'App%5CEntity%5CTeam%23setJudgingLastStarted' => 0,
'App%5CEntity%5CTeam%23getJudgingLastStarted' => 0,
'App%5CEntity%5CTeam%23setPenalty' => 0,
'App%5CEntity%5CTeam%23setAddUserForTeam' => 0,
'App%5CEntity%5CTeam%23setNewUsername' => 0,
'App%5CEntity%5CTeam%23setExistingUser' => 0,
'App%5CEntity%5CTeam%23getPenalty' => 0,
'App%5CEntity%5CTeam%23getAddUserForTeam' => 0,
'App%5CEntity%5CTeam%23getNewUsername' => 0,
'App%5CEntity%5CTeam%23getExistingUser' => 0,
'App%5CEntity%5CTeam%23getPhotoFile' => 0,
'App%5CEntity%5CTeam%23setPhotoFile' => 0,
'App%5CEntity%5CTeam%23isClearPhoto' => 0,
'App%5CEntity%5CTeam%23setClearPhoto' => 0,
'App%5CEntity%5CTeam%23setAffiliation' => 0,
'App%5CEntity%5CTeam%23getAffiliation' => 0,
'App%5CEntity%5CTeam%23getAffiliationId' => 664,
'App%5CEntity%5CTeam%23setCategory' => 0,
'App%5CEntity%5CTeam%23getCategory' => 0,
'App%5CEntity%5CTeam%23__construct' => 0,
'App%5CEntity%5CTeam%23addContest' => 0,
'App%5CEntity%5CTeam%23removeContest' => 0,
'App%5CEntity%5CTeam%23getContests' => 0,
'App%5CEntity%5CTeam%23addUser' => 0,
'App%5CEntity%5CTeam%23removeUser' => 0,
'App%5CEntity%5CTeam%23getUsers' => 0,
'App%5CEntity%5CTeam%23addSubmission' => 0,
'App%5CEntity%5CTeam%23removeSubmission' => 0,
'App%5CEntity%5CTeam%23getSubmissions' => 0,
'App%5CEntity%5CTeam%23addSentClarification' => 0,
'App%5CEntity%5CTeam%23removeSentClarification' => 0,
'App%5CEntity%5CTeam%23getSentClarifications' => 0,
'App%5CEntity%5CTeam%23addReceivedClarification' => 0,
'App%5CEntity%5CTeam%23removeReceivedClarification' => 0,
'App%5CEntity%5CTeam%23getReceivedClarifications' => 0,
'App%5CEntity%5CTeam%23addUnreadClarification' => 0,
'App%5CEntity%5CTeam%23removeUnreadClarification' => 0,
'App%5CEntity%5CTeam%23getUnreadClarifications' => 0,
'App%5CEntity%5CTeam%23getGroupIds' => 665,
'App%5CEntity%5CTeam%23getAffiliationName' => 666,
'App%5CEntity%5CTeam%23getNationality' => 667,
'App%5CEntity%5CTeam%23canViewClarification' => 0,
'App%5CEntity%5CTeam%23getExternalRelationships' => 0,
'App%5CEntity%5CTeam%23validate' => 335,
'App%5CEntity%5CTeam%23inContest' => 0,
'App%5CEntity%5CTeam%23getAssetProperties' => 0,
'App%5CEntity%5CTeam%23getAssetFile' => 0,
'App%5CEntity%5CTeam%23isClearAsset' => 0,
'App%5CEntity%5CTeam%24teamid' => 668,
'App%5CEntity%5CTeam%24externalid' => 669,
'App%5CEntity%5CTeam%24icpcid' => 670,
'App%5CEntity%5CTeam%24name' => 671,
'App%5CEntity%5CTeam%24display_name' => 672,
'App%5CEntity%5CTeam%24enabled' => 673,
'App%5CEntity%5CTeam%24publicDescription' => 674,
'App%5CEntity%5CTeam%24room' => 675,
'App%5CEntity%5CTeam%24internalComments' => 676,
'App%5CEntity%5CTeam%24judging_last_started' => 677,
'App%5CEntity%5CTeam%24penalty' => 678,
'App%5CEntity%5CTeam%24addUserForTeam' => 365,
'App%5CEntity%5CTeam%24newUsername' => 679,
'App%5CEntity%5CTeam%24existingUser' => 365,
'App%5CEntity%5CTeam%24photoFile' => 364,
'App%5CEntity%5CTeam%24clearPhoto' => 365,
'App%5CEntity%5CTeam%24affiliation' => 680,
'App%5CEntity%5CTeam%24category' => 681,
'App%5CEntity%5CTeam%24contests' => 682,
'App%5CEntity%5CTeam%24users' => 683,
'App%5CEntity%5CTeam%24submissions' => 684,
'App%5CEntity%5CTeam%24sent_clarifications' => 685,
'App%5CEntity%5CTeam%24received_clarifications' => 686,
'App%5CEntity%5CTeam%24unread_clarifications' => 687,
'App%5CEntity%5CTeamAffiliation' => 688,
'App%5CEntity%5CTeamAffiliation%23__construct' => 0,
'App%5CEntity%5CTeamAffiliation%23setAffilid' => 0,
'App%5CEntity%5CTeamAffiliation%23getAffilid' => 0,
'App%5CEntity%5CTeamAffiliation%23setExternalid' => 0,
'App%5CEntity%5CTeamAffiliation%23getExternalid' => 0,
'App%5CEntity%5CTeamAffiliation%23setIcpcid' => 0,
'App%5CEntity%5CTeamAffiliation%23getIcpcid' => 0,
'App%5CEntity%5CTeamAffiliation%23setShortname' => 0,
'App%5CEntity%5CTeamAffiliation%23getShortname' => 0,
'App%5CEntity%5CTeamAffiliation%23setName' => 0,
'App%5CEntity%5CTeamAffiliation%23getName' => 0,
'App%5CEntity%5CTeamAffiliation%23getShortDescription' => 0,
'App%5CEntity%5CTeamAffiliation%23setCountry' => 0,
'App%5CEntity%5CTeamAffiliation%23getCountry' => 0,
'App%5CEntity%5CTeamAffiliation%23setInternalComments' => 0,
'App%5CEntity%5CTeamAffiliation%23getInternalComments' => 0,
'App%5CEntity%5CTeamAffiliation%23getLogoFile' => 0,
'App%5CEntity%5CTeamAffiliation%23setLogoFile' => 0,
'App%5CEntity%5CTeamAffiliation%23isClearLogo' => 0,
'App%5CEntity%5CTeamAffiliation%23setClearLogo' => 0,
'App%5CEntity%5CTeamAffiliation%23addTeam' => 0,
'App%5CEntity%5CTeamAffiliation%23removeTeam' => 0,
'App%5CEntity%5CTeamAffiliation%23getTeams' => 0,
'App%5CEntity%5CTeamAffiliation%23getAssetProperties' => 0,
'App%5CEntity%5CTeamAffiliation%23getAssetFile' => 0,
'App%5CEntity%5CTeamAffiliation%23isClearAsset' => 0,
'App%5CEntity%5CTeamAffiliation%24affilid' => 689,
'App%5CEntity%5CTeamAffiliation%24externalid' => 690,
'App%5CEntity%5CTeamAffiliation%24icpcid' => 691,
'App%5CEntity%5CTeamAffiliation%24shortname' => 692,
'App%5CEntity%5CTeamAffiliation%24name' => 693,
'App%5CEntity%5CTeamAffiliation%24country' => 694,
'App%5CEntity%5CTeamAffiliation%24logoFile' => 364,
'App%5CEntity%5CTeamAffiliation%24clearLogo' => 365,
'App%5CEntity%5CTeamAffiliation%24internalComments' => 695,
'App%5CEntity%5CTeamAffiliation%24teams' => 696,
'App%5CEntity%5CTeamCategory' => 697,
'App%5CEntity%5CTeamCategory%23__construct' => 0,
'App%5CEntity%5CTeamCategory%23__toString' => 0,
'App%5CEntity%5CTeamCategory%23setExternalid' => 0,
'App%5CEntity%5CTeamCategory%23getExternalid' => 0,
'App%5CEntity%5CTeamCategory%23setIcpcid' => 0,
'App%5CEntity%5CTeamCategory%23getIcpcid' => 0,
'App%5CEntity%5CTeamCategory%23setCategoryid' => 0,
'App%5CEntity%5CTeamCategory%23getCategoryid' => 0,
'App%5CEntity%5CTeamCategory%23setName' => 0,
'App%5CEntity%5CTeamCategory%23getName' => 0,
'App%5CEntity%5CTeamCategory%23getShortDescription' => 0,
'App%5CEntity%5CTeamCategory%23setSortorder' => 0,
'App%5CEntity%5CTeamCategory%23getSortorder' => 0,
'App%5CEntity%5CTeamCategory%23setColor' => 0,
'App%5CEntity%5CTeamCategory%23getColor' => 0,
'App%5CEntity%5CTeamCategory%23setVisible' => 0,
'App%5CEntity%5CTeamCategory%23getVisible' => 0,
'App%5CEntity%5CTeamCategory%23setAllowSelfRegistration' => 0,
'App%5CEntity%5CTeamCategory%23getAllowSelfRegistration' => 0,
'App%5CEntity%5CTeamCategory%23addTeam' => 0,
'App%5CEntity%5CTeamCategory%23removeTeam' => 0,
'App%5CEntity%5CTeamCategory%23getTeams' => 0,
'App%5CEntity%5CTeamCategory%23getContests' => 0,
'App%5CEntity%5CTeamCategory%23addContest' => 0,
'App%5CEntity%5CTeamCategory%23removeContest' => 0,
'App%5CEntity%5CTeamCategory%23getContestsForMedals' => 0,
'App%5CEntity%5CTeamCategory%23addContestForMedals' => 0,
'App%5CEntity%5CTeamCategory%23removeContestForMedals' => 0,
'App%5CEntity%5CTeamCategory%23inContest' => 0,
'App%5CEntity%5CTeamCategory%24categoryid' => 698,
'App%5CEntity%5CTeamCategory%24externalid' => 699,
'App%5CEntity%5CTeamCategory%24icpcid' => 691,
'App%5CEntity%5CTeamCategory%24name' => 338,
'App%5CEntity%5CTeamCategory%24sortorder' => 700,
'App%5CEntity%5CTeamCategory%24color' => 701,
'App%5CEntity%5CTeamCategory%24visible' => 702,
'App%5CEntity%5CTeamCategory%24allow_self_registration' => 703,
'App%5CEntity%5CTeamCategory%24teams' => 704,
'App%5CEntity%5CTeamCategory%24contests' => 705,
'App%5CEntity%5CTeamCategory%24contests_for_medals' => 706,
'App%5CEntity%5CUser' => 707,
'App%5CEntity%5CUser%23getSalt' => 0,
'App%5CEntity%5CUser%23eraseCredentials' => 0,
'App%5CEntity%5CUser%23__serialize' => 0,
'App%5CEntity%5CUser%23__unserialize' => 0,
'App%5CEntity%5CUser%23getUserid' => 0,
'App%5CEntity%5CUser%23setExternalid' => 0,
'App%5CEntity%5CUser%23getExternalid' => 0,
'App%5CEntity%5CUser%23setUsername' => 0,
'App%5CEntity%5CUser%23getUsername' => 0,
'App%5CEntity%5CUser%23setName' => 0,
'App%5CEntity%5CUser%23getName' => 0,
'App%5CEntity%5CUser%23getShortDescription' => 0,
'App%5CEntity%5CUser%23setEmail' => 0,
'App%5CEntity%5CUser%23getEmail' => 0,
'App%5CEntity%5CUser%23setLastLogin' => 0,
'App%5CEntity%5CUser%23getLastLogin' => 0,
'App%5CEntity%5CUser%23getLastLoginAsDateTime' => 708,
'App%5CEntity%5CUser%23setFirstLogin' => 0,
'App%5CEntity%5CUser%23getFirstLogin' => 0,
'App%5CEntity%5CUser%23getFirstLoginAsDateTime' => 709,
'App%5CEntity%5CUser%23setLastIpAddress' => 0,
'App%5CEntity%5CUser%23getLastIpAddress' => 0,
'App%5CEntity%5CUser%23setPassword' => 0,
'App%5CEntity%5CUser%23setPlainPassword' => 0,
'App%5CEntity%5CUser%23getPassword' => 0,
'App%5CEntity%5CUser%23getPlainPassword' => 0,
'App%5CEntity%5CUser%23setIpAddress' => 0,
'App%5CEntity%5CUser%23getIpAddress' => 0,
'App%5CEntity%5CUser%23setEnabled' => 0,
'App%5CEntity%5CUser%23getEnabled' => 0,
'App%5CEntity%5CUser%23setTeam' => 0,
'App%5CEntity%5CUser%23getTeam' => 0,
'App%5CEntity%5CUser%23getTeamName' => 710,
'App%5CEntity%5CUser%23getTeamId' => 637,
'App%5CEntity%5CUser%23__construct' => 0,
'App%5CEntity%5CUser%23addUserRole' => 0,
'App%5CEntity%5CUser%23removeUserRole' => 0,
'App%5CEntity%5CUser%23getUserRoles' => 0,
'App%5CEntity%5CUser%23getRoleList' => 711,
'App%5CEntity%5CUser%23getType' => 712,
'App%5CEntity%5CUser%23getRoles' => 0,
'App%5CEntity%5CUser%23addSubmission' => 0,
'App%5CEntity%5CUser%23removeSubmission' => 0,
'App%5CEntity%5CUser%23getSubmissions' => 0,
'App%5CEntity%5CUser%23isEqualTo' => 0,
'App%5CEntity%5CUser%23getUserIdentifier' => 0,
'App%5CEntity%5CUser%23getExternalRelationships' => 0,
'App%5CEntity%5CUser%24userid' => 713,
'App%5CEntity%5CUser%24externalid' => 714,
'App%5CEntity%5CUser%24username' => 715,
'App%5CEntity%5CUser%24name' => 716,
'App%5CEntity%5CUser%24email' => 717,
'App%5CEntity%5CUser%24last_login' => 718,
'App%5CEntity%5CUser%24first_login' => 719,
'App%5CEntity%5CUser%24last_ip_address' => 720,
'App%5CEntity%5CUser%24password' => 721,
'App%5CEntity%5CUser%24plainPassword' => 365,
'App%5CEntity%5CUser%24ipAddress' => 722,
'App%5CEntity%5CUser%24enabled' => 723,
'App%5CEntity%5CUser%24team' => 724,
'App%5CEntity%5CUser%24user_roles' => 725,
'App%5CEntity%5CUser%24submissions' => 726,
'Doctrine%5CBundle%5CDoctrineBundle%5CController%5CProfilerController' => 0,
'Doctrine%5CBundle%5CDoctrineBundle%5CController%5CProfilerController%23__construct' => 0,
'Doctrine%5CBundle%5CDoctrineBundle%5CController%5CProfilerController%23explainAction' => 0,
'Doctrine%5CBundle%5CDoctrineBundle%5CController%5CProfilerController%23explainSQLitePlatform' => 0,
'Doctrine%5CBundle%5CDoctrineBundle%5CController%5CProfilerController%23explainSQLServerPlatform' => 0,
'Doctrine%5CBundle%5CDoctrineBundle%5CController%5CProfilerController%23explainOtherPlatform' => 0,
'Doctrine%5CBundle%5CDoctrineBundle%5CController%5CProfilerController%23explainOraclePlatform' => 0,
'Doctrine%5CBundle%5CDoctrineBundle%5CController%5CProfilerController%24twig' => 0,
'Doctrine%5CBundle%5CDoctrineBundle%5CController%5CProfilerController%24registry' => 0,
'Doctrine%5CBundle%5CDoctrineBundle%5CController%5CProfilerController%24profiler' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23__construct' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23addInsert' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getInserts' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getSelectSQL' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getCountSQL' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getInsertSQL' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getResultSetMapping' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getSelectConditionStatementSQL' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23exists' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getCacheRegion' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getEntityHydrator' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23storeEntityCache' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23storeJoinedAssociations' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getHash' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23expandParameters' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23expandCriteriaParameters' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getClassMetadata' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getManyToManyCollection' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getOneToManyCollection' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getOwningTable' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23executeInserts' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23load' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23loadAll' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23loadById' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23count' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23loadCriteria' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23loadManyToManyCollection' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23loadOneToManyCollection' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23loadOneToOneEntity' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23lock' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23refresh' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23buildCollectionCacheKey' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CCachedPersister%23afterTransactionComplete' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CCachedPersister%23afterTransactionRolledBack' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23update' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23delete' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24uow' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24metadataFactory' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24persister' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24class' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24queuedCache' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24region' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24timestampRegion' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24timestampKey' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24hydrator' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24cache' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24cacheLogger' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24regionName' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24joinedAssociations' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CCachedEntityPersister' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CCachedEntityPersister%23getEntityHydrator' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CCachedEntityPersister%23storeEntityCache' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CCachedPersister%23getCacheRegion' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23getClassMetadata' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23getResultSetMapping' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23getInserts' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23getInsertSQL' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23getSelectSQL' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23getCountSQL' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23expandParameters' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23expandCriteriaParameters' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23getSelectConditionStatementSQL' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23addInsert' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23executeInserts' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23count' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23getOwningTable' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23load' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23loadById' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23loadOneToOneEntity' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23refresh' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23loadCriteria' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23loadAll' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23getManyToManyCollection' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23loadManyToManyCollection' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23loadOneToManyCollection' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23lock' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23getOneToManyCollection' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23exists' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CNonStrictReadWriteCachedEntityPersister' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CNonStrictReadWriteCachedEntityPersister%23afterTransactionComplete' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CNonStrictReadWriteCachedEntityPersister%23afterTransactionRolledBack' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CNonStrictReadWriteCachedEntityPersister%23delete' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CNonStrictReadWriteCachedEntityPersister%23update' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CNonStrictReadWriteCachedEntityPersister%23updateCache' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CReadOnlyCachedEntityPersister' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CReadOnlyCachedEntityPersister%23update' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CReadWriteCachedEntityPersister' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CReadWriteCachedEntityPersister%23__construct' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CReadWriteCachedEntityPersister%23afterTransactionComplete' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CReadWriteCachedEntityPersister%23afterTransactionRolledBack' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CReadWriteCachedEntityPersister%23delete' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CReadWriteCachedEntityPersister%23update' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CAbstractEntityInheritancePersister' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CAbstractEntityInheritancePersister%23prepareInsertData' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CAbstractEntityInheritancePersister%23getDiscriminatorColumnTableName' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CAbstractEntityInheritancePersister%23getSelectColumnSQL' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CAbstractEntityInheritancePersister%23getSelectJoinColumnSQL' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23__construct' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getClassMetadata' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getResultSetMapping' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23addInsert' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getInserts' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23executeInserts' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23assignDefaultVersionAndUpsertableValues' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23fetchVersionAndNotUpsertableValues' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23extractIdentifierTypes' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23update' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23updateTable' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23deleteJoinTableRecords' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23delete' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23prepareUpdateData' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getOwningTable' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23load' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23loadById' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23loadOneToOneEntity' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23refresh' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23count' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23loadCriteria' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23expandCriteriaParameters' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23loadAll' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getManyToManyCollection' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23loadArrayFromResult' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23loadCollectionFromStatement' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23loadManyToManyCollection' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getManyToManyStatement' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getSelectSQL' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getCountSQL' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getOrderBySQL' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getSelectColumnsSQL' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getSelectColumnAssociationSQL' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getSelectManyToManyJoinSQL' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getInsertSQL' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getInsertColumnList' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getSQLTableAlias' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23lock' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getLockTablesSql' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getSelectConditionCriteriaSQL' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getSelectConditionStatementSQL' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getSelectConditionStatementColumnSQL' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getSelectConditionSQL' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getOneToManyCollection' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23loadOneToManyCollection' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getOneToManyStatement' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23expandParameters' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23expandToManyParameters' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getTypes' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getValues' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getIndividualValue' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23exists' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getJoinSQLForJoinColumns' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getSQLColumnAlias' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23generateFilterConditionSQL' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23switchPersisterContext' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getClassIdentifiersTypes' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24class' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24conn' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24platform' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24em' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24queuedInserts' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24columnTypes' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24quotedColumns' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24quoteStrategy' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24currentPersisterContext' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23prepareInsertData' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getSelectColumnSQL' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24comparisonMap' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24insertSql' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24identifierFlattener' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24limitsHandlingContext' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24noLimitsContext' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CCachedPersisterContext' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CCachedPersisterContext%23__construct' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CCachedPersisterContext%24class' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CCachedPersisterContext%24rsm' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CCachedPersisterContext%24selectColumnListSql' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CCachedPersisterContext%24selectJoinSql' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CCachedPersisterContext%24sqlAliasCounter' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CCachedPersisterContext%24sqlTableAliases' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CCachedPersisterContext%24handlesLimits' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23getDiscriminatorColumnTableName' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23getVersionedClassMetadata' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23getOwningTable' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23executeInserts' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23update' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23delete' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23getSelectSQL' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23getCountSQL' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23getLockTablesSql' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23getSelectColumnsSQL' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23getInsertColumnList' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23assignDefaultVersionAndUpsertableValues' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23getJoinSql' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23getSQLResultCasing' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%24owningTableMap' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%24quotedTableMap' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CSingleTablePersister' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CSingleTablePersister%23getDiscriminatorColumnTableName' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CSingleTablePersister%23getSelectColumnsSQL' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CSingleTablePersister%23getInsertColumnList' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CSingleTablePersister%23getSQLTableAlias' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CSingleTablePersister%23getSelectConditionSQL' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CSingleTablePersister%23getSelectConditionCriteriaSQL' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CSingleTablePersister%23getSelectConditionDiscriminatorValueSQL' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CSingleTablePersister%23generateFilterConditionSQL' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CSingleTablePersister%23getSQLResultCasing' => 0,
'FOS%5CRestBundle%5CController%5CAbstractFOSRestController' => 0,
'FOS%5CRestBundle%5CController%5CAbstractFOSRestController%24viewhandler' => 0,
'FOS%5CRestBundle%5CController%5CAnnotations%5CAbstractParam' => 0,
'FOS%5CRestBundle%5CController%5CAnnotations%5CAbstractParam%23getName' => 0,
'FOS%5CRestBundle%5CController%5CAnnotations%5CAbstractParam%23getDefault' => 0,
'FOS%5CRestBundle%5CController%5CAnnotations%5CAbstractParam%23getDescription' => 0,
'FOS%5CRestBundle%5CController%5CAnnotations%5CAbstractParam%23getIncompatibilities' => 0,
'FOS%5CRestBundle%5CController%5CAnnotations%5CAbstractParam%23getConstraints' => 0,
'FOS%5CRestBundle%5CController%5CAnnotations%5CAbstractParam%23isStrict' => 0,
'FOS%5CRestBundle%5CController%5CAnnotations%5CAbstractParam%23getKey' => 0,
'FOS%5CRestBundle%5CController%5CAnnotations%5CParamInterface%23getValue' => 0,
'FOS%5CRestBundle%5CController%5CAnnotations%5CAbstractParam%24name' => 0,
'FOS%5CRestBundle%5CController%5CAnnotations%5CAbstractParam%24key' => 0,
'FOS%5CRestBundle%5CController%5CAnnotations%5CAbstractParam%24default' => 0,
'FOS%5CRestBundle%5CController%5CAnnotations%5CAbstractParam%24description' => 0,
'FOS%5CRestBundle%5CController%5CAnnotations%5CAbstractParam%24strict' => 0,
'FOS%5CRestBundle%5CController%5CAnnotations%5CAbstractParam%24nullable' => 0,
'FOS%5CRestBundle%5CController%5CAnnotations%5CAbstractParam%24incompatibles' => 0,
'FOS%5CRestBundle%5CController%5CAnnotations%5CAbstractScalarParam' => 0,
'FOS%5CRestBundle%5CController%5CAnnotations%5CAbstractScalarParam%23getConstraints' => 0,
'FOS%5CRestBundle%5CController%5CAnnotations%5CAbstractScalarParam%24requirements' => 0,
'FOS%5CRestBundle%5CController%5CAnnotations%5CAbstractScalarParam%24map' => 0,
'FOS%5CRestBundle%5CController%5CAnnotations%5CAbstractScalarParam%24allowBlank' => 0,
'FOS%5CRestBundle%5CController%5CAnnotations%5CCopy' => 0,
'FOS%5CRestBundle%5CController%5CAnnotations%5CCopy%23getMethod' => 0,
'FOS%5CRestBundle%5CController%5CAnnotations%5CRoute%23__construct' => 0,
'Symfony%5CComponent%5CRouting%5CAnnotation%5CRoute%23setPath' => 0,
'Symfony%5CComponent%5CRouting%5CAnnotation%5CRoute%23getPath' => 0,
'Symfony%5CComponent%5CRouting%5CAnnotation%5CRoute%23setLocalizedPaths' => 0,
'Symfony%5CComponent%5CRouting%5CAnnotation%5CRoute%23getLocalizedPaths' => 0,
'Symfony%5CComponent%5CRouting%5CAnnotation%5CRoute%23setHost' => 0,
'Symfony%5CComponent%5CRouting%5CAnnotation%5CRoute%23getHost' => 0,
'Symfony%5CComponent%5CRouting%5CAnnotation%5CRoute%23setName' => 0,
'Symfony%5CComponent%5CRouting%5CAnnotation%5CRoute%23getName' => 0,
'Symfony%5CComponent%5CRouting%5CAnnotation%5CRoute%23setRequirements' => 0,
'Symfony%5CComponent%5CRouting%5CAnnotation%5CRoute%23getRequirements' => 0,
'Symfony%5CComponent%5CRouting%5CAnnotation%5CRoute%23setOptions' => 0,
'Symfony%5CComponent%5CRouting%5CAnnotation%5CRoute%23getOptions' => 0,
'Symfony%5CComponent%5CRouting%5CAnnotation%5CRoute%23setDefaults' => 0,
'Symfony%5CComponent%5CRouting%5CAnnotation%5CRoute%23getDefaults' => 0,
'Symfony%5CComponent%5CRouting%5CAnnotation%5CRoute%23setSchemes' => 0,
'Symfony%5CComponent%5CRouting%5CAnnotation%5CRoute%23getSchemes' => 0,
'Symfony%5CComponent%5CRouting%5CAnnotation%5CRoute%23setMethods' => 0,
'Symfony%5CComponent%5CRouting%5CAnnotation%5CRoute%23getMethods' => 0,
'Symfony%5CComponent%5CRouting%5CAnnotation%5CRoute%23setCondition' => 0,
'Symfony%5CComponent%5CRouting%5CAnnotation%5CRoute%23getCondition' => 0,
'Symfony%5CComponent%5CRouting%5CAnnotation%5CRoute%23setPriority' => 0,
'Symfony%5CComponent%5CRouting%5CAnnotation%5CRoute%23getPriority' => 0,
'Symfony%5CComponent%5CRouting%5CAnnotation%5CRoute%23setEnv' => 0,
'Symfony%5CComponent%5CRouting%5CAnnotation%5CRoute%23getEnv' => 0,
'FOS%5CRestBundle%5CController%5CAnnotations%5CDelete' => 0,
'FOS%5CRestBundle%5CController%5CAnnotations%5CDelete%23getMethod' => 0,
'FOS%5CRestBundle%5CController%5CAnnotations%5CFileParam' => 0,
'FOS%5CRestBundle%5CController%5CAnnotations%5CFileParam%23__construct' => 0,
'FOS%5CRestBundle%5CController%5CAnnotations%5CFileParam%23getConstraints' => 0,
'FOS%5CRestBundle%5CController%5CAnnotations%5CFileParam%23getValue' => 0,
'FOS%5CRestBundle%5CController%5CAnnotations%5CFileParam%24strict' => 0,
'FOS%5CRestBundle%5CController%5CAnnotations%5CFileParam%24requirements' => 0,
'FOS%5CRestBundle%5CController%5CAnnotations%5CFileParam%24image' => 0,
'FOS%5CRestBundle%5CController%5CAnnotations%5CFileParam%24map' => 0,
'FOS%5CRestBundle%5CController%5CAnnotations%5CGet' => 0,
'FOS%5CRestBundle%5CController%5CAnnotations%5CGet%23getMethod' => 0,
'FOS%5CRestBundle%5CController%5CAnnotations%5CHead' => 0,
'FOS%5CRestBundle%5CController%5CAnnotations%5CHead%23getMethod' => 0,
'FOS%5CRestBundle%5CController%5CAnnotations%5CLink' => 0,
'FOS%5CRestBundle%5CController%5CAnnotations%5CLink%23getMethod' => 0,
'FOS%5CRestBundle%5CController%5CAnnotations%5CLock' => 0,
'FOS%5CRestBundle%5CController%5CAnnotations%5CLock%23getMethod' => 0,
'FOS%5CRestBundle%5CController%5CAnnotations%5CMkcol' => 0,
'FOS%5CRestBundle%5CController%5CAnnotations%5CMkcol%23getMethod' => 0,
'FOS%5CRestBundle%5CController%5CAnnotations%5CMove' => 0,
'FOS%5CRestBundle%5CController%5CAnnotations%5CMove%23getMethod' => 0,
'FOS%5CRestBundle%5CController%5CAnnotations%5COptions' => 0,
'FOS%5CRestBundle%5CController%5CAnnotations%5COptions%23getMethod' => 0,
'FOS%5CRestBundle%5CController%5CAnnotations%5CParamInterface' => 0,
'FOS%5CRestBundle%5CController%5CAnnotations%5CParamInterface%23getName' => 0,
'FOS%5CRestBundle%5CController%5CAnnotations%5CParamInterface%23getDefault' => 0,
'FOS%5CRestBundle%5CController%5CAnnotations%5CParamInterface%23getDescription' => 0,
'FOS%5CRestBundle%5CController%5CAnnotations%5CParamInterface%23getIncompatibilities' => 0,
'FOS%5CRestBundle%5CController%5CAnnotations%5CParamInterface%23getConstraints' => 0,
'FOS%5CRestBundle%5CController%5CAnnotations%5CParamInterface%23isStrict' => 0,
'FOS%5CRestBundle%5CController%5CAnnotations%5CPatch' => 0,
'FOS%5CRestBundle%5CController%5CAnnotations%5CPatch%23getMethod' => 0,
'FOS%5CRestBundle%5CController%5CAnnotations%5CPost' => 0,
'FOS%5CRestBundle%5CController%5CAnnotations%5CPost%23getMethod' => 0,
'FOS%5CRestBundle%5CController%5CAnnotations%5CPropFind' => 0,
'FOS%5CRestBundle%5CController%5CAnnotations%5CPropFind%23getMethod' => 0,
'FOS%5CRestBundle%5CController%5CAnnotations%5CPropPatch' => 0,
'FOS%5CRestBundle%5CController%5CAnnotations%5CPropPatch%23getMethod' => 0,
'FOS%5CRestBundle%5CController%5CAnnotations%5CPut' => 0,
'FOS%5CRestBundle%5CController%5CAnnotations%5CPut%23getMethod' => 0,
'FOS%5CRestBundle%5CController%5CAnnotations%5CQueryParam' => 0,
'FOS%5CRestBundle%5CController%5CAnnotations%5CQueryParam%23__construct' => 0,
'FOS%5CRestBundle%5CController%5CAnnotations%5CQueryParam%23getValue' => 0,
'FOS%5CRestBundle%5CController%5CAnnotations%5CRequestParam' => 0,
'FOS%5CRestBundle%5CController%5CAnnotations%5CRequestParam%23__construct' => 0,
'FOS%5CRestBundle%5CController%5CAnnotations%5CRequestParam%23getValue' => 0,
'FOS%5CRestBundle%5CController%5CAnnotations%5CRequestParam%24strict' => 0,
'FOS%5CRestBundle%5CController%5CAnnotations%5CRoute' => 0,
'FOS%5CRestBundle%5CController%5CAnnotations%5CRoute%23getMethod' => 0,
'FOS%5CRestBundle%5CController%5CAnnotations%5CUnlink' => 0,
'FOS%5CRestBundle%5CController%5CAnnotations%5CUnlink%23getMethod' => 0,
'FOS%5CRestBundle%5CController%5CAnnotations%5CUnlock' => 0,
'FOS%5CRestBundle%5CController%5CAnnotations%5CUnlock%23getMethod' => 0,
'FOS%5CRestBundle%5CController%5CAnnotations%5CView' => 0,
'FOS%5CRestBundle%5CController%5CAnnotations%5CView%23__construct' => 0,
'FOS%5CRestBundle%5CController%5CAnnotations%5CView%23setStatusCode' => 0,
'FOS%5CRestBundle%5CController%5CAnnotations%5CView%23getStatusCode' => 0,
'FOS%5CRestBundle%5CController%5CAnnotations%5CView%23setSerializerGroups' => 0,
'FOS%5CRestBundle%5CController%5CAnnotations%5CView%23getSerializerGroups' => 0,
'FOS%5CRestBundle%5CController%5CAnnotations%5CView%23setSerializerEnableMaxDepthChecks' => 0,
'FOS%5CRestBundle%5CController%5CAnnotations%5CView%23getSerializerEnableMaxDepthChecks' => 0,
'Sensio%5CBundle%5CFrameworkExtraBundle%5CConfiguration%5CTemplate%23getVars' => 0,
'Sensio%5CBundle%5CFrameworkExtraBundle%5CConfiguration%5CTemplate%23setIsStreamable' => 0,
'Sensio%5CBundle%5CFrameworkExtraBundle%5CConfiguration%5CTemplate%23isStreamable' => 0,
'Sensio%5CBundle%5CFrameworkExtraBundle%5CConfiguration%5CTemplate%23setVars' => 0,
'Sensio%5CBundle%5CFrameworkExtraBundle%5CConfiguration%5CTemplate%23setValue' => 0,
'Sensio%5CBundle%5CFrameworkExtraBundle%5CConfiguration%5CTemplate%23getTemplate' => 0,
'Sensio%5CBundle%5CFrameworkExtraBundle%5CConfiguration%5CTemplate%23setTemplate' => 0,
'Sensio%5CBundle%5CFrameworkExtraBundle%5CConfiguration%5CTemplate%23getAliasName' => 0,
'Sensio%5CBundle%5CFrameworkExtraBundle%5CConfiguration%5CTemplate%23allowArray' => 0,
'Sensio%5CBundle%5CFrameworkExtraBundle%5CConfiguration%5CTemplate%23setOwner' => 0,
'Sensio%5CBundle%5CFrameworkExtraBundle%5CConfiguration%5CTemplate%23getOwner' => 0,
'FOS%5CRestBundle%5CController%5CAnnotations%5CView%24statusCode' => 0,
'FOS%5CRestBundle%5CController%5CAnnotations%5CView%24serializerGroups' => 0,
'FOS%5CRestBundle%5CController%5CAnnotations%5CView%24serializerEnableMaxDepthChecks' => 0,
'Sensio%5CBundle%5CFrameworkExtraBundle%5CConfiguration%5CTemplate%24template' => 0,
'FOS%5CRestBundle%5CController%5CControllerTrait' => 0,
'FOS%5CRestBundle%5CController%5CControllerTrait%23setViewHandler' => 0,
'FOS%5CRestBundle%5CController%5CControllerTrait%23getViewHandler' => 0,
'FOS%5CRestBundle%5CController%5CControllerTrait%23view' => 0,
'FOS%5CRestBundle%5CController%5CControllerTrait%23redirectView' => 0,
'FOS%5CRestBundle%5CController%5CControllerTrait%23routeRedirectView' => 0,
'FOS%5CRestBundle%5CController%5CControllerTrait%23handleView' => 0,
'FOS%5CRestBundle%5CController%5CControllerTrait%24viewhandler' => 0,
'Nelmio%5CApiDocBundle%5CController%5CDocumentationController' => 0,
'Nelmio%5CApiDocBundle%5CController%5CDocumentationController%23__construct' => 0,
'Nelmio%5CApiDocBundle%5CController%5CDocumentationController%23__invoke' => 0,
'Nelmio%5CApiDocBundle%5CController%5CDocumentationController%24renderOpenApi' => 0,
'Nelmio%5CApiDocBundle%5CController%5CSwaggerUiController' => 0,
'Nelmio%5CApiDocBundle%5CController%5CSwaggerUiController%23__construct' => 0,
'Nelmio%5CApiDocBundle%5CController%5CSwaggerUiController%23__invoke' => 0,
'Nelmio%5CApiDocBundle%5CController%5CSwaggerUiController%24renderOpenApi' => 0,
'Nelmio%5CApiDocBundle%5CController%5CYamlDocumentationController' => 0,
'Nelmio%5CApiDocBundle%5CController%5CYamlDocumentationController%23__construct' => 0,
'Nelmio%5CApiDocBundle%5CController%5CYamlDocumentationController%23__invoke' => 0,
'Nelmio%5CApiDocBundle%5CController%5CYamlDocumentationController%24renderOpenApi' => 0,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CRedirectController' => 0,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CRedirectController%23__construct' => 0,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CRedirectController%23redirectAction' => 0,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CRedirectController%23urlRedirectAction' => 0,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CRedirectController%23__invoke' => 0,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CRedirectController%24router' => 0,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CRedirectController%24httpPort' => 0,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CRedirectController%24httpsPort' => 0,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CTemplateController' => 0,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CTemplateController%23__construct' => 0,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CTemplateController%23templateAction' => 0,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CTemplateController%23__invoke' => 0,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CTemplateController%24twig' => 0,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CExceptionPanelController' => 0,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CExceptionPanelController%23__construct' => 0,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CExceptionPanelController%23body' => 0,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CExceptionPanelController%23stylesheet' => 0,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CExceptionPanelController%24errorRenderer' => 0,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CExceptionPanelController%24profiler' => 0,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController' => 0,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%23__construct' => 0,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%23homeAction' => 0,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%23panelAction' => 0,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%23toolbarAction' => 0,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%23searchBarAction' => 0,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%23searchResultsAction' => 0,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%23searchAction' => 0,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%23phpinfoAction' => 0,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%23openAction' => 0,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%23getTemplateManager' => 0,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%23denyAccessIfProfilerDisabled' => 0,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%23renderWithCspNonces' => 0,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%24templateManager' => 0,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%24generator' => 0,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%24profiler' => 0,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%24twig' => 0,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%24templates' => 0,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%24cspHandler' => 0,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%24baseDir' => 0,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CRouterController' => 0,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CRouterController%23__construct' => 0,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CRouterController%23panelAction' => 0,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CRouterController%23getTraces' => 0,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CRouterController%24profiler' => 0,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CRouterController%24twig' => 0,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CRouterController%24matcher' => 0,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CRouterController%24routes' => 0,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CRouterController%24expressionLanguageProviders' => 0,
'Symfony%5CComponent%5CSecurity%5CHttp%5CController%5CUserValueResolver' => 0,
'Symfony%5CComponent%5CSecurity%5CHttp%5CController%5CUserValueResolver%23__construct' => 0,
'Symfony%5CComponent%5CSecurity%5CHttp%5CController%5CUserValueResolver%23supports' => 0,
'Symfony%5CComponent%5CSecurity%5CHttp%5CController%5CUserValueResolver%23resolve' => 0,
'Symfony%5CComponent%5CSecurity%5CHttp%5CController%5CUserValueResolver%24tokenStorage' => 0,

], [

0 => [],
1 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Route')),
            clone ($p['OpenApi\\Annotations\\Tag'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Tag')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Parameter')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Response'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Response'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/contests/{cid}',
                ],
            ],
            'stdClass' => [
                'name' => [
                    1 => 'Accounts',
                ],
                '_context' => [
                    1 => $o[2],
                    4 => $o[5],
                    7 => $o[8],
                    10 => $o[11],
                    13 => $o[14],
                ],
                'logger' => [
                    2 => $o[3],
                    5 => $o[6],
                    8 => $o[9],
                    11 => $o[12],
                    14 => $o[15],
                ],
                'filename' => [
                    2 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    5 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    8 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    11 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    14 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    2 => 977,
                    5 => 977,
                    8 => 977,
                    11 => 977,
                    14 => 977,
                ],
                'method' => [
                    2 => 'Annotation',
                    5 => 'Annotation',
                    8 => 'Annotation',
                    11 => 'Annotation',
                    14 => 'Annotation',
                ],
                'class' => [
                    2 => 'DocParser',
                    5 => 'DocParser',
                    8 => 'DocParser',
                    11 => 'DocParser',
                    14 => 'DocParser',
                ],
                'namespace' => [
                    2 => 'Doctrine\\Common\\Annotations',
                    5 => 'Doctrine\\Common\\Annotations',
                    8 => 'Doctrine\\Common\\Annotations',
                    11 => 'Doctrine\\Common\\Annotations',
                    14 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    2 => [
                        $o[1],
                    ],
                    5 => [
                        $o[4],
                    ],
                    8 => [
                        $o[7],
                    ],
                    11 => [
                        $o[10],
                    ],
                    14 => [
                        $o[13],
                    ],
                ],
                'ref' => [
                    4 => '#/components/parameters/cid',
                    7 => '#/components/responses/NotFound',
                    10 => '#/components/responses/Unauthorized',
                    13 => '#/components/responses/InvalidResponse',
                ],
                'response' => [
                    7 => '404',
                    10 => '401',
                    13 => '400',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[4],
            $o[7],
            $o[10],
            $o[13],
        ],
        []
    );
},
2 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Get'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Get')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Security'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Security')),
            clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\JsonContent'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\JsonContent')),
            clone ($p['OpenApi\\Annotations\\Items'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Items')),
            clone ($p['Nelmio\\ApiDocBundle\\Annotation\\Model'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Nelmio\\ApiDocBundle\\Annotation\\Model')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Parameter')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Parameter'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Parameter'],
            clone ($p['OpenApi\\Annotations\\Schema'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Schema')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/accounts',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Security' => [
                'expression' => [
                    1 => 'is_granted(\'ROLE_ADMIN\') or is_granted(\'ROLE_API_READER\')',
                ],
            ],
            'stdClass' => [
                'response' => [
                    2 => '200',
                ],
                'description' => [
                    2 => 'Returns all the accounts for this contest',
                    20 => 'Only show accounts for the given team',
                ],
                '_context' => [
                    2 => $o[3],
                    5 => $o[12],
                    $o[10],
                    $o[8],
                    14 => $o[15],
                    17 => $o[18],
                    20 => $o[24],
                    $o[22],
                ],
                '_unmerged' => [
                    2 => [
                        $o[5],
                    ],
                ],
                'logger' => [
                    3 => $o[4],
                    8 => $o[9],
                    10 => $o[11],
                    12 => $o[13],
                    15 => $o[16],
                    18 => $o[19],
                    22 => $o[23],
                    24 => $o[25],
                ],
                'filename' => [
                    3 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    8 => '/opt/domjudge/domserver/lib/vendor/nelmio/api-doc-bundle/Annotation/Model.php',
                    10 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    12 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    15 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    18 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    22 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    24 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    3 => 977,
                    8 => 66,
                    10 => 977,
                    12 => 977,
                    15 => 977,
                    18 => 977,
                    22 => 977,
                    24 => 977,
                ],
                'method' => [
                    3 => 'Annotation',
                    8 => '__construct',
                    10 => 'Annotation',
                    12 => 'Annotation',
                    15 => 'Annotation',
                    18 => 'Annotation',
                    22 => 'Annotation',
                    24 => 'Annotation',
                ],
                'class' => [
                    3 => 'DocParser',
                    8 => 'Model',
                    10 => 'DocParser',
                    12 => 'DocParser',
                    15 => 'DocParser',
                    18 => 'DocParser',
                    22 => 'DocParser',
                    24 => 'DocParser',
                ],
                'namespace' => [
                    3 => 'Doctrine\\Common\\Annotations',
                    8 => 'Nelmio\\ApiDocBundle\\Annotation',
                    10 => 'Doctrine\\Common\\Annotations',
                    12 => 'Doctrine\\Common\\Annotations',
                    15 => 'Doctrine\\Common\\Annotations',
                    18 => 'Doctrine\\Common\\Annotations',
                    22 => 'Doctrine\\Common\\Annotations',
                    24 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    3 => [
                        $o[2],
                    ],
                    8 => [
                        $o[7],
                    ],
                    10 => [
                        $o[6],
                    ],
                    12 => [
                        $o[5],
                    ],
                    15 => [
                        $o[14],
                    ],
                    18 => [
                        $o[17],
                    ],
                    22 => [
                        $o[21],
                    ],
                    24 => [
                        $o[20],
                    ],
                ],
                'type' => [
                    5 => 'array',
                    7 => 'App\\Entity\\User',
                    21 => 'string',
                ],
                'items' => [
                    5 => $o[6],
                ],
                'ref' => [
                    6 => $o[7],
                    14 => '#/components/parameters/idlist',
                    17 => '#/components/parameters/strict',
                ],
                'name' => [
                    20 => 'team_id',
                ],
                'in' => [
                    20 => 'query',
                ],
                'schema' => [
                    20 => $o[21],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[14],
            $o[17],
            $o[20],
        ],
        []
    );
},
3 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Get'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Get')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Security'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Security')),
            clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['Nelmio\\ApiDocBundle\\Annotation\\Model'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Nelmio\\ApiDocBundle\\Annotation\\Model')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Parameter')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Parameter'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/accounts/{id}',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Security' => [
                'expression' => [
                    1 => 'is_granted(\'ROLE_ADMIN\') or is_granted(\'ROLE_API_READER\')',
                ],
            ],
            'stdClass' => [
                'response' => [
                    2 => '200',
                ],
                'description' => [
                    2 => 'Returns the given account',
                ],
                '_context' => [
                    2 => $o[3],
                    5 => $o[6],
                    8 => $o[9],
                    11 => $o[12],
                ],
                '_unmerged' => [
                    2 => [
                        $o[5],
                    ],
                ],
                'logger' => [
                    3 => $o[4],
                    6 => $o[7],
                    9 => $o[10],
                    12 => $o[13],
                ],
                'filename' => [
                    3 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    6 => '/opt/domjudge/domserver/lib/vendor/nelmio/api-doc-bundle/Annotation/Model.php',
                    9 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    12 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    3 => 977,
                    6 => 66,
                    9 => 977,
                    12 => 977,
                ],
                'method' => [
                    3 => 'Annotation',
                    6 => '__construct',
                    9 => 'Annotation',
                    12 => 'Annotation',
                ],
                'class' => [
                    3 => 'DocParser',
                    6 => 'Model',
                    9 => 'DocParser',
                    12 => 'DocParser',
                ],
                'namespace' => [
                    3 => 'Doctrine\\Common\\Annotations',
                    6 => 'Nelmio\\ApiDocBundle\\Annotation',
                    9 => 'Doctrine\\Common\\Annotations',
                    12 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    3 => [
                        $o[2],
                    ],
                    6 => [
                        $o[5],
                    ],
                    9 => [
                        $o[8],
                    ],
                    12 => [
                        $o[11],
                    ],
                ],
                'type' => [
                    5 => 'App\\Entity\\User',
                ],
                'ref' => [
                    8 => '#/components/parameters/id',
                    11 => '#/components/parameters/strict',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[8],
            $o[11],
        ],
        []
    );
},
4 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Get'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Get')),
            clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['Nelmio\\ApiDocBundle\\Annotation\\Model'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Nelmio\\ApiDocBundle\\Annotation\\Model')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Parameter')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/account',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'stdClass' => [
                'response' => [
                    1 => '200',
                ],
                'description' => [
                    1 => 'Information about the logged in account',
                ],
                '_context' => [
                    1 => $o[2],
                    4 => $o[5],
                    7 => $o[8],
                ],
                '_unmerged' => [
                    1 => [
                        $o[4],
                    ],
                ],
                'logger' => [
                    2 => $o[3],
                    5 => $o[6],
                    8 => $o[9],
                ],
                'filename' => [
                    2 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    5 => '/opt/domjudge/domserver/lib/vendor/nelmio/api-doc-bundle/Annotation/Model.php',
                    8 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    2 => 977,
                    5 => 66,
                    8 => 977,
                ],
                'method' => [
                    2 => 'Annotation',
                    5 => '__construct',
                    8 => 'Annotation',
                ],
                'class' => [
                    2 => 'DocParser',
                    5 => 'Model',
                    8 => 'DocParser',
                ],
                'namespace' => [
                    2 => 'Doctrine\\Common\\Annotations',
                    5 => 'Nelmio\\ApiDocBundle\\Annotation',
                    8 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    2 => [
                        $o[1],
                    ],
                    5 => [
                        $o[4],
                    ],
                    8 => [
                        $o[7],
                    ],
                ],
                'type' => [
                    4 => 'App\\Entity\\User',
                ],
                'ref' => [
                    7 => '#/components/parameters/strict',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[7],
        ],
        []
    );
},
5 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Route')),
            clone ($p['OpenApi\\Annotations\\Tag'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Tag')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Parameter')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Response'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Response'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/contests/{cid}/awards',
                ],
            ],
            'stdClass' => [
                'name' => [
                    1 => 'Awards',
                ],
                '_context' => [
                    1 => $o[2],
                    4 => $o[5],
                    7 => $o[8],
                    10 => $o[11],
                    13 => $o[14],
                ],
                'logger' => [
                    2 => $o[3],
                    5 => $o[6],
                    8 => $o[9],
                    11 => $o[12],
                    14 => $o[15],
                ],
                'filename' => [
                    2 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    5 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    8 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    11 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    14 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    2 => 977,
                    5 => 977,
                    8 => 977,
                    11 => 977,
                    14 => 977,
                ],
                'method' => [
                    2 => 'Annotation',
                    5 => 'Annotation',
                    8 => 'Annotation',
                    11 => 'Annotation',
                    14 => 'Annotation',
                ],
                'class' => [
                    2 => 'DocParser',
                    5 => 'DocParser',
                    8 => 'DocParser',
                    11 => 'DocParser',
                    14 => 'DocParser',
                ],
                'namespace' => [
                    2 => 'Doctrine\\Common\\Annotations',
                    5 => 'Doctrine\\Common\\Annotations',
                    8 => 'Doctrine\\Common\\Annotations',
                    11 => 'Doctrine\\Common\\Annotations',
                    14 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    2 => [
                        $o[1],
                    ],
                    5 => [
                        $o[4],
                    ],
                    8 => [
                        $o[7],
                    ],
                    11 => [
                        $o[10],
                    ],
                    14 => [
                        $o[13],
                    ],
                ],
                'ref' => [
                    4 => '#/components/parameters/cid',
                    7 => '#/components/responses/NotFound',
                    10 => '#/components/responses/Unauthorized',
                    13 => '#/components/responses/InvalidResponse',
                ],
                'response' => [
                    7 => '404',
                    10 => '401',
                    13 => '400',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[4],
            $o[7],
            $o[10],
            $o[13],
        ],
        []
    );
},
6 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Get'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Get')),
            clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\JsonContent'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\JsonContent')),
            clone ($p['OpenApi\\Annotations\\Items'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Items')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Parameter')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'stdClass' => [
                'response' => [
                    1 => '200',
                ],
                'description' => [
                    1 => 'Returns the current teams qualifying for each award',
                ],
                '_context' => [
                    1 => $o[2],
                    4 => $o[8],
                    $o[6],
                    10 => $o[11],
                ],
                '_unmerged' => [
                    1 => [
                        $o[4],
                    ],
                ],
                'logger' => [
                    2 => $o[3],
                    6 => $o[7],
                    8 => $o[9],
                    11 => $o[12],
                ],
                'filename' => [
                    2 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    6 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    8 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    11 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    2 => 977,
                    6 => 977,
                    8 => 977,
                    11 => 977,
                ],
                'method' => [
                    2 => 'Annotation',
                    6 => 'Annotation',
                    8 => 'Annotation',
                    11 => 'Annotation',
                ],
                'class' => [
                    2 => 'DocParser',
                    6 => 'DocParser',
                    8 => 'DocParser',
                    11 => 'DocParser',
                ],
                'namespace' => [
                    2 => 'Doctrine\\Common\\Annotations',
                    6 => 'Doctrine\\Common\\Annotations',
                    8 => 'Doctrine\\Common\\Annotations',
                    11 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    2 => [
                        $o[1],
                    ],
                    6 => [
                        $o[5],
                    ],
                    8 => [
                        $o[4],
                    ],
                    11 => [
                        $o[10],
                    ],
                ],
                'type' => [
                    4 => 'array',
                ],
                'items' => [
                    4 => $o[5],
                ],
                'ref' => [
                    5 => '#/components/schemas/Award',
                    10 => '#/components/parameters/strict',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[10],
        ],
        []
    );
},
7 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Get'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Get')),
            clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\JsonContent'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\JsonContent')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Parameter')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Parameter'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{id}',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'stdClass' => [
                'response' => [
                    1 => '200',
                ],
                'description' => [
                    1 => 'Returns the award for this contest',
                ],
                '_context' => [
                    1 => $o[2],
                    4 => $o[5],
                    7 => $o[8],
                    10 => $o[11],
                ],
                '_unmerged' => [
                    1 => [
                        $o[4],
                    ],
                ],
                'logger' => [
                    2 => $o[3],
                    5 => $o[6],
                    8 => $o[9],
                    11 => $o[12],
                ],
                'filename' => [
                    2 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    5 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    8 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    11 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    2 => 977,
                    5 => 977,
                    8 => 977,
                    11 => 977,
                ],
                'method' => [
                    2 => 'Annotation',
                    5 => 'Annotation',
                    8 => 'Annotation',
                    11 => 'Annotation',
                ],
                'class' => [
                    2 => 'DocParser',
                    5 => 'DocParser',
                    8 => 'DocParser',
                    11 => 'DocParser',
                ],
                'namespace' => [
                    2 => 'Doctrine\\Common\\Annotations',
                    5 => 'Doctrine\\Common\\Annotations',
                    8 => 'Doctrine\\Common\\Annotations',
                    11 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    2 => [
                        $o[1],
                    ],
                    5 => [
                        $o[4],
                    ],
                    8 => [
                        $o[7],
                    ],
                    11 => [
                        $o[10],
                    ],
                ],
                'ref' => [
                    4 => '#/components/schemas/Award',
                    7 => '#/components/parameters/id',
                    10 => '#/components/parameters/strict',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[7],
            $o[10],
        ],
        []
    );
},
8 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Route')),
            clone ($p['OpenApi\\Annotations\\Tag'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Tag')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Parameter')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Response'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Response'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Security'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Security')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/contests/{cid}/balloons',
                ],
            ],
            'stdClass' => [
                'name' => [
                    1 => 'Balloons',
                ],
                '_context' => [
                    1 => $o[2],
                    4 => $o[5],
                    7 => $o[8],
                    10 => $o[11],
                    13 => $o[14],
                ],
                'logger' => [
                    2 => $o[3],
                    5 => $o[6],
                    8 => $o[9],
                    11 => $o[12],
                    14 => $o[15],
                ],
                'filename' => [
                    2 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    5 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    8 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    11 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    14 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    2 => 977,
                    5 => 977,
                    8 => 977,
                    11 => 977,
                    14 => 977,
                ],
                'method' => [
                    2 => 'Annotation',
                    5 => 'Annotation',
                    8 => 'Annotation',
                    11 => 'Annotation',
                    14 => 'Annotation',
                ],
                'class' => [
                    2 => 'DocParser',
                    5 => 'DocParser',
                    8 => 'DocParser',
                    11 => 'DocParser',
                    14 => 'DocParser',
                ],
                'namespace' => [
                    2 => 'Doctrine\\Common\\Annotations',
                    5 => 'Doctrine\\Common\\Annotations',
                    8 => 'Doctrine\\Common\\Annotations',
                    11 => 'Doctrine\\Common\\Annotations',
                    14 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    2 => [
                        $o[1],
                    ],
                    5 => [
                        $o[4],
                    ],
                    8 => [
                        $o[7],
                    ],
                    11 => [
                        $o[10],
                    ],
                    14 => [
                        $o[13],
                    ],
                ],
                'ref' => [
                    4 => '#/components/parameters/cid',
                    7 => '#/components/responses/NotFound',
                    10 => '#/components/responses/Unauthorized',
                    13 => '#/components/responses/InvalidResponse',
                ],
                'response' => [
                    7 => '404',
                    10 => '401',
                    13 => '400',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Security' => [
                'expression' => [
                    16 => 'is_granted(\'ROLE_JURY\') or is_granted(\'ROLE_API_READER\') or is_granted(\'ROLE_BALLOON\')',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[4],
            $o[7],
            $o[10],
            $o[13],
            $o[16],
        ],
        []
    );
},
9 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Get'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Get')),
            clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Parameter')),
            clone ($p['OpenApi\\Annotations\\Schema'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Schema')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'stdClass' => [
                'response' => [
                    1 => '200',
                ],
                'description' => [
                    1 => 'Returns the balloons for this contest.',
                    4 => 'Only show balloons not handed out yet.',
                ],
                '_context' => [
                    1 => $o[2],
                    4 => $o[8],
                    $o[6],
                ],
                'logger' => [
                    2 => $o[3],
                    6 => $o[7],
                    8 => $o[9],
                ],
                'filename' => [
                    2 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    6 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    8 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    2 => 977,
                    6 => 977,
                    8 => 977,
                ],
                'method' => [
                    2 => 'Annotation',
                    6 => 'Annotation',
                    8 => 'Annotation',
                ],
                'class' => [
                    2 => 'DocParser',
                    6 => 'DocParser',
                    8 => 'DocParser',
                ],
                'namespace' => [
                    2 => 'Doctrine\\Common\\Annotations',
                    6 => 'Doctrine\\Common\\Annotations',
                    8 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    2 => [
                        $o[1],
                    ],
                    6 => [
                        $o[5],
                    ],
                    8 => [
                        $o[4],
                    ],
                ],
                'name' => [
                    4 => 'todo',
                ],
                'in' => [
                    4 => 'query',
                ],
                'schema' => [
                    4 => $o[5],
                ],
                'type' => [
                    5 => 'boolean',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[4],
        ],
        []
    );
},
10 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Post'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Post')),
            clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Parameter')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Security'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Security')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{balloonId}/done',
                ],
                'methods' => [
                    [
                        'POST',
                    ],
                ],
            ],
            'stdClass' => [
                'response' => [
                    1 => '204',
                ],
                'description' => [
                    1 => 'The balloon was now marked as done or already marked as such.',
                ],
                '_context' => [
                    1 => $o[2],
                    4 => $o[5],
                ],
                'logger' => [
                    2 => $o[3],
                    5 => $o[6],
                ],
                'filename' => [
                    2 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    5 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    2 => 977,
                    5 => 977,
                ],
                'method' => [
                    2 => 'Annotation',
                    5 => 'Annotation',
                ],
                'class' => [
                    2 => 'DocParser',
                    5 => 'DocParser',
                ],
                'namespace' => [
                    2 => 'Doctrine\\Common\\Annotations',
                    5 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    2 => [
                        $o[1],
                    ],
                    5 => [
                        $o[4],
                    ],
                ],
                'ref' => [
                    4 => '#/components/parameters/balloonId',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Security' => [
                'expression' => [
                    7 => 'is_granted(\'ROLE_JURY\') or is_granted(\'ROLE_BALLOON\')',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[4],
            $o[7],
        ],
        []
    );
},
11 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Route')),
            clone ($p['OpenApi\\Annotations\\Tag'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Tag')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Parameter')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Response'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Response'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/contests/{cid}/clarifications',
                ],
            ],
            'stdClass' => [
                'name' => [
                    1 => 'Clarifications',
                ],
                '_context' => [
                    1 => $o[2],
                    4 => $o[5],
                    7 => $o[8],
                    10 => $o[11],
                    13 => $o[14],
                ],
                'logger' => [
                    2 => $o[3],
                    5 => $o[6],
                    8 => $o[9],
                    11 => $o[12],
                    14 => $o[15],
                ],
                'filename' => [
                    2 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    5 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    8 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    11 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    14 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    2 => 977,
                    5 => 977,
                    8 => 977,
                    11 => 977,
                    14 => 977,
                ],
                'method' => [
                    2 => 'Annotation',
                    5 => 'Annotation',
                    8 => 'Annotation',
                    11 => 'Annotation',
                    14 => 'Annotation',
                ],
                'class' => [
                    2 => 'DocParser',
                    5 => 'DocParser',
                    8 => 'DocParser',
                    11 => 'DocParser',
                    14 => 'DocParser',
                ],
                'namespace' => [
                    2 => 'Doctrine\\Common\\Annotations',
                    5 => 'Doctrine\\Common\\Annotations',
                    8 => 'Doctrine\\Common\\Annotations',
                    11 => 'Doctrine\\Common\\Annotations',
                    14 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    2 => [
                        $o[1],
                    ],
                    5 => [
                        $o[4],
                    ],
                    8 => [
                        $o[7],
                    ],
                    11 => [
                        $o[10],
                    ],
                    14 => [
                        $o[13],
                    ],
                ],
                'ref' => [
                    4 => '#/components/parameters/cid',
                    7 => '#/components/responses/NotFound',
                    10 => '#/components/responses/Unauthorized',
                    13 => '#/components/responses/InvalidResponse',
                ],
                'response' => [
                    7 => '404',
                    10 => '401',
                    13 => '400',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[4],
            $o[7],
            $o[10],
            $o[13],
        ],
        []
    );
},
12 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Get'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Get')),
            clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\JsonContent'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\JsonContent')),
            clone ($p['OpenApi\\Annotations\\Items'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Items')),
            clone ($p['Nelmio\\ApiDocBundle\\Annotation\\Model'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Nelmio\\ApiDocBundle\\Annotation\\Model')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Parameter')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Parameter'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Parameter'],
            clone ($p['OpenApi\\Annotations\\Schema'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Schema')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'stdClass' => [
                'response' => [
                    1 => '200',
                ],
                'description' => [
                    1 => 'Returns all the clarifications for this contest',
                    19 => 'Only show clarifications for the given problem',
                ],
                '_context' => [
                    1 => $o[2],
                    4 => $o[11],
                    $o[9],
                    $o[7],
                    13 => $o[14],
                    16 => $o[17],
                    19 => $o[23],
                    $o[21],
                ],
                '_unmerged' => [
                    1 => [
                        $o[4],
                    ],
                ],
                'logger' => [
                    2 => $o[3],
                    7 => $o[8],
                    9 => $o[10],
                    11 => $o[12],
                    14 => $o[15],
                    17 => $o[18],
                    21 => $o[22],
                    23 => $o[24],
                ],
                'filename' => [
                    2 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    7 => '/opt/domjudge/domserver/lib/vendor/nelmio/api-doc-bundle/Annotation/Model.php',
                    9 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    11 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    14 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    17 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    21 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    23 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    2 => 977,
                    7 => 66,
                    9 => 977,
                    11 => 977,
                    14 => 977,
                    17 => 977,
                    21 => 977,
                    23 => 977,
                ],
                'method' => [
                    2 => 'Annotation',
                    7 => '__construct',
                    9 => 'Annotation',
                    11 => 'Annotation',
                    14 => 'Annotation',
                    17 => 'Annotation',
                    21 => 'Annotation',
                    23 => 'Annotation',
                ],
                'class' => [
                    2 => 'DocParser',
                    7 => 'Model',
                    9 => 'DocParser',
                    11 => 'DocParser',
                    14 => 'DocParser',
                    17 => 'DocParser',
                    21 => 'DocParser',
                    23 => 'DocParser',
                ],
                'namespace' => [
                    2 => 'Doctrine\\Common\\Annotations',
                    7 => 'Nelmio\\ApiDocBundle\\Annotation',
                    9 => 'Doctrine\\Common\\Annotations',
                    11 => 'Doctrine\\Common\\Annotations',
                    14 => 'Doctrine\\Common\\Annotations',
                    17 => 'Doctrine\\Common\\Annotations',
                    21 => 'Doctrine\\Common\\Annotations',
                    23 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    2 => [
                        $o[1],
                    ],
                    7 => [
                        $o[6],
                    ],
                    9 => [
                        $o[5],
                    ],
                    11 => [
                        $o[4],
                    ],
                    14 => [
                        $o[13],
                    ],
                    17 => [
                        $o[16],
                    ],
                    21 => [
                        $o[20],
                    ],
                    23 => [
                        $o[19],
                    ],
                ],
                'type' => [
                    4 => 'array',
                    6 => 'App\\Entity\\Clarification',
                    20 => 'string',
                ],
                'items' => [
                    4 => $o[5],
                ],
                'ref' => [
                    5 => $o[6],
                    13 => '#/components/parameters/idlist',
                    16 => '#/components/parameters/strict',
                ],
                'name' => [
                    19 => 'problem',
                ],
                'in' => [
                    19 => 'query',
                ],
                'schema' => [
                    19 => $o[20],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[13],
            $o[16],
            $o[19],
        ],
        []
    );
},
13 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Get'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Get')),
            clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['Nelmio\\ApiDocBundle\\Annotation\\Model'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Nelmio\\ApiDocBundle\\Annotation\\Model')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Parameter')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Parameter'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{id}',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'stdClass' => [
                'response' => [
                    1 => '200',
                ],
                'description' => [
                    1 => 'Returns the given clarification for this contest',
                ],
                '_context' => [
                    1 => $o[2],
                    4 => $o[5],
                    7 => $o[8],
                    10 => $o[11],
                ],
                '_unmerged' => [
                    1 => [
                        $o[4],
                    ],
                ],
                'logger' => [
                    2 => $o[3],
                    5 => $o[6],
                    8 => $o[9],
                    11 => $o[12],
                ],
                'filename' => [
                    2 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    5 => '/opt/domjudge/domserver/lib/vendor/nelmio/api-doc-bundle/Annotation/Model.php',
                    8 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    11 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    2 => 977,
                    5 => 66,
                    8 => 977,
                    11 => 977,
                ],
                'method' => [
                    2 => 'Annotation',
                    5 => '__construct',
                    8 => 'Annotation',
                    11 => 'Annotation',
                ],
                'class' => [
                    2 => 'DocParser',
                    5 => 'Model',
                    8 => 'DocParser',
                    11 => 'DocParser',
                ],
                'namespace' => [
                    2 => 'Doctrine\\Common\\Annotations',
                    5 => 'Nelmio\\ApiDocBundle\\Annotation',
                    8 => 'Doctrine\\Common\\Annotations',
                    11 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    2 => [
                        $o[1],
                    ],
                    5 => [
                        $o[4],
                    ],
                    8 => [
                        $o[7],
                    ],
                    11 => [
                        $o[10],
                    ],
                ],
                'type' => [
                    4 => 'App\\Entity\\Clarification',
                ],
                'ref' => [
                    7 => '#/components/parameters/id',
                    10 => '#/components/parameters/strict',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[7],
            $o[10],
        ],
        []
    );
},
14 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Post'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Post')),
            clone $p['FOS\\RestBundle\\Controller\\Annotations\\Post'],
            clone ($p['FOS\\RestBundle\\Controller\\Annotations\\Put'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Put')),
            clone ($p['OpenApi\\Annotations\\Post'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Post')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\Put'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Put')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Security'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Security')),
            clone ($p['OpenApi\\Annotations\\RequestBody'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\RequestBody')),
            clone ($p['OpenApi\\Annotations\\MediaType'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\MediaType')),
            clone ($p['OpenApi\\Annotations\\Schema'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Schema')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\MediaType'],
            clone $p['OpenApi\\Annotations\\Schema'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['Nelmio\\ApiDocBundle\\Annotation\\Model'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Nelmio\\ApiDocBundle\\Annotation\\Model')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '',
                    '/',
                    '/{id}',
                ],
                'methods' => [
                    [
                        'POST',
                    ],
                    [
                        'POST',
                    ],
                    [
                        'PUT',
                    ],
                ],
            ],
            'stdClass' => [
                '_context' => [
                    3 => $o[4],
                    6 => $o[7],
                    10 => $o[23],
                    $o[15],
                    $o[13],
                    17 => $o[21],
                    $o[19],
                    25 => $o[26],
                    28 => $o[29],
                ],
                'logger' => [
                    4 => $o[5],
                    7 => $o[8],
                    13 => $o[14],
                    15 => $o[16],
                    19 => $o[20],
                    21 => $o[22],
                    23 => $o[24],
                    26 => $o[27],
                    29 => $o[30],
                ],
                'filename' => [
                    4 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    7 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    13 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    15 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    19 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    21 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    23 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    26 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    29 => '/opt/domjudge/domserver/lib/vendor/nelmio/api-doc-bundle/Annotation/Model.php',
                ],
                'line' => [
                    4 => 977,
                    7 => 977,
                    13 => 977,
                    15 => 977,
                    19 => 977,
                    21 => 977,
                    23 => 977,
                    26 => 977,
                    29 => 66,
                ],
                'method' => [
                    4 => 'Annotation',
                    7 => 'Annotation',
                    13 => 'Annotation',
                    15 => 'Annotation',
                    19 => 'Annotation',
                    21 => 'Annotation',
                    23 => 'Annotation',
                    26 => 'Annotation',
                    29 => '__construct',
                ],
                'class' => [
                    4 => 'DocParser',
                    7 => 'DocParser',
                    13 => 'DocParser',
                    15 => 'DocParser',
                    19 => 'DocParser',
                    21 => 'DocParser',
                    23 => 'DocParser',
                    26 => 'DocParser',
                    29 => 'Model',
                ],
                'namespace' => [
                    4 => 'Doctrine\\Common\\Annotations',
                    7 => 'Doctrine\\Common\\Annotations',
                    13 => 'Doctrine\\Common\\Annotations',
                    15 => 'Doctrine\\Common\\Annotations',
                    19 => 'Doctrine\\Common\\Annotations',
                    21 => 'Doctrine\\Common\\Annotations',
                    23 => 'Doctrine\\Common\\Annotations',
                    26 => 'Doctrine\\Common\\Annotations',
                    29 => 'Nelmio\\ApiDocBundle\\Annotation',
                ],
                'annotations' => [
                    4 => [
                        $o[3],
                    ],
                    7 => [
                        $o[6],
                    ],
                    13 => [
                        $o[12],
                    ],
                    15 => [
                        $o[11],
                    ],
                    19 => [
                        $o[18],
                    ],
                    21 => [
                        $o[17],
                    ],
                    23 => [
                        $o[10],
                    ],
                    26 => [
                        $o[25],
                    ],
                    29 => [
                        $o[28],
                    ],
                ],
                'required' => [
                    10 => true,
                ],
                'content' => [
                    10 => [
                        $o[11],
                        $o[17],
                    ],
                ],
                'mediaType' => [
                    11 => 'multipart/form-data',
                    17 => 'application/json',
                ],
                'schema' => [
                    11 => $o[12],
                    17 => $o[18],
                ],
                'ref' => [
                    12 => '#/components/schemas/ClarificationPost',
                    18 => '#/components/schemas/ClarificationPost',
                ],
                'response' => [
                    25 => '200',
                ],
                'description' => [
                    25 => 'When creating a clarification was successful',
                ],
                '_unmerged' => [
                    25 => [
                        $o[28],
                    ],
                ],
                'type' => [
                    28 => 'App\\Entity\\Clarification',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Security' => [
                'expression' => [
                    9 => 'is_granted(\'ROLE_TEAM\') or is_granted(\'ROLE_API_WRITER\')',
                ],
                'message' => [
                    9 => 'You need to have the Team Member role to add a clarification',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
            $o[6],
            $o[9],
            $o[10],
            $o[25],
        ],
        []
    );
},
15 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Route')),
            clone ($p['OpenApi\\Annotations\\Tag'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Tag')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Response'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/contests',
                ],
            ],
            'stdClass' => [
                'name' => [
                    1 => 'Contests',
                ],
                '_context' => [
                    1 => $o[2],
                    4 => $o[5],
                    7 => $o[8],
                ],
                'logger' => [
                    2 => $o[3],
                    5 => $o[6],
                    8 => $o[9],
                ],
                'filename' => [
                    2 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    5 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    8 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    2 => 977,
                    5 => 977,
                    8 => 977,
                ],
                'method' => [
                    2 => 'Annotation',
                    5 => 'Annotation',
                    8 => 'Annotation',
                ],
                'class' => [
                    2 => 'DocParser',
                    5 => 'DocParser',
                    8 => 'DocParser',
                ],
                'namespace' => [
                    2 => 'Doctrine\\Common\\Annotations',
                    5 => 'Doctrine\\Common\\Annotations',
                    8 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    2 => [
                        $o[1],
                    ],
                    5 => [
                        $o[4],
                    ],
                    8 => [
                        $o[7],
                    ],
                ],
                'ref' => [
                    4 => '#/components/responses/NotFound',
                    7 => '#/components/responses/Unauthorized',
                ],
                'response' => [
                    4 => '404',
                    7 => '401',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[4],
            $o[7],
        ],
        []
    );
},
16 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Post'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Post')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
            clone ($p['OpenApi\\Annotations\\Post'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Post')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\RequestBody'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\RequestBody')),
            clone ($p['OpenApi\\Annotations\\MediaType'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\MediaType')),
            clone ($p['OpenApi\\Annotations\\Schema'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Schema')),
            clone ($p['OpenApi\\Annotations\\Property'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Property')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '',
                ],
                'methods' => [
                    [
                        'POST',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
            'stdClass' => [
                '_context' => [
                    2 => $o[3],
                    5 => $o[18],
                    $o[16],
                    $o[14],
                    $o[9],
                    11 => $o[12],
                    20 => $o[21],
                ],
                'logger' => [
                    3 => $o[4],
                    9 => $o[10],
                    12 => $o[13],
                    14 => $o[15],
                    16 => $o[17],
                    18 => $o[19],
                    21 => $o[22],
                ],
                'filename' => [
                    3 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    9 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    12 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    14 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    16 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    18 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    21 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    3 => 977,
                    9 => 977,
                    12 => 977,
                    14 => 977,
                    16 => 977,
                    18 => 977,
                    21 => 977,
                ],
                'method' => [
                    3 => 'Annotation',
                    9 => 'Annotation',
                    12 => 'Annotation',
                    14 => 'Annotation',
                    16 => 'Annotation',
                    18 => 'Annotation',
                    21 => 'Annotation',
                ],
                'class' => [
                    3 => 'DocParser',
                    9 => 'DocParser',
                    12 => 'DocParser',
                    14 => 'DocParser',
                    16 => 'DocParser',
                    18 => 'DocParser',
                    21 => 'DocParser',
                ],
                'namespace' => [
                    3 => 'Doctrine\\Common\\Annotations',
                    9 => 'Doctrine\\Common\\Annotations',
                    12 => 'Doctrine\\Common\\Annotations',
                    14 => 'Doctrine\\Common\\Annotations',
                    16 => 'Doctrine\\Common\\Annotations',
                    18 => 'Doctrine\\Common\\Annotations',
                    21 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    3 => [
                        $o[2],
                    ],
                    9 => [
                        $o[8],
                    ],
                    12 => [
                        $o[11],
                    ],
                    14 => [
                        $o[7],
                    ],
                    16 => [
                        $o[6],
                    ],
                    18 => [
                        $o[5],
                    ],
                    21 => [
                        $o[20],
                    ],
                ],
                'required' => [
                    5 => true,
                ],
                'content' => [
                    5 => [
                        $o[6],
                    ],
                ],
                'mediaType' => [
                    6 => 'multipart/form-data',
                ],
                'schema' => [
                    6 => $o[7],
                ],
                'properties' => [
                    7 => [
                        $o[8],
                        $o[11],
                    ],
                ],
                'property' => [
                    8 => 'yaml',
                    11 => 'json',
                ],
                'description' => [
                    8 => 'The contest.yaml file to import.',
                    11 => 'The contest.json file to import.',
                    20 => 'Returns the API ID of the added contest.',
                ],
                'type' => [
                    8 => 'string',
                    11 => 'string',
                ],
                'format' => [
                    8 => 'binary',
                    11 => 'binary',
                ],
                'response' => [
                    20 => '200',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[5],
            $o[20],
        ],
        []
    );
},
17 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Get'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Get')),
            clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\JsonContent'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\JsonContent')),
            clone ($p['OpenApi\\Annotations\\Items'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Items')),
            clone ($p['OpenApi\\Annotations\\Schema'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Schema')),
            clone ($p['Nelmio\\ApiDocBundle\\Annotation\\Model'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Nelmio\\ApiDocBundle\\Annotation\\Model')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Schema'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Parameter')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Parameter'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Parameter'],
            clone $p['OpenApi\\Annotations\\Schema'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'stdClass' => [
                'response' => [
                    1 => '200',
                ],
                'description' => [
                    1 => 'Returns all contests visible to the user (all contests for privileged users, active contests otherwise)',
                    25 => 'Whether to only return data pertaining to contests that are active',
                ],
                '_context' => [
                    1 => $o[2],
                    4 => $o[17],
                    $o[15],
                    $o[10],
                    $o[8],
                    12 => $o[13],
                    19 => $o[20],
                    22 => $o[23],
                    25 => $o[29],
                    $o[27],
                ],
                '_unmerged' => [
                    1 => [
                        $o[4],
                    ],
                ],
                'logger' => [
                    2 => $o[3],
                    8 => $o[9],
                    10 => $o[11],
                    13 => $o[14],
                    15 => $o[16],
                    17 => $o[18],
                    20 => $o[21],
                    23 => $o[24],
                    27 => $o[28],
                    29 => $o[30],
                ],
                'filename' => [
                    2 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    8 => '/opt/domjudge/domserver/lib/vendor/nelmio/api-doc-bundle/Annotation/Model.php',
                    10 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    13 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    15 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    17 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    20 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    23 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    27 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    29 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    2 => 977,
                    8 => 66,
                    10 => 977,
                    13 => 977,
                    15 => 977,
                    17 => 977,
                    20 => 977,
                    23 => 977,
                    27 => 977,
                    29 => 977,
                ],
                'method' => [
                    2 => 'Annotation',
                    8 => '__construct',
                    10 => 'Annotation',
                    13 => 'Annotation',
                    15 => 'Annotation',
                    17 => 'Annotation',
                    20 => 'Annotation',
                    23 => 'Annotation',
                    27 => 'Annotation',
                    29 => 'Annotation',
                ],
                'class' => [
                    2 => 'DocParser',
                    8 => 'Model',
                    10 => 'DocParser',
                    13 => 'DocParser',
                    15 => 'DocParser',
                    17 => 'DocParser',
                    20 => 'DocParser',
                    23 => 'DocParser',
                    27 => 'DocParser',
                    29 => 'DocParser',
                ],
                'namespace' => [
                    2 => 'Doctrine\\Common\\Annotations',
                    8 => 'Nelmio\\ApiDocBundle\\Annotation',
                    10 => 'Doctrine\\Common\\Annotations',
                    13 => 'Doctrine\\Common\\Annotations',
                    15 => 'Doctrine\\Common\\Annotations',
                    17 => 'Doctrine\\Common\\Annotations',
                    20 => 'Doctrine\\Common\\Annotations',
                    23 => 'Doctrine\\Common\\Annotations',
                    27 => 'Doctrine\\Common\\Annotations',
                    29 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    2 => [
                        $o[1],
                    ],
                    8 => [
                        $o[7],
                    ],
                    10 => [
                        $o[6],
                    ],
                    13 => [
                        $o[12],
                    ],
                    15 => [
                        $o[5],
                    ],
                    17 => [
                        $o[4],
                    ],
                    20 => [
                        $o[19],
                    ],
                    23 => [
                        $o[22],
                    ],
                    27 => [
                        $o[26],
                    ],
                    29 => [
                        $o[25],
                    ],
                ],
                'type' => [
                    4 => 'array',
                    7 => 'App\\Entity\\Contest',
                    26 => 'boolean',
                ],
                'items' => [
                    4 => $o[5],
                ],
                'allOf' => [
                    5 => [
                        $o[6],
                        $o[12],
                    ],
                ],
                'ref' => [
                    6 => $o[7],
                    12 => '#/components/schemas/Banner',
                    19 => '#/components/parameters/idlist',
                    22 => '#/components/parameters/strict',
                ],
                'name' => [
                    25 => 'onlyActive',
                ],
                'in' => [
                    25 => 'query',
                ],
                'schema' => [
                    25 => $o[26],
                ],
                'default' => [
                    26 => false,
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[19],
            $o[22],
            $o[25],
        ],
        []
    );
},
18 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Get'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Get')),
            clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\JsonContent'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\JsonContent')),
            clone ($p['OpenApi\\Annotations\\Schema'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Schema')),
            clone ($p['Nelmio\\ApiDocBundle\\Annotation\\Model'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Nelmio\\ApiDocBundle\\Annotation\\Model')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Schema'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Parameter')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Parameter'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{cid}',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'stdClass' => [
                'response' => [
                    1 => '200',
                ],
                'description' => [
                    1 => 'Returns the given contest',
                ],
                '_context' => [
                    1 => $o[2],
                    4 => $o[14],
                    $o[9],
                    $o[7],
                    11 => $o[12],
                    16 => $o[17],
                    19 => $o[20],
                ],
                '_unmerged' => [
                    1 => [
                        $o[4],
                    ],
                ],
                'logger' => [
                    2 => $o[3],
                    7 => $o[8],
                    9 => $o[10],
                    12 => $o[13],
                    14 => $o[15],
                    17 => $o[18],
                    20 => $o[21],
                ],
                'filename' => [
                    2 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    7 => '/opt/domjudge/domserver/lib/vendor/nelmio/api-doc-bundle/Annotation/Model.php',
                    9 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    12 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    14 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    17 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    20 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    2 => 977,
                    7 => 66,
                    9 => 977,
                    12 => 977,
                    14 => 977,
                    17 => 977,
                    20 => 977,
                ],
                'method' => [
                    2 => 'Annotation',
                    7 => '__construct',
                    9 => 'Annotation',
                    12 => 'Annotation',
                    14 => 'Annotation',
                    17 => 'Annotation',
                    20 => 'Annotation',
                ],
                'class' => [
                    2 => 'DocParser',
                    7 => 'Model',
                    9 => 'DocParser',
                    12 => 'DocParser',
                    14 => 'DocParser',
                    17 => 'DocParser',
                    20 => 'DocParser',
                ],
                'namespace' => [
                    2 => 'Doctrine\\Common\\Annotations',
                    7 => 'Nelmio\\ApiDocBundle\\Annotation',
                    9 => 'Doctrine\\Common\\Annotations',
                    12 => 'Doctrine\\Common\\Annotations',
                    14 => 'Doctrine\\Common\\Annotations',
                    17 => 'Doctrine\\Common\\Annotations',
                    20 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    2 => [
                        $o[1],
                    ],
                    7 => [
                        $o[6],
                    ],
                    9 => [
                        $o[5],
                    ],
                    12 => [
                        $o[11],
                    ],
                    14 => [
                        $o[4],
                    ],
                    17 => [
                        $o[16],
                    ],
                    20 => [
                        $o[19],
                    ],
                ],
                'allOf' => [
                    4 => [
                        $o[5],
                        $o[11],
                    ],
                ],
                'ref' => [
                    5 => $o[6],
                    11 => '#/components/schemas/Banner',
                    16 => '#/components/parameters/cid',
                    19 => '#/components/parameters/strict',
                ],
                'type' => [
                    6 => 'App\\Entity\\Contest',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[16],
            $o[19],
        ],
        []
    );
},
19 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Get'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Get')),
            clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone ($p['OpenApi\\Annotations\\MediaType'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\MediaType')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone $p['OpenApi\\Annotations\\MediaType'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\MediaType'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Parameter')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{id}/banner',
                ],
                'name' => [
                    'contest_banner',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'stdClass' => [
                'response' => [
                    1 => '200',
                ],
                'description' => [
                    1 => 'Returns the given contest banner in PNG, JPG or SVG format',
                ],
                'content' => [
                    1 => [
                        $o[2],
                        $o[5],
                        $o[8],
                    ],
                ],
                '_context' => [
                    1 => $o[11],
                    $o[3],
                    5 => $o[6],
                    8 => $o[9],
                    13 => $o[14],
                ],
                'mediaType' => [
                    2 => 'image/png',
                    5 => 'image/jpeg',
                    8 => 'image/svg+xml',
                ],
                'logger' => [
                    3 => $o[4],
                    6 => $o[7],
                    9 => $o[10],
                    11 => $o[12],
                    14 => $o[15],
                ],
                'filename' => [
                    3 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    6 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    9 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    11 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    14 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    3 => 977,
                    6 => 977,
                    9 => 977,
                    11 => 977,
                    14 => 977,
                ],
                'method' => [
                    3 => 'Annotation',
                    6 => 'Annotation',
                    9 => 'Annotation',
                    11 => 'Annotation',
                    14 => 'Annotation',
                ],
                'class' => [
                    3 => 'DocParser',
                    6 => 'DocParser',
                    9 => 'DocParser',
                    11 => 'DocParser',
                    14 => 'DocParser',
                ],
                'namespace' => [
                    3 => 'Doctrine\\Common\\Annotations',
                    6 => 'Doctrine\\Common\\Annotations',
                    9 => 'Doctrine\\Common\\Annotations',
                    11 => 'Doctrine\\Common\\Annotations',
                    14 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    3 => [
                        $o[2],
                    ],
                    6 => [
                        $o[5],
                    ],
                    9 => [
                        $o[8],
                    ],
                    11 => [
                        $o[1],
                    ],
                    14 => [
                        $o[13],
                    ],
                ],
                'ref' => [
                    13 => '#/components/parameters/id',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[13],
        ],
        []
    );
},
20 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Delete'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Delete')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
            clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Parameter')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{id}/banner',
                ],
                'name' => [
                    'delete_contest_banner',
                ],
                'methods' => [
                    [
                        'DELETE',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
            'stdClass' => [
                'response' => [
                    2 => '204',
                ],
                'description' => [
                    2 => 'Deleting banner succeeded',
                ],
                '_context' => [
                    2 => $o[3],
                    5 => $o[6],
                ],
                'logger' => [
                    3 => $o[4],
                    6 => $o[7],
                ],
                'filename' => [
                    3 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    6 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    3 => 977,
                    6 => 977,
                ],
                'method' => [
                    3 => 'Annotation',
                    6 => 'Annotation',
                ],
                'class' => [
                    3 => 'DocParser',
                    6 => 'DocParser',
                ],
                'namespace' => [
                    3 => 'Doctrine\\Common\\Annotations',
                    6 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    3 => [
                        $o[2],
                    ],
                    6 => [
                        $o[5],
                    ],
                ],
                'ref' => [
                    5 => '#/components/parameters/id',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[5],
        ],
        []
    );
},
21 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Post'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Post')),
            clone ($p['FOS\\RestBundle\\Controller\\Annotations\\Put'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Put')),
            clone ($p['OpenApi\\Annotations\\RequestBody'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\RequestBody')),
            clone ($p['OpenApi\\Annotations\\MediaType'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\MediaType')),
            clone ($p['OpenApi\\Annotations\\Schema'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Schema')),
            clone ($p['OpenApi\\Annotations\\Property'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Property')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
            clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Parameter')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{id}/banner',
                    '/{id}/banner',
                ],
                'name' => [
                    'post_contest_banner',
                    'put_contest_banner',
                ],
                'methods' => [
                    [
                        'POST',
                    ],
                    [
                        'PUT',
                    ],
                ],
            ],
            'stdClass' => [
                'required' => [
                    2 => true,
                    4 => [
                        'banner',
                    ],
                ],
                'content' => [
                    2 => [
                        $o[3],
                    ],
                ],
                '_context' => [
                    2 => $o[12],
                    $o[10],
                    $o[8],
                    $o[6],
                    15 => $o[16],
                    18 => $o[19],
                ],
                'mediaType' => [
                    3 => 'multipart/form-data',
                ],
                'schema' => [
                    3 => $o[4],
                ],
                'properties' => [
                    4 => [
                        $o[5],
                    ],
                ],
                'property' => [
                    5 => 'banner',
                ],
                'description' => [
                    5 => 'The banner to use.',
                    15 => 'Setting banner succeeded',
                ],
                'type' => [
                    5 => 'string',
                ],
                'format' => [
                    5 => 'binary',
                ],
                'logger' => [
                    6 => $o[7],
                    8 => $o[9],
                    10 => $o[11],
                    12 => $o[13],
                    16 => $o[17],
                    19 => $o[20],
                ],
                'filename' => [
                    6 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    8 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    10 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    12 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    16 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    19 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    6 => 977,
                    8 => 977,
                    10 => 977,
                    12 => 977,
                    16 => 977,
                    19 => 977,
                ],
                'method' => [
                    6 => 'Annotation',
                    8 => 'Annotation',
                    10 => 'Annotation',
                    12 => 'Annotation',
                    16 => 'Annotation',
                    19 => 'Annotation',
                ],
                'class' => [
                    6 => 'DocParser',
                    8 => 'DocParser',
                    10 => 'DocParser',
                    12 => 'DocParser',
                    16 => 'DocParser',
                    19 => 'DocParser',
                ],
                'namespace' => [
                    6 => 'Doctrine\\Common\\Annotations',
                    8 => 'Doctrine\\Common\\Annotations',
                    10 => 'Doctrine\\Common\\Annotations',
                    12 => 'Doctrine\\Common\\Annotations',
                    16 => 'Doctrine\\Common\\Annotations',
                    19 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    6 => [
                        $o[5],
                    ],
                    8 => [
                        $o[4],
                    ],
                    10 => [
                        $o[3],
                    ],
                    12 => [
                        $o[2],
                    ],
                    16 => [
                        $o[15],
                    ],
                    19 => [
                        $o[18],
                    ],
                ],
                'response' => [
                    15 => '204',
                ],
                'ref' => [
                    18 => '#/components/parameters/id',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    14 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[14],
            $o[15],
            $o[18],
        ],
        []
    );
},
22 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Patch'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Patch')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
            clone ($p['OpenApi\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Parameter')),
            clone ($p['OpenApi\\Annotations\\Schema'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Schema')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\RequestBody'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\RequestBody')),
            clone ($p['OpenApi\\Annotations\\MediaType'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\MediaType')),
            clone $p['OpenApi\\Annotations\\Schema'],
            clone ($p['OpenApi\\Annotations\\Property'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Property')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Response'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{cid}',
                ],
                'methods' => [
                    [
                        'PATCH',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_API_WRITER',
                ],
            ],
            'stdClass' => [
                'name' => [
                    2 => 'cid',
                ],
                'in' => [
                    2 => 'path',
                ],
                'description' => [
                    2 => 'The ID of the contest to change the start time for',
                    11 => 'The ID of the contest to change the start time for',
                    14 => 'The new start time of the contest',
                    23 => 'Contest start time changed successfully',
                    26 => 'Changing start time not allowed',
                ],
                'schema' => [
                    2 => $o[3],
                    9 => $o[10],
                ],
                '_context' => [
                    2 => $o[6],
                    $o[4],
                    8 => $o[21],
                    $o[19],
                    $o[17],
                    $o[12],
                    14 => $o[15],
                    23 => $o[24],
                    26 => $o[27],
                ],
                'type' => [
                    3 => 'string',
                    11 => 'string',
                    14 => 'string',
                ],
                'logger' => [
                    4 => $o[5],
                    6 => $o[7],
                    12 => $o[13],
                    15 => $o[16],
                    17 => $o[18],
                    19 => $o[20],
                    21 => $o[22],
                    24 => $o[25],
                    27 => $o[28],
                ],
                'filename' => [
                    4 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    6 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    12 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    15 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    17 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    19 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    21 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    24 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    27 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    4 => 977,
                    6 => 977,
                    12 => 977,
                    15 => 977,
                    17 => 977,
                    19 => 977,
                    21 => 977,
                    24 => 977,
                    27 => 977,
                ],
                'method' => [
                    4 => 'Annotation',
                    6 => 'Annotation',
                    12 => 'Annotation',
                    15 => 'Annotation',
                    17 => 'Annotation',
                    19 => 'Annotation',
                    21 => 'Annotation',
                    24 => 'Annotation',
                    27 => 'Annotation',
                ],
                'class' => [
                    4 => 'DocParser',
                    6 => 'DocParser',
                    12 => 'DocParser',
                    15 => 'DocParser',
                    17 => 'DocParser',
                    19 => 'DocParser',
                    21 => 'DocParser',
                    24 => 'DocParser',
                    27 => 'DocParser',
                ],
                'namespace' => [
                    4 => 'Doctrine\\Common\\Annotations',
                    6 => 'Doctrine\\Common\\Annotations',
                    12 => 'Doctrine\\Common\\Annotations',
                    15 => 'Doctrine\\Common\\Annotations',
                    17 => 'Doctrine\\Common\\Annotations',
                    19 => 'Doctrine\\Common\\Annotations',
                    21 => 'Doctrine\\Common\\Annotations',
                    24 => 'Doctrine\\Common\\Annotations',
                    27 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    4 => [
                        $o[3],
                    ],
                    6 => [
                        $o[2],
                    ],
                    12 => [
                        $o[11],
                    ],
                    15 => [
                        $o[14],
                    ],
                    17 => [
                        $o[10],
                    ],
                    19 => [
                        $o[9],
                    ],
                    21 => [
                        $o[8],
                    ],
                    24 => [
                        $o[23],
                    ],
                    27 => [
                        $o[26],
                    ],
                ],
                'required' => [
                    8 => true,
                    10 => [
                        'id',
                    ],
                ],
                'content' => [
                    8 => [
                        $o[9],
                    ],
                ],
                'mediaType' => [
                    9 => 'application/x-www-form-urlencoded',
                ],
                'properties' => [
                    10 => [
                        $o[11],
                        $o[14],
                    ],
                ],
                'property' => [
                    11 => 'id',
                    14 => 'start_time',
                ],
                'format' => [
                    14 => 'date-time',
                ],
                'response' => [
                    23 => '200',
                    26 => '403',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[8],
            $o[23],
            $o[26],
        ],
        []
    );
},
23 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Get'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Get')),
            clone ($p['OpenApi\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Parameter')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone ($p['OpenApi\\Annotations\\MediaType'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\MediaType')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{cid}/contest-yaml',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'stdClass' => [
                'ref' => [
                    1 => '#/components/parameters/cid',
                ],
                '_context' => [
                    1 => $o[2],
                    4 => $o[8],
                    $o[6],
                ],
                'logger' => [
                    2 => $o[3],
                    6 => $o[7],
                    8 => $o[9],
                ],
                'filename' => [
                    2 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    6 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    8 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    2 => 977,
                    6 => 977,
                    8 => 977,
                ],
                'method' => [
                    2 => 'Annotation',
                    6 => 'Annotation',
                    8 => 'Annotation',
                ],
                'class' => [
                    2 => 'DocParser',
                    6 => 'DocParser',
                    8 => 'DocParser',
                ],
                'namespace' => [
                    2 => 'Doctrine\\Common\\Annotations',
                    6 => 'Doctrine\\Common\\Annotations',
                    8 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    2 => [
                        $o[1],
                    ],
                    6 => [
                        $o[5],
                    ],
                    8 => [
                        $o[4],
                    ],
                ],
                'response' => [
                    4 => '200',
                ],
                'description' => [
                    4 => 'The contest in YAML format',
                ],
                'content' => [
                    4 => [
                        $o[5],
                    ],
                ],
                'mediaType' => [
                    5 => 'application/x-yaml',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[4],
        ],
        []
    );
},
24 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Get'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Get')),
            clone ($p['OpenApi\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Parameter')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\JsonContent'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\JsonContent')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{cid}/state',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'stdClass' => [
                'ref' => [
                    1 => '#/components/parameters/cid',
                    7 => '#/components/schemas/ContestState',
                ],
                '_context' => [
                    1 => $o[2],
                    4 => $o[5],
                    7 => $o[8],
                ],
                'logger' => [
                    2 => $o[3],
                    5 => $o[6],
                    8 => $o[9],
                ],
                'filename' => [
                    2 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    5 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    8 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    2 => 977,
                    5 => 977,
                    8 => 977,
                ],
                'method' => [
                    2 => 'Annotation',
                    5 => 'Annotation',
                    8 => 'Annotation',
                ],
                'class' => [
                    2 => 'DocParser',
                    5 => 'DocParser',
                    8 => 'DocParser',
                ],
                'namespace' => [
                    2 => 'Doctrine\\Common\\Annotations',
                    5 => 'Doctrine\\Common\\Annotations',
                    8 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    2 => [
                        $o[1],
                    ],
                    5 => [
                        $o[4],
                    ],
                    8 => [
                        $o[7],
                    ],
                ],
                'response' => [
                    4 => '200',
                ],
                'description' => [
                    4 => 'The contest state',
                ],
                '_unmerged' => [
                    4 => [
                        $o[7],
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[4],
        ],
        []
    );
},
25 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Get'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Get')),
            clone ($p['OpenApi\\Annotations\\Get'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Get')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Security'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Security')),
            clone ($p['OpenApi\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Parameter')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Parameter'],
            clone ($p['OpenApi\\Annotations\\Schema'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Schema')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Parameter'],
            clone $p['OpenApi\\Annotations\\Schema'],
            clone ($p['OpenApi\\Annotations\\Items'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Items')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Parameter'],
            clone $p['OpenApi\\Annotations\\Schema'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Parameter'],
            clone $p['OpenApi\\Annotations\\Schema'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone ($p['OpenApi\\Annotations\\MediaType'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\MediaType')),
            clone $p['OpenApi\\Annotations\\Schema'],
            clone $p['OpenApi\\Annotations\\Items'],
            clone ($p['OpenApi\\Annotations\\Property'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Property')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{cid}/event-feed',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'stdClass' => [
                '_context' => [
                    1 => $o[2],
                    5 => $o[6],
                    8 => $o[12],
                    $o[10],
                    14 => $o[21],
                    $o[19],
                    $o[17],
                    23 => $o[27],
                    $o[25],
                    29 => $o[33],
                    $o[31],
                    35 => $o[60],
                    $o[58],
                    $o[56],
                    $o[54],
                    $o[40],
                    42 => $o[43],
                    45 => $o[46],
                    48 => $o[49],
                    51 => $o[52],
                ],
                'logger' => [
                    2 => $o[3],
                    6 => $o[7],
                    10 => $o[11],
                    12 => $o[13],
                    17 => $o[18],
                    19 => $o[20],
                    21 => $o[22],
                    25 => $o[26],
                    27 => $o[28],
                    31 => $o[32],
                    33 => $o[34],
                    40 => $o[41],
                    43 => $o[44],
                    46 => $o[47],
                    49 => $o[50],
                    52 => $o[53],
                    54 => $o[55],
                    56 => $o[57],
                    58 => $o[59],
                    60 => $o[61],
                ],
                'filename' => [
                    2 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    6 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    10 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    12 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    17 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    19 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    21 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    25 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    27 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    31 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    33 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    40 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    43 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    46 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    49 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    52 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    54 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    56 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    58 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    60 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    2 => 977,
                    6 => 977,
                    10 => 977,
                    12 => 977,
                    17 => 977,
                    19 => 977,
                    21 => 977,
                    25 => 977,
                    27 => 977,
                    31 => 977,
                    33 => 977,
                    40 => 977,
                    43 => 977,
                    46 => 977,
                    49 => 977,
                    52 => 977,
                    54 => 977,
                    56 => 977,
                    58 => 977,
                    60 => 977,
                ],
                'method' => [
                    2 => 'Annotation',
                    6 => 'Annotation',
                    10 => 'Annotation',
                    12 => 'Annotation',
                    17 => 'Annotation',
                    19 => 'Annotation',
                    21 => 'Annotation',
                    25 => 'Annotation',
                    27 => 'Annotation',
                    31 => 'Annotation',
                    33 => 'Annotation',
                    40 => 'Annotation',
                    43 => 'Annotation',
                    46 => 'Annotation',
                    49 => 'Annotation',
                    52 => 'Annotation',
                    54 => 'Annotation',
                    56 => 'Annotation',
                    58 => 'Annotation',
                    60 => 'Annotation',
                ],
                'class' => [
                    2 => 'DocParser',
                    6 => 'DocParser',
                    10 => 'DocParser',
                    12 => 'DocParser',
                    17 => 'DocParser',
                    19 => 'DocParser',
                    21 => 'DocParser',
                    25 => 'DocParser',
                    27 => 'DocParser',
                    31 => 'DocParser',
                    33 => 'DocParser',
                    40 => 'DocParser',
                    43 => 'DocParser',
                    46 => 'DocParser',
                    49 => 'DocParser',
                    52 => 'DocParser',
                    54 => 'DocParser',
                    56 => 'DocParser',
                    58 => 'DocParser',
                    60 => 'DocParser',
                ],
                'namespace' => [
                    2 => 'Doctrine\\Common\\Annotations',
                    6 => 'Doctrine\\Common\\Annotations',
                    10 => 'Doctrine\\Common\\Annotations',
                    12 => 'Doctrine\\Common\\Annotations',
                    17 => 'Doctrine\\Common\\Annotations',
                    19 => 'Doctrine\\Common\\Annotations',
                    21 => 'Doctrine\\Common\\Annotations',
                    25 => 'Doctrine\\Common\\Annotations',
                    27 => 'Doctrine\\Common\\Annotations',
                    31 => 'Doctrine\\Common\\Annotations',
                    33 => 'Doctrine\\Common\\Annotations',
                    40 => 'Doctrine\\Common\\Annotations',
                    43 => 'Doctrine\\Common\\Annotations',
                    46 => 'Doctrine\\Common\\Annotations',
                    49 => 'Doctrine\\Common\\Annotations',
                    52 => 'Doctrine\\Common\\Annotations',
                    54 => 'Doctrine\\Common\\Annotations',
                    56 => 'Doctrine\\Common\\Annotations',
                    58 => 'Doctrine\\Common\\Annotations',
                    60 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    2 => [
                        $o[1],
                    ],
                    6 => [
                        $o[5],
                    ],
                    10 => [
                        $o[9],
                    ],
                    12 => [
                        $o[8],
                    ],
                    17 => [
                        $o[16],
                    ],
                    19 => [
                        $o[15],
                    ],
                    21 => [
                        $o[14],
                    ],
                    25 => [
                        $o[24],
                    ],
                    27 => [
                        $o[23],
                    ],
                    31 => [
                        $o[30],
                    ],
                    33 => [
                        $o[29],
                    ],
                    40 => [
                        $o[39],
                    ],
                    43 => [
                        $o[42],
                    ],
                    46 => [
                        $o[45],
                    ],
                    49 => [
                        $o[48],
                    ],
                    52 => [
                        $o[51],
                    ],
                    54 => [
                        $o[38],
                    ],
                    56 => [
                        $o[37],
                    ],
                    58 => [
                        $o[36],
                    ],
                    60 => [
                        $o[35],
                    ],
                ],
                'ref' => [
                    5 => '#/components/parameters/cid',
                ],
                'name' => [
                    8 => 'since_id',
                    14 => 'types',
                    23 => 'strict',
                    29 => 'stream',
                ],
                'in' => [
                    8 => 'query',
                    14 => 'query',
                    23 => 'query',
                    29 => 'query',
                ],
                'description' => [
                    8 => 'Only get events after this event',
                    14 => 'Types to filter the event feed on',
                    16 => 'A single type',
                    23 => 'Whether to only include CCS compliant properties in the response',
                    29 => 'Whether to stream the output or stop immediately',
                    35 => 'The events',
                ],
                'schema' => [
                    8 => $o[9],
                    14 => $o[15],
                    23 => $o[24],
                    29 => $o[30],
                    36 => $o[37],
                ],
                'type' => [
                    9 => 'string',
                    15 => 'array',
                    'string',
                    24 => 'boolean',
                    30 => 'boolean',
                    37 => 'array',
                    'object',
                    'string',
                    42 => 'string',
                    45 => 'string',
                    48 => 'object',
                    51 => 'string',
                ],
                'items' => [
                    15 => $o[16],
                    37 => $o[38],
                ],
                'default' => [
                    24 => false,
                    30 => true,
                ],
                'response' => [
                    35 => '200',
                ],
                'content' => [
                    35 => [
                        $o[36],
                    ],
                ],
                'mediaType' => [
                    36 => 'application/x-ndjson',
                ],
                'properties' => [
                    38 => [
                        $o[39],
                        $o[42],
                        $o[45],
                        $o[48],
                        $o[51],
                    ],
                ],
                'property' => [
                    39 => 'id',
                    42 => 'type',
                    45 => 'op',
                    48 => 'data',
                    51 => 'time',
                ],
                'format' => [
                    51 => 'date-time',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Security' => [
                'expression' => [
                    4 => 'is_granted(\'ROLE_JURY\') or is_granted(\'ROLE_API_READER\')',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[4],
            $o[5],
            $o[8],
            $o[14],
            $o[23],
            $o[29],
            $o[35],
        ],
        []
    );
},
26 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Get'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Get')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
            clone ($p['OpenApi\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Parameter')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\JsonContent'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\JsonContent')),
            clone ($p['OpenApi\\Annotations\\Property'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Property')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{cid}/status',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_API_READER',
                ],
            ],
            'stdClass' => [
                'ref' => [
                    2 => '#/components/parameters/cid',
                ],
                '_context' => [
                    2 => $o[3],
                    5 => $o[6],
                    8 => $o[18],
                    $o[10],
                    12 => $o[13],
                    15 => $o[16],
                ],
                'logger' => [
                    3 => $o[4],
                    6 => $o[7],
                    10 => $o[11],
                    13 => $o[14],
                    16 => $o[17],
                    18 => $o[19],
                ],
                'filename' => [
                    3 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    6 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    10 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    13 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    16 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    18 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    3 => 977,
                    6 => 977,
                    10 => 977,
                    13 => 977,
                    16 => 977,
                    18 => 977,
                ],
                'method' => [
                    3 => 'Annotation',
                    6 => 'Annotation',
                    10 => 'Annotation',
                    13 => 'Annotation',
                    16 => 'Annotation',
                    18 => 'Annotation',
                ],
                'class' => [
                    3 => 'DocParser',
                    6 => 'DocParser',
                    10 => 'DocParser',
                    13 => 'DocParser',
                    16 => 'DocParser',
                    18 => 'DocParser',
                ],
                'namespace' => [
                    3 => 'Doctrine\\Common\\Annotations',
                    6 => 'Doctrine\\Common\\Annotations',
                    10 => 'Doctrine\\Common\\Annotations',
                    13 => 'Doctrine\\Common\\Annotations',
                    16 => 'Doctrine\\Common\\Annotations',
                    18 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    3 => [
                        $o[2],
                    ],
                    6 => [
                        $o[5],
                    ],
                    10 => [
                        $o[9],
                    ],
                    13 => [
                        $o[12],
                    ],
                    16 => [
                        $o[15],
                    ],
                    18 => [
                        $o[8],
                    ],
                ],
                'response' => [
                    5 => '200',
                ],
                'description' => [
                    5 => 'General status information for the given contest',
                ],
                '_unmerged' => [
                    5 => [
                        $o[8],
                    ],
                ],
                'properties' => [
                    8 => [
                        $o[9],
                        $o[12],
                        $o[15],
                    ],
                ],
                'type' => [
                    8 => 'object',
                    'integer',
                    12 => 'integer',
                    15 => 'integer',
                ],
                'property' => [
                    9 => 'num_submissions',
                    12 => 'num_queued',
                    15 => 'num_judging',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[5],
        ],
        []
    );
},
27 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Route')),
            clone ($p['OpenApi\\Annotations\\Tag'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Tag')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/executables',
                ],
            ],
            'stdClass' => [
                'name' => [
                    1 => 'Executables',
                ],
                '_context' => [
                    1 => $o[2],
                ],
                'logger' => [
                    2 => $o[3],
                ],
                'filename' => [
                    2 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    2 => 977,
                ],
                'method' => [
                    2 => 'Annotation',
                ],
                'class' => [
                    2 => 'DocParser',
                ],
                'namespace' => [
                    2 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    2 => [
                        $o[1],
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
28 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Security'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Security')),
            clone ($p['FOS\\RestBundle\\Controller\\Annotations\\Get'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Get')),
            clone ($p['OpenApi\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Parameter')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\JsonContent'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\JsonContent')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Security' => [
                'expression' => [
                    'is_granted(\'ROLE_JURY\') or is_granted(\'ROLE_JUDGEHOST\')',
                ],
            ],
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    1 => '/{id}',
                ],
                'methods' => [
                    1 => [
                        'GET',
                    ],
                ],
            ],
            'stdClass' => [
                'ref' => [
                    2 => '#/components/parameters/id',
                ],
                '_context' => [
                    2 => $o[3],
                    5 => $o[6],
                    8 => $o[9],
                ],
                'logger' => [
                    3 => $o[4],
                    6 => $o[7],
                    9 => $o[10],
                ],
                'filename' => [
                    3 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    6 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    9 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    3 => 977,
                    6 => 977,
                    9 => 977,
                ],
                'method' => [
                    3 => 'Annotation',
                    6 => 'Annotation',
                    9 => 'Annotation',
                ],
                'class' => [
                    3 => 'DocParser',
                    6 => 'DocParser',
                    9 => 'DocParser',
                ],
                'namespace' => [
                    3 => 'Doctrine\\Common\\Annotations',
                    6 => 'Doctrine\\Common\\Annotations',
                    9 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    3 => [
                        $o[2],
                    ],
                    6 => [
                        $o[5],
                    ],
                    9 => [
                        $o[8],
                    ],
                ],
                'response' => [
                    5 => '200',
                ],
                'description' => [
                    5 => 'Information about the requested executable',
                    8 => 'Base64-encoded executable contents',
                ],
                '_unmerged' => [
                    5 => [
                        $o[8],
                    ],
                ],
                'type' => [
                    8 => 'string',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[5],
        ],
        []
    );
},
29 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['OpenApi\\Annotations\\Tag'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Tag')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'General',
                ],
                '_context' => [
                    $o[1],
                    3 => $o[4],
                ],
                'logger' => [
                    1 => $o[2],
                    4 => $o[5],
                ],
                'filename' => [
                    1 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    4 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    1 => 977,
                    4 => 977,
                ],
                'method' => [
                    1 => 'Annotation',
                    4 => 'Annotation',
                ],
                'class' => [
                    1 => 'DocParser',
                    4 => 'DocParser',
                ],
                'namespace' => [
                    1 => 'Doctrine\\Common\\Annotations',
                    4 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    1 => [
                        $o[0],
                    ],
                    4 => [
                        $o[3],
                    ],
                ],
                'ref' => [
                    3 => '#/components/responses/InvalidResponse',
                ],
                'response' => [
                    3 => '400',
                ],
            ],
        ],
        [
            $o[0],
            $o[3],
        ],
        []
    );
},
30 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Get'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Get')),
            clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\JsonContent'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\JsonContent')),
            clone ($p['OpenApi\\Annotations\\Property'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Property')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/version',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'stdClass' => [
                'response' => [
                    1 => '200',
                ],
                'description' => [
                    1 => 'The current API version information',
                ],
                '_context' => [
                    1 => $o[2],
                    4 => $o[8],
                    $o[6],
                ],
                '_unmerged' => [
                    1 => [
                        $o[4],
                    ],
                ],
                'logger' => [
                    2 => $o[3],
                    6 => $o[7],
                    8 => $o[9],
                ],
                'filename' => [
                    2 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    6 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    8 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    2 => 977,
                    6 => 977,
                    8 => 977,
                ],
                'method' => [
                    2 => 'Annotation',
                    6 => 'Annotation',
                    8 => 'Annotation',
                ],
                'class' => [
                    2 => 'DocParser',
                    6 => 'DocParser',
                    8 => 'DocParser',
                ],
                'namespace' => [
                    2 => 'Doctrine\\Common\\Annotations',
                    6 => 'Doctrine\\Common\\Annotations',
                    8 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    2 => [
                        $o[1],
                    ],
                    6 => [
                        $o[5],
                    ],
                    8 => [
                        $o[4],
                    ],
                ],
                'properties' => [
                    4 => [
                        $o[5],
                    ],
                ],
                'type' => [
                    4 => 'object',
                    'integer',
                ],
                'property' => [
                    5 => 'api_version',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
31 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Get'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Get')),
            clone $p['FOS\\RestBundle\\Controller\\Annotations\\Get'],
            clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\JsonContent'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\JsonContent')),
            clone ($p['OpenApi\\Annotations\\Property'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Property')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/info',
                    '',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                    [
                        'GET',
                    ],
                ],
                'name' => [
                    1 => 'api_root',
                ],
            ],
            'stdClass' => [
                'response' => [
                    2 => '200',
                ],
                'description' => [
                    2 => 'Information about the API and DOMjudge',
                ],
                '_context' => [
                    2 => $o[3],
                    5 => $o[18],
                    $o[7],
                    9 => $o[10],
                    12 => $o[13],
                    15 => $o[16],
                ],
                '_unmerged' => [
                    2 => [
                        $o[5],
                    ],
                ],
                'logger' => [
                    3 => $o[4],
                    7 => $o[8],
                    10 => $o[11],
                    13 => $o[14],
                    16 => $o[17],
                    18 => $o[19],
                ],
                'filename' => [
                    3 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    7 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    10 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    13 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    16 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    18 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    3 => 977,
                    7 => 977,
                    10 => 977,
                    13 => 977,
                    16 => 977,
                    18 => 977,
                ],
                'method' => [
                    3 => 'Annotation',
                    7 => 'Annotation',
                    10 => 'Annotation',
                    13 => 'Annotation',
                    16 => 'Annotation',
                    18 => 'Annotation',
                ],
                'class' => [
                    3 => 'DocParser',
                    7 => 'DocParser',
                    10 => 'DocParser',
                    13 => 'DocParser',
                    16 => 'DocParser',
                    18 => 'DocParser',
                ],
                'namespace' => [
                    3 => 'Doctrine\\Common\\Annotations',
                    7 => 'Doctrine\\Common\\Annotations',
                    10 => 'Doctrine\\Common\\Annotations',
                    13 => 'Doctrine\\Common\\Annotations',
                    16 => 'Doctrine\\Common\\Annotations',
                    18 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    3 => [
                        $o[2],
                    ],
                    7 => [
                        $o[6],
                    ],
                    10 => [
                        $o[9],
                    ],
                    13 => [
                        $o[12],
                    ],
                    16 => [
                        $o[15],
                    ],
                    18 => [
                        $o[5],
                    ],
                ],
                'properties' => [
                    5 => [
                        $o[6],
                        $o[9],
                        $o[12],
                        $o[15],
                    ],
                ],
                'type' => [
                    5 => 'object',
                    'integer',
                    9 => 'string',
                    12 => 'string',
                    15 => 'string',
                ],
                'property' => [
                    6 => 'api_version',
                    9 => 'domjudge_version',
                    12 => 'environment',
                    15 => 'doc_url',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
32 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Get'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Get')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
            clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\JsonContent'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\JsonContent')),
            clone ($p['OpenApi\\Annotations\\Items'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Items')),
            clone ($p['OpenApi\\Annotations\\Property'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Property')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/status',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_API_READER',
                ],
            ],
            'stdClass' => [
                'response' => [
                    2 => '200',
                ],
                'description' => [
                    2 => 'General status information for the currently active contests',
                ],
                '_context' => [
                    2 => $o[3],
                    5 => $o[21],
                    $o[19],
                    $o[8],
                    10 => $o[11],
                    13 => $o[14],
                    16 => $o[17],
                ],
                '_unmerged' => [
                    2 => [
                        $o[5],
                    ],
                ],
                'logger' => [
                    3 => $o[4],
                    8 => $o[9],
                    11 => $o[12],
                    14 => $o[15],
                    17 => $o[18],
                    19 => $o[20],
                    21 => $o[22],
                ],
                'filename' => [
                    3 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    8 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    11 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    14 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    17 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    19 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    21 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    3 => 977,
                    8 => 977,
                    11 => 977,
                    14 => 977,
                    17 => 977,
                    19 => 977,
                    21 => 977,
                ],
                'method' => [
                    3 => 'Annotation',
                    8 => 'Annotation',
                    11 => 'Annotation',
                    14 => 'Annotation',
                    17 => 'Annotation',
                    19 => 'Annotation',
                    21 => 'Annotation',
                ],
                'class' => [
                    3 => 'DocParser',
                    8 => 'DocParser',
                    11 => 'DocParser',
                    14 => 'DocParser',
                    17 => 'DocParser',
                    19 => 'DocParser',
                    21 => 'DocParser',
                ],
                'namespace' => [
                    3 => 'Doctrine\\Common\\Annotations',
                    8 => 'Doctrine\\Common\\Annotations',
                    11 => 'Doctrine\\Common\\Annotations',
                    14 => 'Doctrine\\Common\\Annotations',
                    17 => 'Doctrine\\Common\\Annotations',
                    19 => 'Doctrine\\Common\\Annotations',
                    21 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    3 => [
                        $o[2],
                    ],
                    8 => [
                        $o[7],
                    ],
                    11 => [
                        $o[10],
                    ],
                    14 => [
                        $o[13],
                    ],
                    17 => [
                        $o[16],
                    ],
                    19 => [
                        $o[6],
                    ],
                    21 => [
                        $o[5],
                    ],
                ],
                'type' => [
                    5 => 'array',
                    'object',
                    'integer',
                    10 => 'integer',
                    13 => 'integer',
                    16 => 'integer',
                ],
                'items' => [
                    5 => $o[6],
                ],
                'properties' => [
                    6 => [
                        $o[7],
                        $o[10],
                        $o[13],
                        $o[16],
                    ],
                ],
                'property' => [
                    7 => 'cid',
                    10 => 'num_submissions',
                    13 => 'num_queued',
                    16 => 'num_judging',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
33 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Get'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Get')),
            clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['Nelmio\\ApiDocBundle\\Annotation\\Model'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Nelmio\\ApiDocBundle\\Annotation\\Model')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/user',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'stdClass' => [
                'response' => [
                    1 => '200',
                ],
                'description' => [
                    1 => 'Information about the logged in user',
                ],
                '_context' => [
                    1 => $o[2],
                    4 => $o[5],
                ],
                '_unmerged' => [
                    1 => [
                        $o[4],
                    ],
                ],
                'logger' => [
                    2 => $o[3],
                    5 => $o[6],
                ],
                'filename' => [
                    2 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    5 => '/opt/domjudge/domserver/lib/vendor/nelmio/api-doc-bundle/Annotation/Model.php',
                ],
                'line' => [
                    2 => 977,
                    5 => 66,
                ],
                'method' => [
                    2 => 'Annotation',
                    5 => '__construct',
                ],
                'class' => [
                    2 => 'DocParser',
                    5 => 'Model',
                ],
                'namespace' => [
                    2 => 'Doctrine\\Common\\Annotations',
                    5 => 'Nelmio\\ApiDocBundle\\Annotation',
                ],
                'annotations' => [
                    2 => [
                        $o[1],
                    ],
                    5 => [
                        $o[4],
                    ],
                ],
                'type' => [
                    4 => 'App\\Entity\\User',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
34 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Get'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Get')),
            clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\JsonContent'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\JsonContent')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Parameter')),
            clone ($p['OpenApi\\Annotations\\Schema'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Schema')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/config',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'stdClass' => [
                'response' => [
                    1 => '200',
                ],
                'description' => [
                    1 => 'The configuration variables',
                    7 => 'Get only this configuration variable',
                ],
                '_context' => [
                    1 => $o[2],
                    4 => $o[5],
                    7 => $o[11],
                    $o[9],
                ],
                '_unmerged' => [
                    1 => [
                        $o[4],
                    ],
                ],
                'logger' => [
                    2 => $o[3],
                    5 => $o[6],
                    9 => $o[10],
                    11 => $o[12],
                ],
                'filename' => [
                    2 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    5 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    9 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    11 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    2 => 977,
                    5 => 977,
                    9 => 977,
                    11 => 977,
                ],
                'method' => [
                    2 => 'Annotation',
                    5 => 'Annotation',
                    9 => 'Annotation',
                    11 => 'Annotation',
                ],
                'class' => [
                    2 => 'DocParser',
                    5 => 'DocParser',
                    9 => 'DocParser',
                    11 => 'DocParser',
                ],
                'namespace' => [
                    2 => 'Doctrine\\Common\\Annotations',
                    5 => 'Doctrine\\Common\\Annotations',
                    9 => 'Doctrine\\Common\\Annotations',
                    11 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    2 => [
                        $o[1],
                    ],
                    5 => [
                        $o[4],
                    ],
                    9 => [
                        $o[8],
                    ],
                    11 => [
                        $o[7],
                    ],
                ],
                'type' => [
                    4 => 'object',
                    8 => 'string',
                ],
                'name' => [
                    7 => 'name',
                ],
                'in' => [
                    7 => 'query',
                ],
                'required' => [
                    7 => false,
                ],
                'schema' => [
                    7 => $o[8],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[7],
        ],
        []
    );
},
35 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Put'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Put')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
            clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\JsonContent'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\JsonContent')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\RequestBody'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\RequestBody')),
            clone ($p['OpenApi\\Annotations\\MediaType'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\MediaType')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\MediaType'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/config',
                ],
                'methods' => [
                    [
                        'PUT',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
            'stdClass' => [
                'response' => [
                    2 => '200',
                ],
                'description' => [
                    2 => 'The full configuration after change',
                ],
                '_context' => [
                    2 => $o[3],
                    5 => $o[6],
                    8 => $o[15],
                    $o[10],
                    12 => $o[13],
                ],
                '_unmerged' => [
                    2 => [
                        $o[5],
                    ],
                ],
                'logger' => [
                    3 => $o[4],
                    6 => $o[7],
                    10 => $o[11],
                    13 => $o[14],
                    15 => $o[16],
                ],
                'filename' => [
                    3 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    6 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    10 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    13 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    15 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    3 => 977,
                    6 => 977,
                    10 => 977,
                    13 => 977,
                    15 => 977,
                ],
                'method' => [
                    3 => 'Annotation',
                    6 => 'Annotation',
                    10 => 'Annotation',
                    13 => 'Annotation',
                    15 => 'Annotation',
                ],
                'class' => [
                    3 => 'DocParser',
                    6 => 'DocParser',
                    10 => 'DocParser',
                    13 => 'DocParser',
                    15 => 'DocParser',
                ],
                'namespace' => [
                    3 => 'Doctrine\\Common\\Annotations',
                    6 => 'Doctrine\\Common\\Annotations',
                    10 => 'Doctrine\\Common\\Annotations',
                    13 => 'Doctrine\\Common\\Annotations',
                    15 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    3 => [
                        $o[2],
                    ],
                    6 => [
                        $o[5],
                    ],
                    10 => [
                        $o[9],
                    ],
                    13 => [
                        $o[12],
                    ],
                    15 => [
                        $o[8],
                    ],
                ],
                'type' => [
                    5 => 'object',
                ],
                'required' => [
                    8 => true,
                ],
                'content' => [
                    8 => [
                        $o[9],
                        $o[12],
                    ],
                ],
                'mediaType' => [
                    9 => 'application/x-www-form-urlencoded',
                    12 => 'application/json',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[8],
        ],
        []
    );
},
36 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Get'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Get')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
            clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\JsonContent'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\JsonContent')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/config/check',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
            'stdClass' => [
                'response' => [
                    2 => '200',
                ],
                'description' => [
                    2 => 'Result of the various checks performed',
                ],
                '_context' => [
                    2 => $o[3],
                    5 => $o[6],
                ],
                '_unmerged' => [
                    2 => [
                        $o[5],
                    ],
                ],
                'logger' => [
                    3 => $o[4],
                    6 => $o[7],
                ],
                'filename' => [
                    3 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    6 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    3 => 977,
                    6 => 977,
                ],
                'method' => [
                    3 => 'Annotation',
                    6 => 'Annotation',
                ],
                'class' => [
                    3 => 'DocParser',
                    6 => 'DocParser',
                ],
                'namespace' => [
                    3 => 'Doctrine\\Common\\Annotations',
                    6 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    3 => [
                        $o[2],
                    ],
                    6 => [
                        $o[5],
                    ],
                ],
                'type' => [
                    5 => 'object',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
37 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Get'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Get')),
            clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone ($p['OpenApi\\Annotations\\MediaType'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\MediaType')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Parameter')),
            clone ($p['OpenApi\\Annotations\\Schema'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Schema')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/country-flags/{countryCode}/{size}',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'stdClass' => [
                'response' => [
                    1 => '200',
                ],
                'description' => [
                    1 => 'Returns the given country flag in SVG format',
                    7 => 'The ISO 3166-1 alpha-3 code for the country to get the flag for',
                ],
                'content' => [
                    1 => [
                        $o[2],
                    ],
                ],
                '_context' => [
                    1 => $o[5],
                    $o[3],
                    7 => $o[11],
                    $o[9],
                ],
                'mediaType' => [
                    2 => 'image/svg+xml',
                ],
                'logger' => [
                    3 => $o[4],
                    5 => $o[6],
                    9 => $o[10],
                    11 => $o[12],
                ],
                'filename' => [
                    3 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    5 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    9 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    11 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    3 => 977,
                    5 => 977,
                    9 => 977,
                    11 => 977,
                ],
                'method' => [
                    3 => 'Annotation',
                    5 => 'Annotation',
                    9 => 'Annotation',
                    11 => 'Annotation',
                ],
                'class' => [
                    3 => 'DocParser',
                    5 => 'DocParser',
                    9 => 'DocParser',
                    11 => 'DocParser',
                ],
                'namespace' => [
                    3 => 'Doctrine\\Common\\Annotations',
                    5 => 'Doctrine\\Common\\Annotations',
                    9 => 'Doctrine\\Common\\Annotations',
                    11 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    3 => [
                        $o[2],
                    ],
                    5 => [
                        $o[1],
                    ],
                    9 => [
                        $o[8],
                    ],
                    11 => [
                        $o[7],
                    ],
                ],
                'name' => [
                    7 => 'countryCode',
                ],
                'in' => [
                    7 => 'path',
                ],
                'schema' => [
                    7 => $o[8],
                ],
                'type' => [
                    8 => 'string',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[7],
        ],
        []
    );
},
38 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Post'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Post')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
            clone ($p['OpenApi\\Annotations\\Post'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Post')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\Tag'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Tag')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\RequestBody'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\RequestBody')),
            clone ($p['OpenApi\\Annotations\\MediaType'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\MediaType')),
            clone ($p['OpenApi\\Annotations\\Schema'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Schema')),
            clone ($p['OpenApi\\Annotations\\Property'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Property')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\JsonContent'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\JsonContent')),
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone ($p['OpenApi\\Annotations\\Items'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Items')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/problems',
                ],
                'methods' => [
                    [
                        'POST',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
            'stdClass' => [
                '_context' => [
                    2 => $o[3],
                    5 => $o[6],
                    8 => $o[21],
                    $o[19],
                    $o[17],
                    $o[12],
                    14 => $o[15],
                    23 => $o[24],
                    26 => $o[36],
                    $o[28],
                    30 => $o[34],
                    $o[32],
                ],
                'logger' => [
                    3 => $o[4],
                    6 => $o[7],
                    12 => $o[13],
                    15 => $o[16],
                    17 => $o[18],
                    19 => $o[20],
                    21 => $o[22],
                    24 => $o[25],
                    28 => $o[29],
                    32 => $o[33],
                    34 => $o[35],
                    36 => $o[37],
                ],
                'filename' => [
                    3 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    6 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    12 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    15 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    17 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    19 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    21 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    24 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    28 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    32 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    34 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    36 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    3 => 977,
                    6 => 977,
                    12 => 977,
                    15 => 977,
                    17 => 977,
                    19 => 977,
                    21 => 977,
                    24 => 977,
                    28 => 977,
                    32 => 977,
                    34 => 977,
                    36 => 977,
                ],
                'method' => [
                    3 => 'Annotation',
                    6 => 'Annotation',
                    12 => 'Annotation',
                    15 => 'Annotation',
                    17 => 'Annotation',
                    19 => 'Annotation',
                    21 => 'Annotation',
                    24 => 'Annotation',
                    28 => 'Annotation',
                    32 => 'Annotation',
                    34 => 'Annotation',
                    36 => 'Annotation',
                ],
                'class' => [
                    3 => 'DocParser',
                    6 => 'DocParser',
                    12 => 'DocParser',
                    15 => 'DocParser',
                    17 => 'DocParser',
                    19 => 'DocParser',
                    21 => 'DocParser',
                    24 => 'DocParser',
                    28 => 'DocParser',
                    32 => 'DocParser',
                    34 => 'DocParser',
                    36 => 'DocParser',
                ],
                'namespace' => [
                    3 => 'Doctrine\\Common\\Annotations',
                    6 => 'Doctrine\\Common\\Annotations',
                    12 => 'Doctrine\\Common\\Annotations',
                    15 => 'Doctrine\\Common\\Annotations',
                    17 => 'Doctrine\\Common\\Annotations',
                    19 => 'Doctrine\\Common\\Annotations',
                    21 => 'Doctrine\\Common\\Annotations',
                    24 => 'Doctrine\\Common\\Annotations',
                    28 => 'Doctrine\\Common\\Annotations',
                    32 => 'Doctrine\\Common\\Annotations',
                    34 => 'Doctrine\\Common\\Annotations',
                    36 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    3 => [
                        $o[2],
                    ],
                    6 => [
                        $o[5],
                    ],
                    12 => [
                        $o[11],
                    ],
                    15 => [
                        $o[14],
                    ],
                    17 => [
                        $o[10],
                    ],
                    19 => [
                        $o[9],
                    ],
                    21 => [
                        $o[8],
                    ],
                    24 => [
                        $o[23],
                    ],
                    28 => [
                        $o[27],
                    ],
                    32 => [
                        $o[31],
                    ],
                    34 => [
                        $o[30],
                    ],
                    36 => [
                        $o[26],
                    ],
                ],
                'name' => [
                    5 => 'Problems',
                ],
                'required' => [
                    8 => true,
                    10 => [
                        'zip',
                    ],
                ],
                'content' => [
                    8 => [
                        $o[9],
                    ],
                ],
                'mediaType' => [
                    9 => 'multipart/form-data',
                ],
                'schema' => [
                    9 => $o[10],
                ],
                'properties' => [
                    10 => [
                        $o[11],
                        $o[14],
                    ],
                    26 => [
                        $o[27],
                        $o[30],
                    ],
                ],
                'property' => [
                    11 => 'zip',
                    14 => 'problem',
                    27 => 'problem_id',
                    30 => 'messages',
                ],
                'description' => [
                    11 => 'The problem archive to import',
                    14 => 'Optional: problem id to update.',
                    23 => 'Returns the ID of the imported problem and any messages produced',
                    27 => 'The ID of the imported problem',
                    31 => 'Messages produced while adding problems',
                ],
                'type' => [
                    11 => 'string',
                    14 => 'string',
                    26 => 'object',
                    'integer',
                    30 => 'array',
                    'string',
                ],
                'format' => [
                    11 => 'binary',
                ],
                'response' => [
                    23 => '200',
                ],
                '_unmerged' => [
                    23 => [
                        $o[26],
                    ],
                ],
                'items' => [
                    30 => $o[31],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[5],
            $o[8],
            $o[23],
        ],
        []
    );
},
39 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Route')),
            clone ($p['OpenApi\\Annotations\\Tag'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Tag')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Parameter')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Response'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Response'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/contests/{cid}/groups',
                ],
            ],
            'stdClass' => [
                'name' => [
                    1 => 'Groups',
                ],
                '_context' => [
                    1 => $o[2],
                    4 => $o[5],
                    7 => $o[8],
                    10 => $o[11],
                    13 => $o[14],
                ],
                'logger' => [
                    2 => $o[3],
                    5 => $o[6],
                    8 => $o[9],
                    11 => $o[12],
                    14 => $o[15],
                ],
                'filename' => [
                    2 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    5 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    8 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    11 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    14 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    2 => 977,
                    5 => 977,
                    8 => 977,
                    11 => 977,
                    14 => 977,
                ],
                'method' => [
                    2 => 'Annotation',
                    5 => 'Annotation',
                    8 => 'Annotation',
                    11 => 'Annotation',
                    14 => 'Annotation',
                ],
                'class' => [
                    2 => 'DocParser',
                    5 => 'DocParser',
                    8 => 'DocParser',
                    11 => 'DocParser',
                    14 => 'DocParser',
                ],
                'namespace' => [
                    2 => 'Doctrine\\Common\\Annotations',
                    5 => 'Doctrine\\Common\\Annotations',
                    8 => 'Doctrine\\Common\\Annotations',
                    11 => 'Doctrine\\Common\\Annotations',
                    14 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    2 => [
                        $o[1],
                    ],
                    5 => [
                        $o[4],
                    ],
                    8 => [
                        $o[7],
                    ],
                    11 => [
                        $o[10],
                    ],
                    14 => [
                        $o[13],
                    ],
                ],
                'ref' => [
                    4 => '#/components/parameters/cid',
                    7 => '#/components/responses/NotFound',
                    10 => '#/components/responses/Unauthorized',
                    13 => '#/components/responses/InvalidResponse',
                ],
                'response' => [
                    7 => '404',
                    10 => '401',
                    13 => '400',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[4],
            $o[7],
            $o[10],
            $o[13],
        ],
        []
    );
},
40 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Get'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Get')),
            clone ($p['OpenApi\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Parameter')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone $p['OpenApi\\Annotations\\Parameter'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Parameter'],
            clone ($p['OpenApi\\Annotations\\Schema'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Schema')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\JsonContent'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\JsonContent')),
            clone ($p['OpenApi\\Annotations\\Items'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Items')),
            clone ($p['Nelmio\\ApiDocBundle\\Annotation\\Model'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Nelmio\\ApiDocBundle\\Annotation\\Model')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'stdClass' => [
                'ref' => [
                    1 => '#/components/parameters/idlist',
                    4 => '#/components/parameters/strict',
                    17 => $o[18],
                ],
                '_context' => [
                    1 => $o[2],
                    4 => $o[5],
                    7 => $o[11],
                    $o[9],
                    13 => $o[14],
                    16 => $o[23],
                    $o[21],
                    $o[19],
                ],
                'logger' => [
                    2 => $o[3],
                    5 => $o[6],
                    9 => $o[10],
                    11 => $o[12],
                    14 => $o[15],
                    19 => $o[20],
                    21 => $o[22],
                    23 => $o[24],
                ],
                'filename' => [
                    2 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    5 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    9 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    11 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    14 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    19 => '/opt/domjudge/domserver/lib/vendor/nelmio/api-doc-bundle/Annotation/Model.php',
                    21 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    23 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    2 => 977,
                    5 => 977,
                    9 => 977,
                    11 => 977,
                    14 => 977,
                    19 => 66,
                    21 => 977,
                    23 => 977,
                ],
                'method' => [
                    2 => 'Annotation',
                    5 => 'Annotation',
                    9 => 'Annotation',
                    11 => 'Annotation',
                    14 => 'Annotation',
                    19 => '__construct',
                    21 => 'Annotation',
                    23 => 'Annotation',
                ],
                'class' => [
                    2 => 'DocParser',
                    5 => 'DocParser',
                    9 => 'DocParser',
                    11 => 'DocParser',
                    14 => 'DocParser',
                    19 => 'Model',
                    21 => 'DocParser',
                    23 => 'DocParser',
                ],
                'namespace' => [
                    2 => 'Doctrine\\Common\\Annotations',
                    5 => 'Doctrine\\Common\\Annotations',
                    9 => 'Doctrine\\Common\\Annotations',
                    11 => 'Doctrine\\Common\\Annotations',
                    14 => 'Doctrine\\Common\\Annotations',
                    19 => 'Nelmio\\ApiDocBundle\\Annotation',
                    21 => 'Doctrine\\Common\\Annotations',
                    23 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    2 => [
                        $o[1],
                    ],
                    5 => [
                        $o[4],
                    ],
                    9 => [
                        $o[8],
                    ],
                    11 => [
                        $o[7],
                    ],
                    14 => [
                        $o[13],
                    ],
                    19 => [
                        $o[18],
                    ],
                    21 => [
                        $o[17],
                    ],
                    23 => [
                        $o[16],
                    ],
                ],
                'name' => [
                    7 => 'public',
                ],
                'in' => [
                    7 => 'query',
                ],
                'description' => [
                    7 => 'Only show public groups, even for users with more permissions',
                    13 => 'Returns all the groups for this contest',
                ],
                'schema' => [
                    7 => $o[8],
                ],
                'type' => [
                    8 => 'boolean',
                    16 => 'array',
                    18 => 'App\\Entity\\TeamCategory',
                ],
                'response' => [
                    13 => '200',
                ],
                '_unmerged' => [
                    13 => [
                        $o[16],
                    ],
                ],
                'items' => [
                    16 => $o[17],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[4],
            $o[7],
            $o[13],
        ],
        []
    );
},
41 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Get'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Get')),
            clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['Nelmio\\ApiDocBundle\\Annotation\\Model'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Nelmio\\ApiDocBundle\\Annotation\\Model')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Parameter')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Parameter'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{id}',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'stdClass' => [
                'response' => [
                    1 => '200',
                ],
                'description' => [
                    1 => 'Returns the given group for this contest',
                ],
                '_context' => [
                    1 => $o[2],
                    4 => $o[5],
                    7 => $o[8],
                    10 => $o[11],
                ],
                '_unmerged' => [
                    1 => [
                        $o[4],
                    ],
                ],
                'logger' => [
                    2 => $o[3],
                    5 => $o[6],
                    8 => $o[9],
                    11 => $o[12],
                ],
                'filename' => [
                    2 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    5 => '/opt/domjudge/domserver/lib/vendor/nelmio/api-doc-bundle/Annotation/Model.php',
                    8 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    11 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    2 => 977,
                    5 => 66,
                    8 => 977,
                    11 => 977,
                ],
                'method' => [
                    2 => 'Annotation',
                    5 => '__construct',
                    8 => 'Annotation',
                    11 => 'Annotation',
                ],
                'class' => [
                    2 => 'DocParser',
                    5 => 'Model',
                    8 => 'DocParser',
                    11 => 'DocParser',
                ],
                'namespace' => [
                    2 => 'Doctrine\\Common\\Annotations',
                    5 => 'Nelmio\\ApiDocBundle\\Annotation',
                    8 => 'Doctrine\\Common\\Annotations',
                    11 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    2 => [
                        $o[1],
                    ],
                    5 => [
                        $o[4],
                    ],
                    8 => [
                        $o[7],
                    ],
                    11 => [
                        $o[10],
                    ],
                ],
                'type' => [
                    4 => 'App\\Entity\\TeamCategory',
                ],
                'ref' => [
                    7 => '#/components/parameters/id',
                    10 => '#/components/parameters/strict',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[7],
            $o[10],
        ],
        []
    );
},
42 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Post'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Post')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
            clone ($p['OpenApi\\Annotations\\RequestBody'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\RequestBody')),
            clone ($p['OpenApi\\Annotations\\MediaType'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\MediaType')),
            clone ($p['OpenApi\\Annotations\\Schema'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Schema')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\MediaType'],
            clone $p['OpenApi\\Annotations\\Schema'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['Nelmio\\ApiDocBundle\\Annotation\\Model'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Nelmio\\ApiDocBundle\\Annotation\\Model')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'methods' => [
                    [
                        'POST',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_API_WRITER',
                ],
            ],
            'stdClass' => [
                'required' => [
                    2 => true,
                ],
                'content' => [
                    2 => [
                        $o[3],
                        $o[9],
                    ],
                ],
                '_context' => [
                    2 => $o[15],
                    $o[7],
                    $o[5],
                    9 => $o[13],
                    $o[11],
                    17 => $o[18],
                    20 => $o[21],
                ],
                'mediaType' => [
                    3 => 'multipart/form-data',
                    9 => 'application/json',
                ],
                'schema' => [
                    3 => $o[4],
                    9 => $o[10],
                ],
                'ref' => [
                    4 => '#/components/schemas/TeamCategory',
                    10 => '#/components/schemas/TeamCategory',
                ],
                'logger' => [
                    5 => $o[6],
                    7 => $o[8],
                    11 => $o[12],
                    13 => $o[14],
                    15 => $o[16],
                    18 => $o[19],
                    21 => $o[22],
                ],
                'filename' => [
                    5 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    7 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    11 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    13 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    15 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    18 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    21 => '/opt/domjudge/domserver/lib/vendor/nelmio/api-doc-bundle/Annotation/Model.php',
                ],
                'line' => [
                    5 => 977,
                    7 => 977,
                    11 => 977,
                    13 => 977,
                    15 => 977,
                    18 => 977,
                    21 => 66,
                ],
                'method' => [
                    5 => 'Annotation',
                    7 => 'Annotation',
                    11 => 'Annotation',
                    13 => 'Annotation',
                    15 => 'Annotation',
                    18 => 'Annotation',
                    21 => '__construct',
                ],
                'class' => [
                    5 => 'DocParser',
                    7 => 'DocParser',
                    11 => 'DocParser',
                    13 => 'DocParser',
                    15 => 'DocParser',
                    18 => 'DocParser',
                    21 => 'Model',
                ],
                'namespace' => [
                    5 => 'Doctrine\\Common\\Annotations',
                    7 => 'Doctrine\\Common\\Annotations',
                    11 => 'Doctrine\\Common\\Annotations',
                    13 => 'Doctrine\\Common\\Annotations',
                    15 => 'Doctrine\\Common\\Annotations',
                    18 => 'Doctrine\\Common\\Annotations',
                    21 => 'Nelmio\\ApiDocBundle\\Annotation',
                ],
                'annotations' => [
                    5 => [
                        $o[4],
                    ],
                    7 => [
                        $o[3],
                    ],
                    11 => [
                        $o[10],
                    ],
                    13 => [
                        $o[9],
                    ],
                    15 => [
                        $o[2],
                    ],
                    18 => [
                        $o[17],
                    ],
                    21 => [
                        $o[20],
                    ],
                ],
                'response' => [
                    17 => '201',
                ],
                'description' => [
                    17 => 'Returns the added group',
                ],
                '_unmerged' => [
                    17 => [
                        $o[20],
                    ],
                ],
                'type' => [
                    20 => 'App\\Entity\\TeamCategory',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[17],
        ],
        []
    );
},
43 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Route')),
            clone ($p['OpenApi\\Annotations\\Tag'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Tag')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/judgehosts',
                ],
            ],
            'stdClass' => [
                'name' => [
                    1 => 'Judgehosts',
                ],
                '_context' => [
                    1 => $o[2],
                    4 => $o[5],
                ],
                'logger' => [
                    2 => $o[3],
                    5 => $o[6],
                ],
                'filename' => [
                    2 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    5 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    2 => 977,
                    5 => 977,
                ],
                'method' => [
                    2 => 'Annotation',
                    5 => 'Annotation',
                ],
                'class' => [
                    2 => 'DocParser',
                    5 => 'DocParser',
                ],
                'namespace' => [
                    2 => 'Doctrine\\Common\\Annotations',
                    5 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    2 => [
                        $o[1],
                    ],
                    5 => [
                        $o[4],
                    ],
                ],
                'ref' => [
                    4 => '#/components/responses/InvalidResponse',
                ],
                'response' => [
                    4 => '400',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[4],
        ],
        []
    );
},
44 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Get'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Get')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
            clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\JsonContent'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\JsonContent')),
            clone ($p['OpenApi\\Annotations\\Items'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Items')),
            clone ($p['Nelmio\\ApiDocBundle\\Annotation\\Model'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Nelmio\\ApiDocBundle\\Annotation\\Model')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Parameter')),
            clone ($p['OpenApi\\Annotations\\Schema'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Schema')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_JURY',
                ],
            ],
            'stdClass' => [
                'response' => [
                    2 => '200',
                ],
                'description' => [
                    2 => 'The judgehosts',
                    14 => 'Only show the judgehost with the given hostname',
                ],
                '_context' => [
                    2 => $o[3],
                    5 => $o[12],
                    $o[10],
                    $o[8],
                    14 => $o[18],
                    $o[16],
                ],
                '_unmerged' => [
                    2 => [
                        $o[5],
                    ],
                ],
                'logger' => [
                    3 => $o[4],
                    8 => $o[9],
                    10 => $o[11],
                    12 => $o[13],
                    16 => $o[17],
                    18 => $o[19],
                ],
                'filename' => [
                    3 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    8 => '/opt/domjudge/domserver/lib/vendor/nelmio/api-doc-bundle/Annotation/Model.php',
                    10 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    12 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    16 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    18 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    3 => 977,
                    8 => 66,
                    10 => 977,
                    12 => 977,
                    16 => 977,
                    18 => 977,
                ],
                'method' => [
                    3 => 'Annotation',
                    8 => '__construct',
                    10 => 'Annotation',
                    12 => 'Annotation',
                    16 => 'Annotation',
                    18 => 'Annotation',
                ],
                'class' => [
                    3 => 'DocParser',
                    8 => 'Model',
                    10 => 'DocParser',
                    12 => 'DocParser',
                    16 => 'DocParser',
                    18 => 'DocParser',
                ],
                'namespace' => [
                    3 => 'Doctrine\\Common\\Annotations',
                    8 => 'Nelmio\\ApiDocBundle\\Annotation',
                    10 => 'Doctrine\\Common\\Annotations',
                    12 => 'Doctrine\\Common\\Annotations',
                    16 => 'Doctrine\\Common\\Annotations',
                    18 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    3 => [
                        $o[2],
                    ],
                    8 => [
                        $o[7],
                    ],
                    10 => [
                        $o[6],
                    ],
                    12 => [
                        $o[5],
                    ],
                    16 => [
                        $o[15],
                    ],
                    18 => [
                        $o[14],
                    ],
                ],
                'type' => [
                    5 => 'array',
                    7 => 'App\\Entity\\Judgehost',
                    15 => 'string',
                ],
                'items' => [
                    5 => $o[6],
                ],
                'ref' => [
                    6 => $o[7],
                ],
                'name' => [
                    14 => 'hostname',
                ],
                'in' => [
                    14 => 'query',
                ],
                'schema' => [
                    14 => $o[15],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[14],
        ],
        []
    );
},
45 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Post'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Post')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
            clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\JsonContent'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\JsonContent')),
            clone ($p['OpenApi\\Annotations\\Items'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Items')),
            clone ($p['OpenApi\\Annotations\\Property'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Property')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '',
                ],
                'methods' => [
                    [
                        'POST',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_JUDGEHOST',
                ],
            ],
            'stdClass' => [
                'response' => [
                    2 => '200',
                ],
                'description' => [
                    2 => 'The returned unfinished judgings',
                ],
                '_context' => [
                    2 => $o[3],
                    5 => $o[15],
                    $o[13],
                    $o[8],
                    10 => $o[11],
                ],
                '_unmerged' => [
                    2 => [
                        $o[5],
                    ],
                ],
                'logger' => [
                    3 => $o[4],
                    8 => $o[9],
                    11 => $o[12],
                    13 => $o[14],
                    15 => $o[16],
                ],
                'filename' => [
                    3 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    8 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    11 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    13 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    15 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    3 => 977,
                    8 => 977,
                    11 => 977,
                    13 => 977,
                    15 => 977,
                ],
                'method' => [
                    3 => 'Annotation',
                    8 => 'Annotation',
                    11 => 'Annotation',
                    13 => 'Annotation',
                    15 => 'Annotation',
                ],
                'class' => [
                    3 => 'DocParser',
                    8 => 'DocParser',
                    11 => 'DocParser',
                    13 => 'DocParser',
                    15 => 'DocParser',
                ],
                'namespace' => [
                    3 => 'Doctrine\\Common\\Annotations',
                    8 => 'Doctrine\\Common\\Annotations',
                    11 => 'Doctrine\\Common\\Annotations',
                    13 => 'Doctrine\\Common\\Annotations',
                    15 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    3 => [
                        $o[2],
                    ],
                    8 => [
                        $o[7],
                    ],
                    11 => [
                        $o[10],
                    ],
                    13 => [
                        $o[6],
                    ],
                    15 => [
                        $o[5],
                    ],
                ],
                'type' => [
                    5 => 'array',
                    'object',
                    'integer',
                    10 => 'integer',
                ],
                'items' => [
                    5 => $o[6],
                ],
                'properties' => [
                    6 => [
                        $o[7],
                        $o[10],
                    ],
                ],
                'property' => [
                    7 => 'jobid',
                    10 => 'submitid',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
46 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Put'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Put')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
            clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\JsonContent'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\JsonContent')),
            clone ($p['OpenApi\\Annotations\\Items'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Items')),
            clone ($p['Nelmio\\ApiDocBundle\\Annotation\\Model'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Nelmio\\ApiDocBundle\\Annotation\\Model')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Parameter')),
            clone ($p['OpenApi\\Annotations\\Schema'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Schema')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\RequestBody'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\RequestBody')),
            clone ($p['OpenApi\\Annotations\\MediaType'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\MediaType')),
            clone $p['OpenApi\\Annotations\\Schema'],
            clone ($p['OpenApi\\Annotations\\Property'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Property')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{hostname}',
                ],
                'methods' => [
                    [
                        'PUT',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_JUDGEHOST',
                ],
            ],
            'stdClass' => [
                'response' => [
                    2 => '200',
                ],
                'description' => [
                    2 => 'The modified judgehost',
                    14 => 'The hostname of the judgehost to update',
                    23 => 'The new enabled state of the judgehost',
                ],
                '_context' => [
                    2 => $o[3],
                    5 => $o[12],
                    $o[10],
                    $o[8],
                    14 => $o[18],
                    $o[16],
                    20 => $o[30],
                    $o[28],
                    $o[26],
                    $o[24],
                ],
                '_unmerged' => [
                    2 => [
                        $o[5],
                    ],
                ],
                'logger' => [
                    3 => $o[4],
                    8 => $o[9],
                    10 => $o[11],
                    12 => $o[13],
                    16 => $o[17],
                    18 => $o[19],
                    24 => $o[25],
                    26 => $o[27],
                    28 => $o[29],
                    30 => $o[31],
                ],
                'filename' => [
                    3 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    8 => '/opt/domjudge/domserver/lib/vendor/nelmio/api-doc-bundle/Annotation/Model.php',
                    10 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    12 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    16 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    18 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    24 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    26 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    28 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    30 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    3 => 977,
                    8 => 66,
                    10 => 977,
                    12 => 977,
                    16 => 977,
                    18 => 977,
                    24 => 977,
                    26 => 977,
                    28 => 977,
                    30 => 977,
                ],
                'method' => [
                    3 => 'Annotation',
                    8 => '__construct',
                    10 => 'Annotation',
                    12 => 'Annotation',
                    16 => 'Annotation',
                    18 => 'Annotation',
                    24 => 'Annotation',
                    26 => 'Annotation',
                    28 => 'Annotation',
                    30 => 'Annotation',
                ],
                'class' => [
                    3 => 'DocParser',
                    8 => 'Model',
                    10 => 'DocParser',
                    12 => 'DocParser',
                    16 => 'DocParser',
                    18 => 'DocParser',
                    24 => 'DocParser',
                    26 => 'DocParser',
                    28 => 'DocParser',
                    30 => 'DocParser',
                ],
                'namespace' => [
                    3 => 'Doctrine\\Common\\Annotations',
                    8 => 'Nelmio\\ApiDocBundle\\Annotation',
                    10 => 'Doctrine\\Common\\Annotations',
                    12 => 'Doctrine\\Common\\Annotations',
                    16 => 'Doctrine\\Common\\Annotations',
                    18 => 'Doctrine\\Common\\Annotations',
                    24 => 'Doctrine\\Common\\Annotations',
                    26 => 'Doctrine\\Common\\Annotations',
                    28 => 'Doctrine\\Common\\Annotations',
                    30 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    3 => [
                        $o[2],
                    ],
                    8 => [
                        $o[7],
                    ],
                    10 => [
                        $o[6],
                    ],
                    12 => [
                        $o[5],
                    ],
                    16 => [
                        $o[15],
                    ],
                    18 => [
                        $o[14],
                    ],
                    24 => [
                        $o[23],
                    ],
                    26 => [
                        $o[22],
                    ],
                    28 => [
                        $o[21],
                    ],
                    30 => [
                        $o[20],
                    ],
                ],
                'type' => [
                    5 => 'array',
                    7 => 'App\\Entity\\Judgehost',
                    15 => 'string',
                    23 => 'boolean',
                ],
                'items' => [
                    5 => $o[6],
                ],
                'ref' => [
                    6 => $o[7],
                ],
                'name' => [
                    14 => 'hostname',
                ],
                'in' => [
                    14 => 'path',
                ],
                'schema' => [
                    14 => $o[15],
                    21 => $o[22],
                ],
                'required' => [
                    20 => true,
                ],
                'content' => [
                    20 => [
                        $o[21],
                    ],
                ],
                'mediaType' => [
                    21 => 'application/x-www-form-urlencoded',
                ],
                'properties' => [
                    22 => [
                        $o[23],
                    ],
                ],
                'property' => [
                    23 => 'enabled',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[14],
            $o[20],
        ],
        []
    );
},
47 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Put'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Put')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
            clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Parameter')),
            clone ($p['OpenApi\\Annotations\\Schema'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Schema')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Parameter'],
            clone $p['OpenApi\\Annotations\\Schema'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\RequestBody'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\RequestBody')),
            clone ($p['OpenApi\\Annotations\\MediaType'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\MediaType')),
            clone $p['OpenApi\\Annotations\\Schema'],
            clone ($p['OpenApi\\Annotations\\Property'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Property')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/update-judging/{hostname}/{judgetaskid}',
                ],
                'methods' => [
                    [
                        'PUT',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_JUDGEHOST',
                ],
            ],
            'stdClass' => [
                'response' => [
                    2 => '200',
                ],
                'description' => [
                    2 => 'When the judging has been updated',
                    5 => 'The hostname of the judgehost that wants to update the judging',
                    11 => 'The ID of the judgetask to update',
                    20 => 'Whether compilation was successful',
                    23 => 'The compile output',
                    26 => 'The determined entrypoint',
                    29 => 'The (base64-encoded) metadata of the compilation.',
                ],
                '_context' => [
                    2 => $o[3],
                    5 => $o[9],
                    $o[7],
                    11 => $o[15],
                    $o[13],
                    17 => $o[36],
                    $o[34],
                    $o[32],
                    $o[21],
                    23 => $o[24],
                    26 => $o[27],
                    29 => $o[30],
                ],
                'logger' => [
                    3 => $o[4],
                    7 => $o[8],
                    9 => $o[10],
                    13 => $o[14],
                    15 => $o[16],
                    21 => $o[22],
                    24 => $o[25],
                    27 => $o[28],
                    30 => $o[31],
                    32 => $o[33],
                    34 => $o[35],
                    36 => $o[37],
                ],
                'filename' => [
                    3 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    7 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    9 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    13 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    15 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    21 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    24 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    27 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    30 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    32 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    34 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    36 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    3 => 977,
                    7 => 977,
                    9 => 977,
                    13 => 977,
                    15 => 977,
                    21 => 977,
                    24 => 977,
                    27 => 977,
                    30 => 977,
                    32 => 977,
                    34 => 977,
                    36 => 977,
                ],
                'method' => [
                    3 => 'Annotation',
                    7 => 'Annotation',
                    9 => 'Annotation',
                    13 => 'Annotation',
                    15 => 'Annotation',
                    21 => 'Annotation',
                    24 => 'Annotation',
                    27 => 'Annotation',
                    30 => 'Annotation',
                    32 => 'Annotation',
                    34 => 'Annotation',
                    36 => 'Annotation',
                ],
                'class' => [
                    3 => 'DocParser',
                    7 => 'DocParser',
                    9 => 'DocParser',
                    13 => 'DocParser',
                    15 => 'DocParser',
                    21 => 'DocParser',
                    24 => 'DocParser',
                    27 => 'DocParser',
                    30 => 'DocParser',
                    32 => 'DocParser',
                    34 => 'DocParser',
                    36 => 'DocParser',
                ],
                'namespace' => [
                    3 => 'Doctrine\\Common\\Annotations',
                    7 => 'Doctrine\\Common\\Annotations',
                    9 => 'Doctrine\\Common\\Annotations',
                    13 => 'Doctrine\\Common\\Annotations',
                    15 => 'Doctrine\\Common\\Annotations',
                    21 => 'Doctrine\\Common\\Annotations',
                    24 => 'Doctrine\\Common\\Annotations',
                    27 => 'Doctrine\\Common\\Annotations',
                    30 => 'Doctrine\\Common\\Annotations',
                    32 => 'Doctrine\\Common\\Annotations',
                    34 => 'Doctrine\\Common\\Annotations',
                    36 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    3 => [
                        $o[2],
                    ],
                    7 => [
                        $o[6],
                    ],
                    9 => [
                        $o[5],
                    ],
                    13 => [
                        $o[12],
                    ],
                    15 => [
                        $o[11],
                    ],
                    21 => [
                        $o[20],
                    ],
                    24 => [
                        $o[23],
                    ],
                    27 => [
                        $o[26],
                    ],
                    30 => [
                        $o[29],
                    ],
                    32 => [
                        $o[19],
                    ],
                    34 => [
                        $o[18],
                    ],
                    36 => [
                        $o[17],
                    ],
                ],
                'name' => [
                    5 => 'hostname',
                    11 => 'judgetaskid',
                ],
                'in' => [
                    5 => 'path',
                    11 => 'path',
                ],
                'schema' => [
                    5 => $o[6],
                    11 => $o[12],
                    18 => $o[19],
                ],
                'type' => [
                    6 => 'string',
                    12 => 'integer',
                    20 => 'boolean',
                    23 => 'string',
                    26 => 'string',
                    29 => 'string',
                ],
                'required' => [
                    17 => true,
                ],
                'content' => [
                    17 => [
                        $o[18],
                    ],
                ],
                'mediaType' => [
                    18 => 'application/x-www-form-urlencoded',
                ],
                'properties' => [
                    19 => [
                        $o[20],
                        $o[23],
                        $o[26],
                        $o[29],
                    ],
                ],
                'property' => [
                    20 => 'compile_success',
                    23 => 'output_compile',
                    26 => 'entry_point',
                    29 => 'compile_metadata',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[5],
            $o[11],
            $o[17],
        ],
        []
    );
},
48 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Post'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Post')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
            clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Parameter')),
            clone ($p['OpenApi\\Annotations\\Schema'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Schema')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Parameter'],
            clone $p['OpenApi\\Annotations\\Schema'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/add-debug-info/{hostname}/{judgeTaskId}',
                ],
                'methods' => [
                    [
                        'POST',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_JUDGEHOST',
                ],
            ],
            'stdClass' => [
                'response' => [
                    2 => '200',
                ],
                'description' => [
                    2 => 'When the debug info has been added',
                    5 => 'The hostname of the judgehost that wants to add the debug info',
                    11 => 'The ID of the judgetask to add',
                ],
                '_context' => [
                    2 => $o[3],
                    5 => $o[9],
                    $o[7],
                    11 => $o[15],
                    $o[13],
                ],
                'logger' => [
                    3 => $o[4],
                    7 => $o[8],
                    9 => $o[10],
                    13 => $o[14],
                    15 => $o[16],
                ],
                'filename' => [
                    3 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    7 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    9 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    13 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    15 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    3 => 977,
                    7 => 977,
                    9 => 977,
                    13 => 977,
                    15 => 977,
                ],
                'method' => [
                    3 => 'Annotation',
                    7 => 'Annotation',
                    9 => 'Annotation',
                    13 => 'Annotation',
                    15 => 'Annotation',
                ],
                'class' => [
                    3 => 'DocParser',
                    7 => 'DocParser',
                    9 => 'DocParser',
                    13 => 'DocParser',
                    15 => 'DocParser',
                ],
                'namespace' => [
                    3 => 'Doctrine\\Common\\Annotations',
                    7 => 'Doctrine\\Common\\Annotations',
                    9 => 'Doctrine\\Common\\Annotations',
                    13 => 'Doctrine\\Common\\Annotations',
                    15 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    3 => [
                        $o[2],
                    ],
                    7 => [
                        $o[6],
                    ],
                    9 => [
                        $o[5],
                    ],
                    13 => [
                        $o[12],
                    ],
                    15 => [
                        $o[11],
                    ],
                ],
                'name' => [
                    5 => 'hostname',
                    11 => 'judgeTaskId',
                ],
                'in' => [
                    5 => 'path',
                    11 => 'path',
                ],
                'schema' => [
                    5 => $o[6],
                    11 => $o[12],
                ],
                'type' => [
                    6 => 'string',
                    12 => 'string',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[5],
            $o[11],
        ],
        []
    );
},
49 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Post'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Post')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
            clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Parameter')),
            clone ($p['OpenApi\\Annotations\\Schema'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Schema')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Parameter'],
            clone $p['OpenApi\\Annotations\\Schema'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\RequestBody'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\RequestBody')),
            clone ($p['OpenApi\\Annotations\\MediaType'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\MediaType')),
            clone $p['OpenApi\\Annotations\\Schema'],
            clone ($p['OpenApi\\Annotations\\Property'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Property')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/add-judging-run/{hostname}/{judgeTaskId}',
                ],
                'methods' => [
                    [
                        'POST',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_JUDGEHOST',
                ],
            ],
            'stdClass' => [
                'response' => [
                    2 => '200',
                ],
                'description' => [
                    2 => 'When the judging run has been added',
                    5 => 'The hostname of the judgehost that wants to add the judging run',
                    11 => 'The ID of the judgetask to add',
                    20 => 'The result of the run',
                    23 => 'The runtime of the run',
                    26 => 'The (base64-encoded) output of the run',
                    29 => 'The (base64-encoded) output diff of the run',
                    32 => 'The (base64-encoded) error output of the run',
                    35 => 'The (base64-encoded) system output of the run',
                    38 => 'The (base64-encoded) metadata',
                ],
                '_context' => [
                    2 => $o[3],
                    5 => $o[9],
                    $o[7],
                    11 => $o[15],
                    $o[13],
                    17 => $o[45],
                    $o[43],
                    $o[41],
                    $o[21],
                    23 => $o[24],
                    26 => $o[27],
                    29 => $o[30],
                    32 => $o[33],
                    35 => $o[36],
                    38 => $o[39],
                ],
                'logger' => [
                    3 => $o[4],
                    7 => $o[8],
                    9 => $o[10],
                    13 => $o[14],
                    15 => $o[16],
                    21 => $o[22],
                    24 => $o[25],
                    27 => $o[28],
                    30 => $o[31],
                    33 => $o[34],
                    36 => $o[37],
                    39 => $o[40],
                    41 => $o[42],
                    43 => $o[44],
                    45 => $o[46],
                ],
                'filename' => [
                    3 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    7 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    9 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    13 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    15 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    21 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    24 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    27 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    30 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    33 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    36 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    39 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    41 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    43 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    45 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    3 => 977,
                    7 => 977,
                    9 => 977,
                    13 => 977,
                    15 => 977,
                    21 => 977,
                    24 => 977,
                    27 => 977,
                    30 => 977,
                    33 => 977,
                    36 => 977,
                    39 => 977,
                    41 => 977,
                    43 => 977,
                    45 => 977,
                ],
                'method' => [
                    3 => 'Annotation',
                    7 => 'Annotation',
                    9 => 'Annotation',
                    13 => 'Annotation',
                    15 => 'Annotation',
                    21 => 'Annotation',
                    24 => 'Annotation',
                    27 => 'Annotation',
                    30 => 'Annotation',
                    33 => 'Annotation',
                    36 => 'Annotation',
                    39 => 'Annotation',
                    41 => 'Annotation',
                    43 => 'Annotation',
                    45 => 'Annotation',
                ],
                'class' => [
                    3 => 'DocParser',
                    7 => 'DocParser',
                    9 => 'DocParser',
                    13 => 'DocParser',
                    15 => 'DocParser',
                    21 => 'DocParser',
                    24 => 'DocParser',
                    27 => 'DocParser',
                    30 => 'DocParser',
                    33 => 'DocParser',
                    36 => 'DocParser',
                    39 => 'DocParser',
                    41 => 'DocParser',
                    43 => 'DocParser',
                    45 => 'DocParser',
                ],
                'namespace' => [
                    3 => 'Doctrine\\Common\\Annotations',
                    7 => 'Doctrine\\Common\\Annotations',
                    9 => 'Doctrine\\Common\\Annotations',
                    13 => 'Doctrine\\Common\\Annotations',
                    15 => 'Doctrine\\Common\\Annotations',
                    21 => 'Doctrine\\Common\\Annotations',
                    24 => 'Doctrine\\Common\\Annotations',
                    27 => 'Doctrine\\Common\\Annotations',
                    30 => 'Doctrine\\Common\\Annotations',
                    33 => 'Doctrine\\Common\\Annotations',
                    36 => 'Doctrine\\Common\\Annotations',
                    39 => 'Doctrine\\Common\\Annotations',
                    41 => 'Doctrine\\Common\\Annotations',
                    43 => 'Doctrine\\Common\\Annotations',
                    45 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    3 => [
                        $o[2],
                    ],
                    7 => [
                        $o[6],
                    ],
                    9 => [
                        $o[5],
                    ],
                    13 => [
                        $o[12],
                    ],
                    15 => [
                        $o[11],
                    ],
                    21 => [
                        $o[20],
                    ],
                    24 => [
                        $o[23],
                    ],
                    27 => [
                        $o[26],
                    ],
                    30 => [
                        $o[29],
                    ],
                    33 => [
                        $o[32],
                    ],
                    36 => [
                        $o[35],
                    ],
                    39 => [
                        $o[38],
                    ],
                    41 => [
                        $o[19],
                    ],
                    43 => [
                        $o[18],
                    ],
                    45 => [
                        $o[17],
                    ],
                ],
                'name' => [
                    5 => 'hostname',
                    11 => 'judgeTaskId',
                ],
                'in' => [
                    5 => 'path',
                    11 => 'path',
                ],
                'schema' => [
                    5 => $o[6],
                    11 => $o[12],
                    18 => $o[19],
                ],
                'type' => [
                    6 => 'string',
                    12 => 'string',
                    20 => 'string',
                    23 => 'number',
                    26 => 'string',
                    29 => 'string',
                    32 => 'string',
                    35 => 'string',
                    38 => 'string',
                ],
                'required' => [
                    17 => true,
                    19 => [
                        'runresult',
                        'runtime',
                        'output_run',
                        'output_diff',
                        'output_error',
                        'output_system',
                    ],
                ],
                'content' => [
                    17 => [
                        $o[18],
                    ],
                ],
                'mediaType' => [
                    18 => 'application/x-www-form-urlencoded',
                ],
                'properties' => [
                    19 => [
                        $o[20],
                        $o[23],
                        $o[26],
                        $o[29],
                        $o[32],
                        $o[35],
                        $o[38],
                    ],
                ],
                'property' => [
                    20 => 'runresult',
                    23 => 'runtime',
                    26 => 'output_run',
                    29 => 'output_diff',
                    32 => 'output_error',
                    35 => 'output_system',
                    38 => 'metadata',
                ],
                'format' => [
                    23 => 'float',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[5],
            $o[11],
            $o[17],
        ],
        []
    );
},
50 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Post'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Post')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
            clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\JsonContent'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\JsonContent')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\RequestBody'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\RequestBody')),
            clone ($p['OpenApi\\Annotations\\MediaType'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\MediaType')),
            clone ($p['OpenApi\\Annotations\\Schema'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Schema')),
            clone ($p['OpenApi\\Annotations\\Property'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Property')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/internal-error',
                ],
                'methods' => [
                    [
                        'POST',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_JUDGEHOST',
                ],
            ],
            'stdClass' => [
                'response' => [
                    2 => '200',
                ],
                'description' => [
                    2 => 'The ID of the created internal error',
                    11 => 'The description of the internal error',
                    14 => 'The log of the judgehost',
                    17 => 'The object to disable in JSON format',
                    20 => 'The ID of the judgeTask that was being worked on',
                ],
                '_context' => [
                    2 => $o[3],
                    5 => $o[6],
                    8 => $o[27],
                    $o[25],
                    $o[23],
                    $o[12],
                    14 => $o[15],
                    17 => $o[18],
                    20 => $o[21],
                ],
                '_unmerged' => [
                    2 => [
                        $o[5],
                    ],
                ],
                'logger' => [
                    3 => $o[4],
                    6 => $o[7],
                    12 => $o[13],
                    15 => $o[16],
                    18 => $o[19],
                    21 => $o[22],
                    23 => $o[24],
                    25 => $o[26],
                    27 => $o[28],
                ],
                'filename' => [
                    3 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    6 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    12 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    15 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    18 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    21 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    23 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    25 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    27 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    3 => 977,
                    6 => 977,
                    12 => 977,
                    15 => 977,
                    18 => 977,
                    21 => 977,
                    23 => 977,
                    25 => 977,
                    27 => 977,
                ],
                'method' => [
                    3 => 'Annotation',
                    6 => 'Annotation',
                    12 => 'Annotation',
                    15 => 'Annotation',
                    18 => 'Annotation',
                    21 => 'Annotation',
                    23 => 'Annotation',
                    25 => 'Annotation',
                    27 => 'Annotation',
                ],
                'class' => [
                    3 => 'DocParser',
                    6 => 'DocParser',
                    12 => 'DocParser',
                    15 => 'DocParser',
                    18 => 'DocParser',
                    21 => 'DocParser',
                    23 => 'DocParser',
                    25 => 'DocParser',
                    27 => 'DocParser',
                ],
                'namespace' => [
                    3 => 'Doctrine\\Common\\Annotations',
                    6 => 'Doctrine\\Common\\Annotations',
                    12 => 'Doctrine\\Common\\Annotations',
                    15 => 'Doctrine\\Common\\Annotations',
                    18 => 'Doctrine\\Common\\Annotations',
                    21 => 'Doctrine\\Common\\Annotations',
                    23 => 'Doctrine\\Common\\Annotations',
                    25 => 'Doctrine\\Common\\Annotations',
                    27 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    3 => [
                        $o[2],
                    ],
                    6 => [
                        $o[5],
                    ],
                    12 => [
                        $o[11],
                    ],
                    15 => [
                        $o[14],
                    ],
                    18 => [
                        $o[17],
                    ],
                    21 => [
                        $o[20],
                    ],
                    23 => [
                        $o[10],
                    ],
                    25 => [
                        $o[9],
                    ],
                    27 => [
                        $o[8],
                    ],
                ],
                'type' => [
                    5 => 'integer',
                    11 => 'string',
                    14 => 'string',
                    17 => 'string',
                    20 => 'integer',
                ],
                'required' => [
                    8 => true,
                    10 => [
                        'description',
                        'judgehostlog',
                        'disabled',
                    ],
                ],
                'content' => [
                    8 => [
                        $o[9],
                    ],
                ],
                'mediaType' => [
                    9 => 'application/x-www-form-urlencoded',
                ],
                'schema' => [
                    9 => $o[10],
                ],
                'properties' => [
                    10 => [
                        $o[11],
                        $o[14],
                        $o[17],
                        $o[20],
                    ],
                ],
                'property' => [
                    11 => 'description',
                    14 => 'judgehostlog',
                    17 => 'disabled',
                    20 => 'judgetaskid',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[8],
        ],
        []
    );
},
51 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Get'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Get')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Security'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Security')),
            clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\Schema'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Schema')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Parameter')),
            clone $p['OpenApi\\Annotations\\Schema'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Parameter'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/get_files/{type}/{id}',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Security' => [
                'expression' => [
                    1 => 'is_granted(\'ROLE_JURY\') or is_granted(\'ROLE_JUDGEHOST\')',
                ],
            ],
            'stdClass' => [
                'response' => [
                    2 => '200',
                ],
                'description' => [
                    2 => 'The files for the submission, testcase or script.',
                    8 => 'The type to',
                ],
                '_context' => [
                    2 => $o[3],
                    5 => $o[6],
                    8 => $o[12],
                    $o[10],
                    14 => $o[15],
                ],
                '_unmerged' => [
                    2 => [
                        $o[5],
                    ],
                ],
                'logger' => [
                    3 => $o[4],
                    6 => $o[7],
                    10 => $o[11],
                    12 => $o[13],
                    15 => $o[16],
                ],
                'filename' => [
                    3 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    6 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    10 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    12 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    15 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    3 => 977,
                    6 => 977,
                    10 => 977,
                    12 => 977,
                    15 => 977,
                ],
                'method' => [
                    3 => 'Annotation',
                    6 => 'Annotation',
                    10 => 'Annotation',
                    12 => 'Annotation',
                    15 => 'Annotation',
                ],
                'class' => [
                    3 => 'DocParser',
                    6 => 'DocParser',
                    10 => 'DocParser',
                    12 => 'DocParser',
                    15 => 'DocParser',
                ],
                'namespace' => [
                    3 => 'Doctrine\\Common\\Annotations',
                    6 => 'Doctrine\\Common\\Annotations',
                    10 => 'Doctrine\\Common\\Annotations',
                    12 => 'Doctrine\\Common\\Annotations',
                    15 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    3 => [
                        $o[2],
                    ],
                    6 => [
                        $o[5],
                    ],
                    10 => [
                        $o[9],
                    ],
                    12 => [
                        $o[8],
                    ],
                    15 => [
                        $o[14],
                    ],
                ],
                'ref' => [
                    5 => '#/definitions/SourceCodeList',
                    14 => '#/components/parameters/id',
                ],
                'name' => [
                    8 => 'type',
                ],
                'in' => [
                    8 => 'path',
                ],
                'schema' => [
                    8 => $o[9],
                ],
                'type' => [
                    9 => 'string',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[8],
            $o[14],
        ],
        []
    );
},
52 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Post'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Post')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Security'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Security')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/fetch-work',
                ],
                'methods' => [
                    [
                        'POST',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Security' => [
                'expression' => [
                    1 => 'is_granted(\'ROLE_JUDGEHOST\')',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
53 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Route')),
            clone ($p['OpenApi\\Annotations\\Tag'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Tag')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Parameter')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Response'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Response'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/contests/{cid}/judgements',
                ],
            ],
            'stdClass' => [
                'name' => [
                    1 => 'Judgements',
                ],
                '_context' => [
                    1 => $o[2],
                    4 => $o[5],
                    7 => $o[8],
                    10 => $o[11],
                    13 => $o[14],
                ],
                'logger' => [
                    2 => $o[3],
                    5 => $o[6],
                    8 => $o[9],
                    11 => $o[12],
                    14 => $o[15],
                ],
                'filename' => [
                    2 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    5 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    8 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    11 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    14 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    2 => 977,
                    5 => 977,
                    8 => 977,
                    11 => 977,
                    14 => 977,
                ],
                'method' => [
                    2 => 'Annotation',
                    5 => 'Annotation',
                    8 => 'Annotation',
                    11 => 'Annotation',
                    14 => 'Annotation',
                ],
                'class' => [
                    2 => 'DocParser',
                    5 => 'DocParser',
                    8 => 'DocParser',
                    11 => 'DocParser',
                    14 => 'DocParser',
                ],
                'namespace' => [
                    2 => 'Doctrine\\Common\\Annotations',
                    5 => 'Doctrine\\Common\\Annotations',
                    8 => 'Doctrine\\Common\\Annotations',
                    11 => 'Doctrine\\Common\\Annotations',
                    14 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    2 => [
                        $o[1],
                    ],
                    5 => [
                        $o[4],
                    ],
                    8 => [
                        $o[7],
                    ],
                    11 => [
                        $o[10],
                    ],
                    14 => [
                        $o[13],
                    ],
                ],
                'ref' => [
                    4 => '#/components/parameters/cid',
                    7 => '#/components/responses/NotFound',
                    10 => '#/components/responses/Unauthorized',
                    13 => '#/components/responses/InvalidResponse',
                ],
                'response' => [
                    7 => '404',
                    10 => '401',
                    13 => '400',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[4],
            $o[7],
            $o[10],
            $o[13],
        ],
        []
    );
},
54 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Security'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Security')),
            clone ($p['FOS\\RestBundle\\Controller\\Annotations\\Get'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Get')),
            clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\JsonContent'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\JsonContent')),
            clone ($p['OpenApi\\Annotations\\Items'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Items')),
            clone ($p['OpenApi\\Annotations\\Schema'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Schema')),
            clone ($p['Nelmio\\ApiDocBundle\\Annotation\\Model'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Nelmio\\ApiDocBundle\\Annotation\\Model')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Schema'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Parameter')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Parameter'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Parameter'],
            clone $p['OpenApi\\Annotations\\Schema'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Parameter'],
            clone $p['OpenApi\\Annotations\\Schema'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Security' => [
                'expression' => [
                    'is_granted(\'ROLE_JURY\') or is_granted(\'ROLE_TEAM\') or is_granted(\'ROLE_JUDGEHOST\') or is_granted(\'ROLE_API_READER\')',
                ],
            ],
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    1 => '',
                ],
                'methods' => [
                    1 => [
                        'GET',
                    ],
                ],
            ],
            'stdClass' => [
                'response' => [
                    2 => '200',
                ],
                'description' => [
                    2 => 'Returns all the judgements for this contest',
                    26 => 'Only show judgements with the given result',
                    32 => 'Only show judgements for the given submission',
                ],
                '_context' => [
                    2 => $o[3],
                    5 => $o[18],
                    $o[16],
                    $o[11],
                    $o[9],
                    13 => $o[14],
                    20 => $o[21],
                    23 => $o[24],
                    26 => $o[30],
                    $o[28],
                    32 => $o[36],
                    $o[34],
                ],
                '_unmerged' => [
                    2 => [
                        $o[5],
                    ],
                ],
                'logger' => [
                    3 => $o[4],
                    9 => $o[10],
                    11 => $o[12],
                    14 => $o[15],
                    16 => $o[17],
                    18 => $o[19],
                    21 => $o[22],
                    24 => $o[25],
                    28 => $o[29],
                    30 => $o[31],
                    34 => $o[35],
                    36 => $o[37],
                ],
                'filename' => [
                    3 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    9 => '/opt/domjudge/domserver/lib/vendor/nelmio/api-doc-bundle/Annotation/Model.php',
                    11 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    14 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    16 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    18 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    21 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    24 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    28 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    30 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    34 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    36 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    3 => 977,
                    9 => 66,
                    11 => 977,
                    14 => 977,
                    16 => 977,
                    18 => 977,
                    21 => 977,
                    24 => 977,
                    28 => 977,
                    30 => 977,
                    34 => 977,
                    36 => 977,
                ],
                'method' => [
                    3 => 'Annotation',
                    9 => '__construct',
                    11 => 'Annotation',
                    14 => 'Annotation',
                    16 => 'Annotation',
                    18 => 'Annotation',
                    21 => 'Annotation',
                    24 => 'Annotation',
                    28 => 'Annotation',
                    30 => 'Annotation',
                    34 => 'Annotation',
                    36 => 'Annotation',
                ],
                'class' => [
                    3 => 'DocParser',
                    9 => 'Model',
                    11 => 'DocParser',
                    14 => 'DocParser',
                    16 => 'DocParser',
                    18 => 'DocParser',
                    21 => 'DocParser',
                    24 => 'DocParser',
                    28 => 'DocParser',
                    30 => 'DocParser',
                    34 => 'DocParser',
                    36 => 'DocParser',
                ],
                'namespace' => [
                    3 => 'Doctrine\\Common\\Annotations',
                    9 => 'Nelmio\\ApiDocBundle\\Annotation',
                    11 => 'Doctrine\\Common\\Annotations',
                    14 => 'Doctrine\\Common\\Annotations',
                    16 => 'Doctrine\\Common\\Annotations',
                    18 => 'Doctrine\\Common\\Annotations',
                    21 => 'Doctrine\\Common\\Annotations',
                    24 => 'Doctrine\\Common\\Annotations',
                    28 => 'Doctrine\\Common\\Annotations',
                    30 => 'Doctrine\\Common\\Annotations',
                    34 => 'Doctrine\\Common\\Annotations',
                    36 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    3 => [
                        $o[2],
                    ],
                    9 => [
                        $o[8],
                    ],
                    11 => [
                        $o[7],
                    ],
                    14 => [
                        $o[13],
                    ],
                    16 => [
                        $o[6],
                    ],
                    18 => [
                        $o[5],
                    ],
                    21 => [
                        $o[20],
                    ],
                    24 => [
                        $o[23],
                    ],
                    28 => [
                        $o[27],
                    ],
                    30 => [
                        $o[26],
                    ],
                    34 => [
                        $o[33],
                    ],
                    36 => [
                        $o[32],
                    ],
                ],
                'type' => [
                    5 => 'array',
                    8 => 'App\\Entity\\Judging',
                    27 => 'string',
                    33 => 'string',
                ],
                'items' => [
                    5 => $o[6],
                ],
                'allOf' => [
                    6 => [
                        $o[7],
                        $o[13],
                    ],
                ],
                'ref' => [
                    7 => $o[8],
                    13 => '#/components/schemas/JudgementExtraFields',
                    20 => '#/components/parameters/idlist',
                    23 => '#/components/parameters/strict',
                ],
                'name' => [
                    26 => 'result',
                    32 => 'submission_id',
                ],
                'in' => [
                    26 => 'query',
                    32 => 'query',
                ],
                'schema' => [
                    26 => $o[27],
                    32 => $o[33],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[20],
            $o[23],
            $o[26],
            $o[32],
        ],
        []
    );
},
55 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Security'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Security')),
            clone ($p['FOS\\RestBundle\\Controller\\Annotations\\Get'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Get')),
            clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\JsonContent'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\JsonContent')),
            clone ($p['OpenApi\\Annotations\\Schema'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Schema')),
            clone ($p['Nelmio\\ApiDocBundle\\Annotation\\Model'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Nelmio\\ApiDocBundle\\Annotation\\Model')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Schema'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Parameter')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Parameter'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Security' => [
                'expression' => [
                    'is_granted(\'ROLE_JURY\') or is_granted(\'ROLE_TEAM\') or is_granted(\'ROLE_JUDGEHOST\') or is_granted(\'ROLE_API_READER\')',
                ],
            ],
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    1 => '/{id}',
                ],
                'methods' => [
                    1 => [
                        'GET',
                    ],
                ],
            ],
            'stdClass' => [
                'response' => [
                    2 => '200',
                ],
                'description' => [
                    2 => 'Returns the given judgement for this contest',
                ],
                '_context' => [
                    2 => $o[3],
                    5 => $o[15],
                    $o[10],
                    $o[8],
                    12 => $o[13],
                    17 => $o[18],
                    20 => $o[21],
                ],
                '_unmerged' => [
                    2 => [
                        $o[5],
                    ],
                ],
                'logger' => [
                    3 => $o[4],
                    8 => $o[9],
                    10 => $o[11],
                    13 => $o[14],
                    15 => $o[16],
                    18 => $o[19],
                    21 => $o[22],
                ],
                'filename' => [
                    3 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    8 => '/opt/domjudge/domserver/lib/vendor/nelmio/api-doc-bundle/Annotation/Model.php',
                    10 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    13 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    15 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    18 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    21 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    3 => 977,
                    8 => 66,
                    10 => 977,
                    13 => 977,
                    15 => 977,
                    18 => 977,
                    21 => 977,
                ],
                'method' => [
                    3 => 'Annotation',
                    8 => '__construct',
                    10 => 'Annotation',
                    13 => 'Annotation',
                    15 => 'Annotation',
                    18 => 'Annotation',
                    21 => 'Annotation',
                ],
                'class' => [
                    3 => 'DocParser',
                    8 => 'Model',
                    10 => 'DocParser',
                    13 => 'DocParser',
                    15 => 'DocParser',
                    18 => 'DocParser',
                    21 => 'DocParser',
                ],
                'namespace' => [
                    3 => 'Doctrine\\Common\\Annotations',
                    8 => 'Nelmio\\ApiDocBundle\\Annotation',
                    10 => 'Doctrine\\Common\\Annotations',
                    13 => 'Doctrine\\Common\\Annotations',
                    15 => 'Doctrine\\Common\\Annotations',
                    18 => 'Doctrine\\Common\\Annotations',
                    21 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    3 => [
                        $o[2],
                    ],
                    8 => [
                        $o[7],
                    ],
                    10 => [
                        $o[6],
                    ],
                    13 => [
                        $o[12],
                    ],
                    15 => [
                        $o[5],
                    ],
                    18 => [
                        $o[17],
                    ],
                    21 => [
                        $o[20],
                    ],
                ],
                'allOf' => [
                    5 => [
                        $o[6],
                        $o[12],
                    ],
                ],
                'ref' => [
                    6 => $o[7],
                    12 => '#/components/schemas/JudgementExtraFields',
                    17 => '#/components/parameters/id',
                    20 => '#/components/parameters/strict',
                ],
                'type' => [
                    7 => 'App\\Entity\\Judging',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[17],
            $o[20],
        ],
        []
    );
},
56 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Route')),
            clone ($p['OpenApi\\Annotations\\Tag'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Tag')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/contests/{cid}/judgement-types',
                ],
            ],
            'stdClass' => [
                'name' => [
                    1 => 'Judgement types',
                ],
                '_context' => [
                    1 => $o[2],
                    4 => $o[5],
                ],
                'logger' => [
                    2 => $o[3],
                    5 => $o[6],
                ],
                'filename' => [
                    2 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    5 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    2 => 977,
                    5 => 977,
                ],
                'method' => [
                    2 => 'Annotation',
                    5 => 'Annotation',
                ],
                'class' => [
                    2 => 'DocParser',
                    5 => 'DocParser',
                ],
                'namespace' => [
                    2 => 'Doctrine\\Common\\Annotations',
                    5 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    2 => [
                        $o[1],
                    ],
                    5 => [
                        $o[4],
                    ],
                ],
                'ref' => [
                    4 => '#/components/responses/InvalidResponse',
                ],
                'response' => [
                    4 => '400',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[4],
        ],
        []
    );
},
57 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Get'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Get')),
            clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\JsonContent'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\JsonContent')),
            clone ($p['OpenApi\\Annotations\\Items'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Items')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Parameter')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Parameter'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'stdClass' => [
                'response' => [
                    1 => '200',
                ],
                'description' => [
                    1 => 'Returns all the judgement types for this contest',
                ],
                '_context' => [
                    1 => $o[2],
                    4 => $o[8],
                    $o[6],
                    10 => $o[11],
                    13 => $o[14],
                ],
                '_unmerged' => [
                    1 => [
                        $o[4],
                    ],
                ],
                'logger' => [
                    2 => $o[3],
                    6 => $o[7],
                    8 => $o[9],
                    11 => $o[12],
                    14 => $o[15],
                ],
                'filename' => [
                    2 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    6 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    8 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    11 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    14 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    2 => 977,
                    6 => 977,
                    8 => 977,
                    11 => 977,
                    14 => 977,
                ],
                'method' => [
                    2 => 'Annotation',
                    6 => 'Annotation',
                    8 => 'Annotation',
                    11 => 'Annotation',
                    14 => 'Annotation',
                ],
                'class' => [
                    2 => 'DocParser',
                    6 => 'DocParser',
                    8 => 'DocParser',
                    11 => 'DocParser',
                    14 => 'DocParser',
                ],
                'namespace' => [
                    2 => 'Doctrine\\Common\\Annotations',
                    6 => 'Doctrine\\Common\\Annotations',
                    8 => 'Doctrine\\Common\\Annotations',
                    11 => 'Doctrine\\Common\\Annotations',
                    14 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    2 => [
                        $o[1],
                    ],
                    6 => [
                        $o[5],
                    ],
                    8 => [
                        $o[4],
                    ],
                    11 => [
                        $o[10],
                    ],
                    14 => [
                        $o[13],
                    ],
                ],
                'type' => [
                    4 => 'array',
                ],
                'items' => [
                    4 => $o[5],
                ],
                'ref' => [
                    5 => '#/components/schemas/JudgementType',
                    10 => '#/components/parameters/idlist',
                    13 => '#/components/parameters/strict',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[10],
            $o[13],
        ],
        []
    );
},
58 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Get'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Get')),
            clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\JsonContent'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\JsonContent')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Parameter')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Parameter'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{id}',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'stdClass' => [
                'response' => [
                    1 => '200',
                ],
                'description' => [
                    1 => 'Returns the given judgement type for this contest',
                ],
                '_context' => [
                    1 => $o[2],
                    4 => $o[5],
                    7 => $o[8],
                    10 => $o[11],
                ],
                '_unmerged' => [
                    1 => [
                        $o[4],
                    ],
                ],
                'logger' => [
                    2 => $o[3],
                    5 => $o[6],
                    8 => $o[9],
                    11 => $o[12],
                ],
                'filename' => [
                    2 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    5 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    8 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    11 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    2 => 977,
                    5 => 977,
                    8 => 977,
                    11 => 977,
                ],
                'method' => [
                    2 => 'Annotation',
                    5 => 'Annotation',
                    8 => 'Annotation',
                    11 => 'Annotation',
                ],
                'class' => [
                    2 => 'DocParser',
                    5 => 'DocParser',
                    8 => 'DocParser',
                    11 => 'DocParser',
                ],
                'namespace' => [
                    2 => 'Doctrine\\Common\\Annotations',
                    5 => 'Doctrine\\Common\\Annotations',
                    8 => 'Doctrine\\Common\\Annotations',
                    11 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    2 => [
                        $o[1],
                    ],
                    5 => [
                        $o[4],
                    ],
                    8 => [
                        $o[7],
                    ],
                    11 => [
                        $o[10],
                    ],
                ],
                'ref' => [
                    4 => '#/components/schemas/JudgementType',
                    7 => '#/components/parameters/id',
                    10 => '#/components/parameters/strict',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[7],
            $o[10],
        ],
        []
    );
},
59 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Route')),
            clone ($p['OpenApi\\Annotations\\Tag'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Tag')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Parameter')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Response'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Response'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/contests/{cid}/languages',
                ],
            ],
            'stdClass' => [
                'name' => [
                    1 => 'Languages',
                ],
                '_context' => [
                    1 => $o[2],
                    4 => $o[5],
                    7 => $o[8],
                    10 => $o[11],
                    13 => $o[14],
                ],
                'logger' => [
                    2 => $o[3],
                    5 => $o[6],
                    8 => $o[9],
                    11 => $o[12],
                    14 => $o[15],
                ],
                'filename' => [
                    2 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    5 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    8 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    11 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    14 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    2 => 977,
                    5 => 977,
                    8 => 977,
                    11 => 977,
                    14 => 977,
                ],
                'method' => [
                    2 => 'Annotation',
                    5 => 'Annotation',
                    8 => 'Annotation',
                    11 => 'Annotation',
                    14 => 'Annotation',
                ],
                'class' => [
                    2 => 'DocParser',
                    5 => 'DocParser',
                    8 => 'DocParser',
                    11 => 'DocParser',
                    14 => 'DocParser',
                ],
                'namespace' => [
                    2 => 'Doctrine\\Common\\Annotations',
                    5 => 'Doctrine\\Common\\Annotations',
                    8 => 'Doctrine\\Common\\Annotations',
                    11 => 'Doctrine\\Common\\Annotations',
                    14 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    2 => [
                        $o[1],
                    ],
                    5 => [
                        $o[4],
                    ],
                    8 => [
                        $o[7],
                    ],
                    11 => [
                        $o[10],
                    ],
                    14 => [
                        $o[13],
                    ],
                ],
                'ref' => [
                    4 => '#/components/parameters/cid',
                    7 => '#/components/responses/NotFound',
                    10 => '#/components/responses/Unauthorized',
                    13 => '#/components/responses/InvalidResponse',
                ],
                'response' => [
                    7 => '404',
                    10 => '401',
                    13 => '400',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[4],
            $o[7],
            $o[10],
            $o[13],
        ],
        []
    );
},
60 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Get'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Get')),
            clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\JsonContent'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\JsonContent')),
            clone ($p['OpenApi\\Annotations\\Items'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Items')),
            clone ($p['Nelmio\\ApiDocBundle\\Annotation\\Model'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Nelmio\\ApiDocBundle\\Annotation\\Model')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Parameter')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Parameter'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'stdClass' => [
                'response' => [
                    1 => '200',
                ],
                'description' => [
                    1 => 'Returns all the languages for this contest',
                ],
                '_context' => [
                    1 => $o[2],
                    4 => $o[11],
                    $o[9],
                    $o[7],
                    13 => $o[14],
                    16 => $o[17],
                ],
                '_unmerged' => [
                    1 => [
                        $o[4],
                    ],
                ],
                'logger' => [
                    2 => $o[3],
                    7 => $o[8],
                    9 => $o[10],
                    11 => $o[12],
                    14 => $o[15],
                    17 => $o[18],
                ],
                'filename' => [
                    2 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    7 => '/opt/domjudge/domserver/lib/vendor/nelmio/api-doc-bundle/Annotation/Model.php',
                    9 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    11 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    14 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    17 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    2 => 977,
                    7 => 66,
                    9 => 977,
                    11 => 977,
                    14 => 977,
                    17 => 977,
                ],
                'method' => [
                    2 => 'Annotation',
                    7 => '__construct',
                    9 => 'Annotation',
                    11 => 'Annotation',
                    14 => 'Annotation',
                    17 => 'Annotation',
                ],
                'class' => [
                    2 => 'DocParser',
                    7 => 'Model',
                    9 => 'DocParser',
                    11 => 'DocParser',
                    14 => 'DocParser',
                    17 => 'DocParser',
                ],
                'namespace' => [
                    2 => 'Doctrine\\Common\\Annotations',
                    7 => 'Nelmio\\ApiDocBundle\\Annotation',
                    9 => 'Doctrine\\Common\\Annotations',
                    11 => 'Doctrine\\Common\\Annotations',
                    14 => 'Doctrine\\Common\\Annotations',
                    17 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    2 => [
                        $o[1],
                    ],
                    7 => [
                        $o[6],
                    ],
                    9 => [
                        $o[5],
                    ],
                    11 => [
                        $o[4],
                    ],
                    14 => [
                        $o[13],
                    ],
                    17 => [
                        $o[16],
                    ],
                ],
                'type' => [
                    4 => 'array',
                    6 => 'App\\Entity\\Language',
                ],
                'items' => [
                    4 => $o[5],
                ],
                'ref' => [
                    5 => $o[6],
                    13 => '#/components/parameters/idlist',
                    16 => '#/components/parameters/strict',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[13],
            $o[16],
        ],
        []
    );
},
61 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Get'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Get')),
            clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['Nelmio\\ApiDocBundle\\Annotation\\Model'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Nelmio\\ApiDocBundle\\Annotation\\Model')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Parameter')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Parameter'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{id}',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'stdClass' => [
                'response' => [
                    1 => '200',
                ],
                'description' => [
                    1 => 'Returns the given language for this contest',
                ],
                '_context' => [
                    1 => $o[2],
                    4 => $o[5],
                    7 => $o[8],
                    10 => $o[11],
                ],
                '_unmerged' => [
                    1 => [
                        $o[4],
                    ],
                ],
                'logger' => [
                    2 => $o[3],
                    5 => $o[6],
                    8 => $o[9],
                    11 => $o[12],
                ],
                'filename' => [
                    2 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    5 => '/opt/domjudge/domserver/lib/vendor/nelmio/api-doc-bundle/Annotation/Model.php',
                    8 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    11 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    2 => 977,
                    5 => 66,
                    8 => 977,
                    11 => 977,
                ],
                'method' => [
                    2 => 'Annotation',
                    5 => '__construct',
                    8 => 'Annotation',
                    11 => 'Annotation',
                ],
                'class' => [
                    2 => 'DocParser',
                    5 => 'Model',
                    8 => 'DocParser',
                    11 => 'DocParser',
                ],
                'namespace' => [
                    2 => 'Doctrine\\Common\\Annotations',
                    5 => 'Nelmio\\ApiDocBundle\\Annotation',
                    8 => 'Doctrine\\Common\\Annotations',
                    11 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    2 => [
                        $o[1],
                    ],
                    5 => [
                        $o[4],
                    ],
                    8 => [
                        $o[7],
                    ],
                    11 => [
                        $o[10],
                    ],
                ],
                'type' => [
                    4 => 'App\\Entity\\Language',
                ],
                'ref' => [
                    7 => '#/components/parameters/id',
                    10 => '#/components/parameters/strict',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[7],
            $o[10],
        ],
        []
    );
},
62 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
            clone ($p['OpenApi\\Annotations\\Tag'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Tag')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/metrics',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_API_READER',
                ],
            ],
            'stdClass' => [
                'name' => [
                    2 => 'Metrics',
                ],
                '_context' => [
                    2 => $o[3],
                ],
                'logger' => [
                    3 => $o[4],
                ],
                'filename' => [
                    3 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    3 => 977,
                ],
                'method' => [
                    3 => 'Annotation',
                ],
                'class' => [
                    3 => 'DocParser',
                ],
                'namespace' => [
                    3 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    3 => [
                        $o[2],
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
63 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Get'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Get')),
            clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone ($p['OpenApi\\Annotations\\MediaType'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\MediaType')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/prometheus',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'stdClass' => [
                'response' => [
                    1 => '200',
                ],
                'description' => [
                    1 => 'Metrics of this installation for use by Prometheus',
                ],
                'content' => [
                    1 => [
                        $o[2],
                    ],
                ],
                '_context' => [
                    1 => $o[5],
                    $o[3],
                ],
                'mediaType' => [
                    2 => 'text/plain',
                ],
                'logger' => [
                    3 => $o[4],
                    5 => $o[6],
                ],
                'filename' => [
                    3 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    5 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    3 => 977,
                    5 => 977,
                ],
                'method' => [
                    3 => 'Annotation',
                    5 => 'Annotation',
                ],
                'class' => [
                    3 => 'DocParser',
                    5 => 'DocParser',
                ],
                'namespace' => [
                    3 => 'Doctrine\\Common\\Annotations',
                    5 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    3 => [
                        $o[2],
                    ],
                    5 => [
                        $o[1],
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
64 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Route')),
            clone ($p['OpenApi\\Annotations\\Tag'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Tag')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Parameter')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Response'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Response'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/contests/{cid}/organizations',
                ],
            ],
            'stdClass' => [
                'name' => [
                    1 => 'Organizations',
                ],
                '_context' => [
                    1 => $o[2],
                    4 => $o[5],
                    7 => $o[8],
                    10 => $o[11],
                    13 => $o[14],
                ],
                'logger' => [
                    2 => $o[3],
                    5 => $o[6],
                    8 => $o[9],
                    11 => $o[12],
                    14 => $o[15],
                ],
                'filename' => [
                    2 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    5 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    8 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    11 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    14 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    2 => 977,
                    5 => 977,
                    8 => 977,
                    11 => 977,
                    14 => 977,
                ],
                'method' => [
                    2 => 'Annotation',
                    5 => 'Annotation',
                    8 => 'Annotation',
                    11 => 'Annotation',
                    14 => 'Annotation',
                ],
                'class' => [
                    2 => 'DocParser',
                    5 => 'DocParser',
                    8 => 'DocParser',
                    11 => 'DocParser',
                    14 => 'DocParser',
                ],
                'namespace' => [
                    2 => 'Doctrine\\Common\\Annotations',
                    5 => 'Doctrine\\Common\\Annotations',
                    8 => 'Doctrine\\Common\\Annotations',
                    11 => 'Doctrine\\Common\\Annotations',
                    14 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    2 => [
                        $o[1],
                    ],
                    5 => [
                        $o[4],
                    ],
                    8 => [
                        $o[7],
                    ],
                    11 => [
                        $o[10],
                    ],
                    14 => [
                        $o[13],
                    ],
                ],
                'ref' => [
                    4 => '#/components/parameters/cid',
                    7 => '#/components/responses/NotFound',
                    10 => '#/components/responses/Unauthorized',
                    13 => '#/components/responses/InvalidResponse',
                ],
                'response' => [
                    7 => '404',
                    10 => '401',
                    13 => '400',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[4],
            $o[7],
            $o[10],
            $o[13],
        ],
        []
    );
},
65 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Get'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Get')),
            clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\JsonContent'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\JsonContent')),
            clone ($p['OpenApi\\Annotations\\Items'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Items')),
            clone ($p['OpenApi\\Annotations\\Schema'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Schema')),
            clone ($p['Nelmio\\ApiDocBundle\\Annotation\\Model'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Nelmio\\ApiDocBundle\\Annotation\\Model')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Schema'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Parameter')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Parameter'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Parameter'],
            clone $p['OpenApi\\Annotations\\Schema'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'stdClass' => [
                'response' => [
                    1 => '200',
                ],
                'description' => [
                    1 => 'Returns all the organizations for this contest',
                    25 => 'Only show organizations for the given country',
                ],
                '_context' => [
                    1 => $o[2],
                    4 => $o[17],
                    $o[15],
                    $o[10],
                    $o[8],
                    12 => $o[13],
                    19 => $o[20],
                    22 => $o[23],
                    25 => $o[29],
                    $o[27],
                ],
                '_unmerged' => [
                    1 => [
                        $o[4],
                    ],
                ],
                'logger' => [
                    2 => $o[3],
                    8 => $o[9],
                    10 => $o[11],
                    13 => $o[14],
                    15 => $o[16],
                    17 => $o[18],
                    20 => $o[21],
                    23 => $o[24],
                    27 => $o[28],
                    29 => $o[30],
                ],
                'filename' => [
                    2 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    8 => '/opt/domjudge/domserver/lib/vendor/nelmio/api-doc-bundle/Annotation/Model.php',
                    10 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    13 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    15 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    17 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    20 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    23 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    27 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    29 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    2 => 977,
                    8 => 66,
                    10 => 977,
                    13 => 977,
                    15 => 977,
                    17 => 977,
                    20 => 977,
                    23 => 977,
                    27 => 977,
                    29 => 977,
                ],
                'method' => [
                    2 => 'Annotation',
                    8 => '__construct',
                    10 => 'Annotation',
                    13 => 'Annotation',
                    15 => 'Annotation',
                    17 => 'Annotation',
                    20 => 'Annotation',
                    23 => 'Annotation',
                    27 => 'Annotation',
                    29 => 'Annotation',
                ],
                'class' => [
                    2 => 'DocParser',
                    8 => 'Model',
                    10 => 'DocParser',
                    13 => 'DocParser',
                    15 => 'DocParser',
                    17 => 'DocParser',
                    20 => 'DocParser',
                    23 => 'DocParser',
                    27 => 'DocParser',
                    29 => 'DocParser',
                ],
                'namespace' => [
                    2 => 'Doctrine\\Common\\Annotations',
                    8 => 'Nelmio\\ApiDocBundle\\Annotation',
                    10 => 'Doctrine\\Common\\Annotations',
                    13 => 'Doctrine\\Common\\Annotations',
                    15 => 'Doctrine\\Common\\Annotations',
                    17 => 'Doctrine\\Common\\Annotations',
                    20 => 'Doctrine\\Common\\Annotations',
                    23 => 'Doctrine\\Common\\Annotations',
                    27 => 'Doctrine\\Common\\Annotations',
                    29 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    2 => [
                        $o[1],
                    ],
                    8 => [
                        $o[7],
                    ],
                    10 => [
                        $o[6],
                    ],
                    13 => [
                        $o[12],
                    ],
                    15 => [
                        $o[5],
                    ],
                    17 => [
                        $o[4],
                    ],
                    20 => [
                        $o[19],
                    ],
                    23 => [
                        $o[22],
                    ],
                    27 => [
                        $o[26],
                    ],
                    29 => [
                        $o[25],
                    ],
                ],
                'type' => [
                    4 => 'array',
                    7 => 'App\\Entity\\TeamAffiliation',
                    26 => 'string',
                ],
                'items' => [
                    4 => $o[5],
                ],
                'allOf' => [
                    5 => [
                        $o[6],
                        $o[12],
                    ],
                ],
                'ref' => [
                    6 => $o[7],
                    12 => '#/components/schemas/Logo',
                    19 => '#/components/parameters/idlist',
                    22 => '#/components/parameters/strict',
                ],
                'name' => [
                    25 => 'country',
                ],
                'in' => [
                    25 => 'query',
                ],
                'schema' => [
                    25 => $o[26],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[19],
            $o[22],
            $o[25],
        ],
        []
    );
},
66 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Get'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Get')),
            clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\JsonContent'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\JsonContent')),
            clone ($p['OpenApi\\Annotations\\Schema'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Schema')),
            clone ($p['Nelmio\\ApiDocBundle\\Annotation\\Model'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Nelmio\\ApiDocBundle\\Annotation\\Model')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Schema'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Parameter')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Parameter'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{id}',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'stdClass' => [
                'response' => [
                    1 => '200',
                ],
                'description' => [
                    1 => 'Returns the given organization for this contest',
                ],
                '_context' => [
                    1 => $o[2],
                    4 => $o[14],
                    $o[9],
                    $o[7],
                    11 => $o[12],
                    16 => $o[17],
                    19 => $o[20],
                ],
                '_unmerged' => [
                    1 => [
                        $o[4],
                    ],
                ],
                'logger' => [
                    2 => $o[3],
                    7 => $o[8],
                    9 => $o[10],
                    12 => $o[13],
                    14 => $o[15],
                    17 => $o[18],
                    20 => $o[21],
                ],
                'filename' => [
                    2 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    7 => '/opt/domjudge/domserver/lib/vendor/nelmio/api-doc-bundle/Annotation/Model.php',
                    9 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    12 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    14 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    17 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    20 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    2 => 977,
                    7 => 66,
                    9 => 977,
                    12 => 977,
                    14 => 977,
                    17 => 977,
                    20 => 977,
                ],
                'method' => [
                    2 => 'Annotation',
                    7 => '__construct',
                    9 => 'Annotation',
                    12 => 'Annotation',
                    14 => 'Annotation',
                    17 => 'Annotation',
                    20 => 'Annotation',
                ],
                'class' => [
                    2 => 'DocParser',
                    7 => 'Model',
                    9 => 'DocParser',
                    12 => 'DocParser',
                    14 => 'DocParser',
                    17 => 'DocParser',
                    20 => 'DocParser',
                ],
                'namespace' => [
                    2 => 'Doctrine\\Common\\Annotations',
                    7 => 'Nelmio\\ApiDocBundle\\Annotation',
                    9 => 'Doctrine\\Common\\Annotations',
                    12 => 'Doctrine\\Common\\Annotations',
                    14 => 'Doctrine\\Common\\Annotations',
                    17 => 'Doctrine\\Common\\Annotations',
                    20 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    2 => [
                        $o[1],
                    ],
                    7 => [
                        $o[6],
                    ],
                    9 => [
                        $o[5],
                    ],
                    12 => [
                        $o[11],
                    ],
                    14 => [
                        $o[4],
                    ],
                    17 => [
                        $o[16],
                    ],
                    20 => [
                        $o[19],
                    ],
                ],
                'allOf' => [
                    4 => [
                        $o[5],
                        $o[11],
                    ],
                ],
                'ref' => [
                    5 => $o[6],
                    11 => '#/components/schemas/Logo',
                    16 => '#/components/parameters/id',
                    19 => '#/components/parameters/strict',
                ],
                'type' => [
                    6 => 'App\\Entity\\TeamAffiliation',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[16],
            $o[19],
        ],
        []
    );
},
67 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Get'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Get')),
            clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone ($p['OpenApi\\Annotations\\MediaType'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\MediaType')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone $p['OpenApi\\Annotations\\MediaType'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\MediaType'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Parameter')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{id}/logo',
                ],
                'name' => [
                    'organization_logo',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'stdClass' => [
                'response' => [
                    1 => '200',
                ],
                'description' => [
                    1 => 'Returns the given organization logo in PNG, JPG or SVG format',
                ],
                'content' => [
                    1 => [
                        $o[2],
                        $o[5],
                        $o[8],
                    ],
                ],
                '_context' => [
                    1 => $o[11],
                    $o[3],
                    5 => $o[6],
                    8 => $o[9],
                    13 => $o[14],
                ],
                'mediaType' => [
                    2 => 'image/png',
                    5 => 'image/jpeg',
                    8 => 'image/svg+xml',
                ],
                'logger' => [
                    3 => $o[4],
                    6 => $o[7],
                    9 => $o[10],
                    11 => $o[12],
                    14 => $o[15],
                ],
                'filename' => [
                    3 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    6 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    9 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    11 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    14 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    3 => 977,
                    6 => 977,
                    9 => 977,
                    11 => 977,
                    14 => 977,
                ],
                'method' => [
                    3 => 'Annotation',
                    6 => 'Annotation',
                    9 => 'Annotation',
                    11 => 'Annotation',
                    14 => 'Annotation',
                ],
                'class' => [
                    3 => 'DocParser',
                    6 => 'DocParser',
                    9 => 'DocParser',
                    11 => 'DocParser',
                    14 => 'DocParser',
                ],
                'namespace' => [
                    3 => 'Doctrine\\Common\\Annotations',
                    6 => 'Doctrine\\Common\\Annotations',
                    9 => 'Doctrine\\Common\\Annotations',
                    11 => 'Doctrine\\Common\\Annotations',
                    14 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    3 => [
                        $o[2],
                    ],
                    6 => [
                        $o[5],
                    ],
                    9 => [
                        $o[8],
                    ],
                    11 => [
                        $o[1],
                    ],
                    14 => [
                        $o[13],
                    ],
                ],
                'ref' => [
                    13 => '#/components/parameters/id',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[13],
        ],
        []
    );
},
68 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Delete'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Delete')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
            clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Parameter')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{id}/logo',
                ],
                'name' => [
                    'delete_organization_logo',
                ],
                'methods' => [
                    [
                        'DELETE',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
            'stdClass' => [
                'response' => [
                    2 => '204',
                ],
                'description' => [
                    2 => 'Deleting logo succeeded',
                ],
                '_context' => [
                    2 => $o[3],
                    5 => $o[6],
                ],
                'logger' => [
                    3 => $o[4],
                    6 => $o[7],
                ],
                'filename' => [
                    3 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    6 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    3 => 977,
                    6 => 977,
                ],
                'method' => [
                    3 => 'Annotation',
                    6 => 'Annotation',
                ],
                'class' => [
                    3 => 'DocParser',
                    6 => 'DocParser',
                ],
                'namespace' => [
                    3 => 'Doctrine\\Common\\Annotations',
                    6 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    3 => [
                        $o[2],
                    ],
                    6 => [
                        $o[5],
                    ],
                ],
                'ref' => [
                    5 => '#/components/parameters/id',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[5],
        ],
        []
    );
},
69 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Post'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Post')),
            clone ($p['FOS\\RestBundle\\Controller\\Annotations\\Put'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Put')),
            clone ($p['OpenApi\\Annotations\\RequestBody'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\RequestBody')),
            clone ($p['OpenApi\\Annotations\\MediaType'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\MediaType')),
            clone ($p['OpenApi\\Annotations\\Schema'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Schema')),
            clone ($p['OpenApi\\Annotations\\Property'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Property')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
            clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Parameter')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{id}/logo',
                    '/{id}/logo',
                ],
                'name' => [
                    'post_organization_logo',
                    'put_organization_logo',
                ],
                'methods' => [
                    [
                        'POST',
                    ],
                    [
                        'PUT',
                    ],
                ],
            ],
            'stdClass' => [
                'required' => [
                    2 => true,
                    4 => [
                        'logo',
                    ],
                ],
                'content' => [
                    2 => [
                        $o[3],
                    ],
                ],
                '_context' => [
                    2 => $o[12],
                    $o[10],
                    $o[8],
                    $o[6],
                    15 => $o[16],
                    18 => $o[19],
                ],
                'mediaType' => [
                    3 => 'multipart/form-data',
                ],
                'schema' => [
                    3 => $o[4],
                ],
                'properties' => [
                    4 => [
                        $o[5],
                    ],
                ],
                'property' => [
                    5 => 'logo',
                ],
                'description' => [
                    5 => 'The logo to use.',
                    15 => 'Setting logo succeeded',
                ],
                'type' => [
                    5 => 'string',
                ],
                'format' => [
                    5 => 'binary',
                ],
                'logger' => [
                    6 => $o[7],
                    8 => $o[9],
                    10 => $o[11],
                    12 => $o[13],
                    16 => $o[17],
                    19 => $o[20],
                ],
                'filename' => [
                    6 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    8 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    10 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    12 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    16 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    19 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    6 => 977,
                    8 => 977,
                    10 => 977,
                    12 => 977,
                    16 => 977,
                    19 => 977,
                ],
                'method' => [
                    6 => 'Annotation',
                    8 => 'Annotation',
                    10 => 'Annotation',
                    12 => 'Annotation',
                    16 => 'Annotation',
                    19 => 'Annotation',
                ],
                'class' => [
                    6 => 'DocParser',
                    8 => 'DocParser',
                    10 => 'DocParser',
                    12 => 'DocParser',
                    16 => 'DocParser',
                    19 => 'DocParser',
                ],
                'namespace' => [
                    6 => 'Doctrine\\Common\\Annotations',
                    8 => 'Doctrine\\Common\\Annotations',
                    10 => 'Doctrine\\Common\\Annotations',
                    12 => 'Doctrine\\Common\\Annotations',
                    16 => 'Doctrine\\Common\\Annotations',
                    19 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    6 => [
                        $o[5],
                    ],
                    8 => [
                        $o[4],
                    ],
                    10 => [
                        $o[3],
                    ],
                    12 => [
                        $o[2],
                    ],
                    16 => [
                        $o[15],
                    ],
                    19 => [
                        $o[18],
                    ],
                ],
                'response' => [
                    15 => '204',
                ],
                'ref' => [
                    18 => '#/components/parameters/id',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    14 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[14],
            $o[15],
            $o[18],
        ],
        []
    );
},
70 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Post'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Post')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
            clone ($p['OpenApi\\Annotations\\RequestBody'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\RequestBody')),
            clone ($p['OpenApi\\Annotations\\MediaType'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\MediaType')),
            clone ($p['OpenApi\\Annotations\\Schema'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Schema')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\MediaType'],
            clone $p['OpenApi\\Annotations\\Schema'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['Nelmio\\ApiDocBundle\\Annotation\\Model'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Nelmio\\ApiDocBundle\\Annotation\\Model')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'methods' => [
                    [
                        'POST',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_API_WRITER',
                ],
            ],
            'stdClass' => [
                'required' => [
                    2 => true,
                ],
                'content' => [
                    2 => [
                        $o[3],
                        $o[9],
                    ],
                ],
                '_context' => [
                    2 => $o[15],
                    $o[7],
                    $o[5],
                    9 => $o[13],
                    $o[11],
                    17 => $o[18],
                    20 => $o[21],
                ],
                'mediaType' => [
                    3 => 'multipart/form-data',
                    9 => 'application/json',
                ],
                'schema' => [
                    3 => $o[4],
                    9 => $o[10],
                ],
                'ref' => [
                    4 => '#/components/schemas/TeamAffiliation',
                    10 => '#/components/schemas/TeamAffiliation',
                ],
                'logger' => [
                    5 => $o[6],
                    7 => $o[8],
                    11 => $o[12],
                    13 => $o[14],
                    15 => $o[16],
                    18 => $o[19],
                    21 => $o[22],
                ],
                'filename' => [
                    5 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    7 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    11 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    13 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    15 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    18 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    21 => '/opt/domjudge/domserver/lib/vendor/nelmio/api-doc-bundle/Annotation/Model.php',
                ],
                'line' => [
                    5 => 977,
                    7 => 977,
                    11 => 977,
                    13 => 977,
                    15 => 977,
                    18 => 977,
                    21 => 66,
                ],
                'method' => [
                    5 => 'Annotation',
                    7 => 'Annotation',
                    11 => 'Annotation',
                    13 => 'Annotation',
                    15 => 'Annotation',
                    18 => 'Annotation',
                    21 => '__construct',
                ],
                'class' => [
                    5 => 'DocParser',
                    7 => 'DocParser',
                    11 => 'DocParser',
                    13 => 'DocParser',
                    15 => 'DocParser',
                    18 => 'DocParser',
                    21 => 'Model',
                ],
                'namespace' => [
                    5 => 'Doctrine\\Common\\Annotations',
                    7 => 'Doctrine\\Common\\Annotations',
                    11 => 'Doctrine\\Common\\Annotations',
                    13 => 'Doctrine\\Common\\Annotations',
                    15 => 'Doctrine\\Common\\Annotations',
                    18 => 'Doctrine\\Common\\Annotations',
                    21 => 'Nelmio\\ApiDocBundle\\Annotation',
                ],
                'annotations' => [
                    5 => [
                        $o[4],
                    ],
                    7 => [
                        $o[3],
                    ],
                    11 => [
                        $o[10],
                    ],
                    13 => [
                        $o[9],
                    ],
                    15 => [
                        $o[2],
                    ],
                    18 => [
                        $o[17],
                    ],
                    21 => [
                        $o[20],
                    ],
                ],
                'response' => [
                    17 => '201',
                ],
                'description' => [
                    17 => 'Returns the added organization',
                ],
                '_unmerged' => [
                    17 => [
                        $o[20],
                    ],
                ],
                'type' => [
                    20 => 'App\\Entity\\TeamAffiliation',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[17],
        ],
        []
    );
},
71 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Route')),
            clone ($p['OpenApi\\Annotations\\Tag'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Tag')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Parameter')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Response'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Response'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/contests/{cid}/problems',
                ],
            ],
            'stdClass' => [
                'name' => [
                    1 => 'Problems',
                ],
                '_context' => [
                    1 => $o[2],
                    4 => $o[5],
                    7 => $o[8],
                    10 => $o[11],
                    13 => $o[14],
                ],
                'logger' => [
                    2 => $o[3],
                    5 => $o[6],
                    8 => $o[9],
                    11 => $o[12],
                    14 => $o[15],
                ],
                'filename' => [
                    2 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    5 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    8 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    11 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    14 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    2 => 977,
                    5 => 977,
                    8 => 977,
                    11 => 977,
                    14 => 977,
                ],
                'method' => [
                    2 => 'Annotation',
                    5 => 'Annotation',
                    8 => 'Annotation',
                    11 => 'Annotation',
                    14 => 'Annotation',
                ],
                'class' => [
                    2 => 'DocParser',
                    5 => 'DocParser',
                    8 => 'DocParser',
                    11 => 'DocParser',
                    14 => 'DocParser',
                ],
                'namespace' => [
                    2 => 'Doctrine\\Common\\Annotations',
                    5 => 'Doctrine\\Common\\Annotations',
                    8 => 'Doctrine\\Common\\Annotations',
                    11 => 'Doctrine\\Common\\Annotations',
                    14 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    2 => [
                        $o[1],
                    ],
                    5 => [
                        $o[4],
                    ],
                    8 => [
                        $o[7],
                    ],
                    11 => [
                        $o[10],
                    ],
                    14 => [
                        $o[13],
                    ],
                ],
                'ref' => [
                    4 => '#/components/parameters/cid',
                    7 => '#/components/responses/NotFound',
                    10 => '#/components/responses/Unauthorized',
                    13 => '#/components/responses/InvalidResponse',
                ],
                'response' => [
                    7 => '404',
                    10 => '401',
                    13 => '400',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[4],
            $o[7],
            $o[10],
            $o[13],
        ],
        []
    );
},
72 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Post'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Post')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
            clone ($p['OpenApi\\Annotations\\Post'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Post')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\RequestBody'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\RequestBody')),
            clone ($p['OpenApi\\Annotations\\MediaType'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\MediaType')),
            clone ($p['OpenApi\\Annotations\\Schema'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Schema')),
            clone ($p['OpenApi\\Annotations\\Property'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Property')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/add-data',
                ],
                'methods' => [
                    [
                        'POST',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
            'stdClass' => [
                '_context' => [
                    2 => $o[3],
                    5 => $o[15],
                    $o[13],
                    $o[11],
                    $o[9],
                    17 => $o[18],
                ],
                'logger' => [
                    3 => $o[4],
                    9 => $o[10],
                    11 => $o[12],
                    13 => $o[14],
                    15 => $o[16],
                    18 => $o[19],
                ],
                'filename' => [
                    3 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    9 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    11 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    13 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    15 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    18 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    3 => 977,
                    9 => 977,
                    11 => 977,
                    13 => 977,
                    15 => 977,
                    18 => 977,
                ],
                'method' => [
                    3 => 'Annotation',
                    9 => 'Annotation',
                    11 => 'Annotation',
                    13 => 'Annotation',
                    15 => 'Annotation',
                    18 => 'Annotation',
                ],
                'class' => [
                    3 => 'DocParser',
                    9 => 'DocParser',
                    11 => 'DocParser',
                    13 => 'DocParser',
                    15 => 'DocParser',
                    18 => 'DocParser',
                ],
                'namespace' => [
                    3 => 'Doctrine\\Common\\Annotations',
                    9 => 'Doctrine\\Common\\Annotations',
                    11 => 'Doctrine\\Common\\Annotations',
                    13 => 'Doctrine\\Common\\Annotations',
                    15 => 'Doctrine\\Common\\Annotations',
                    18 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    3 => [
                        $o[2],
                    ],
                    9 => [
                        $o[8],
                    ],
                    11 => [
                        $o[7],
                    ],
                    13 => [
                        $o[6],
                    ],
                    15 => [
                        $o[5],
                    ],
                    18 => [
                        $o[17],
                    ],
                ],
                'required' => [
                    5 => true,
                ],
                'content' => [
                    5 => [
                        $o[6],
                    ],
                ],
                'mediaType' => [
                    6 => 'multipart/form-data',
                ],
                'schema' => [
                    6 => $o[7],
                ],
                'properties' => [
                    7 => [
                        $o[8],
                    ],
                ],
                'property' => [
                    8 => 'data',
                ],
                'description' => [
                    8 => 'The problems.yaml or problems.json file to import.',
                    17 => 'Returns the API ID\'s of the added problems.',
                ],
                'type' => [
                    8 => 'string',
                ],
                'format' => [
                    8 => 'binary',
                ],
                'response' => [
                    17 => '200',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[5],
            $o[17],
        ],
        []
    );
},
73 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Get'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Get')),
            clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\JsonContent'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\JsonContent')),
            clone ($p['OpenApi\\Annotations\\Items'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Items')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Parameter')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Parameter'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'stdClass' => [
                'response' => [
                    1 => '200',
                ],
                'description' => [
                    1 => 'Returns all the problems for this contest',
                ],
                '_context' => [
                    1 => $o[2],
                    4 => $o[8],
                    $o[6],
                    10 => $o[11],
                    13 => $o[14],
                ],
                '_unmerged' => [
                    1 => [
                        $o[4],
                    ],
                ],
                'logger' => [
                    2 => $o[3],
                    6 => $o[7],
                    8 => $o[9],
                    11 => $o[12],
                    14 => $o[15],
                ],
                'filename' => [
                    2 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    6 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    8 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    11 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    14 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    2 => 977,
                    6 => 977,
                    8 => 977,
                    11 => 977,
                    14 => 977,
                ],
                'method' => [
                    2 => 'Annotation',
                    6 => 'Annotation',
                    8 => 'Annotation',
                    11 => 'Annotation',
                    14 => 'Annotation',
                ],
                'class' => [
                    2 => 'DocParser',
                    6 => 'DocParser',
                    8 => 'DocParser',
                    11 => 'DocParser',
                    14 => 'DocParser',
                ],
                'namespace' => [
                    2 => 'Doctrine\\Common\\Annotations',
                    6 => 'Doctrine\\Common\\Annotations',
                    8 => 'Doctrine\\Common\\Annotations',
                    11 => 'Doctrine\\Common\\Annotations',
                    14 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    2 => [
                        $o[1],
                    ],
                    6 => [
                        $o[5],
                    ],
                    8 => [
                        $o[4],
                    ],
                    11 => [
                        $o[10],
                    ],
                    14 => [
                        $o[13],
                    ],
                ],
                'type' => [
                    4 => 'array',
                ],
                'items' => [
                    4 => $o[5],
                ],
                'ref' => [
                    5 => '#/components/schemas/ContestProblem',
                    10 => '#/components/parameters/idlist',
                    13 => '#/components/parameters/strict',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[10],
            $o[13],
        ],
        []
    );
},
74 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Post'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Post')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
            clone ($p['OpenApi\\Annotations\\Post'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Post')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\RequestBody'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\RequestBody')),
            clone ($p['OpenApi\\Annotations\\MediaType'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\MediaType')),
            clone ($p['OpenApi\\Annotations\\Schema'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Schema')),
            clone ($p['OpenApi\\Annotations\\Property'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Property')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\JsonContent'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\JsonContent')),
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone ($p['OpenApi\\Annotations\\Items'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Items')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '',
                ],
                'methods' => [
                    [
                        'POST',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
            'stdClass' => [
                '_context' => [
                    2 => $o[3],
                    5 => $o[21],
                    $o[19],
                    $o[17],
                    $o[9],
                    11 => $o[12],
                    14 => $o[15],
                    23 => $o[24],
                    26 => $o[36],
                    $o[28],
                    30 => $o[34],
                    $o[32],
                ],
                'logger' => [
                    3 => $o[4],
                    9 => $o[10],
                    12 => $o[13],
                    15 => $o[16],
                    17 => $o[18],
                    19 => $o[20],
                    21 => $o[22],
                    24 => $o[25],
                    28 => $o[29],
                    32 => $o[33],
                    34 => $o[35],
                    36 => $o[37],
                ],
                'filename' => [
                    3 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    9 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    12 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    15 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    17 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    19 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    21 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    24 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    28 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    32 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    34 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    36 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    3 => 977,
                    9 => 977,
                    12 => 977,
                    15 => 977,
                    17 => 977,
                    19 => 977,
                    21 => 977,
                    24 => 977,
                    28 => 977,
                    32 => 977,
                    34 => 977,
                    36 => 977,
                ],
                'method' => [
                    3 => 'Annotation',
                    9 => 'Annotation',
                    12 => 'Annotation',
                    15 => 'Annotation',
                    17 => 'Annotation',
                    19 => 'Annotation',
                    21 => 'Annotation',
                    24 => 'Annotation',
                    28 => 'Annotation',
                    32 => 'Annotation',
                    34 => 'Annotation',
                    36 => 'Annotation',
                ],
                'class' => [
                    3 => 'DocParser',
                    9 => 'DocParser',
                    12 => 'DocParser',
                    15 => 'DocParser',
                    17 => 'DocParser',
                    19 => 'DocParser',
                    21 => 'DocParser',
                    24 => 'DocParser',
                    28 => 'DocParser',
                    32 => 'DocParser',
                    34 => 'DocParser',
                    36 => 'DocParser',
                ],
                'namespace' => [
                    3 => 'Doctrine\\Common\\Annotations',
                    9 => 'Doctrine\\Common\\Annotations',
                    12 => 'Doctrine\\Common\\Annotations',
                    15 => 'Doctrine\\Common\\Annotations',
                    17 => 'Doctrine\\Common\\Annotations',
                    19 => 'Doctrine\\Common\\Annotations',
                    21 => 'Doctrine\\Common\\Annotations',
                    24 => 'Doctrine\\Common\\Annotations',
                    28 => 'Doctrine\\Common\\Annotations',
                    32 => 'Doctrine\\Common\\Annotations',
                    34 => 'Doctrine\\Common\\Annotations',
                    36 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    3 => [
                        $o[2],
                    ],
                    9 => [
                        $o[8],
                    ],
                    12 => [
                        $o[11],
                    ],
                    15 => [
                        $o[14],
                    ],
                    17 => [
                        $o[7],
                    ],
                    19 => [
                        $o[6],
                    ],
                    21 => [
                        $o[5],
                    ],
                    24 => [
                        $o[23],
                    ],
                    28 => [
                        $o[27],
                    ],
                    32 => [
                        $o[31],
                    ],
                    34 => [
                        $o[30],
                    ],
                    36 => [
                        $o[26],
                    ],
                ],
                'required' => [
                    5 => true,
                    7 => [
                        'zip',
                    ],
                ],
                'content' => [
                    5 => [
                        $o[6],
                    ],
                ],
                'mediaType' => [
                    6 => 'multipart/form-data',
                ],
                'schema' => [
                    6 => $o[7],
                ],
                'properties' => [
                    7 => [
                        $o[8],
                        $o[11],
                        $o[14],
                    ],
                    26 => [
                        $o[27],
                        $o[30],
                    ],
                ],
                'property' => [
                    8 => 'zip',
                    11 => 'problem',
                    14 => 'delete_old_data',
                    27 => 'problem_id',
                    30 => 'messages',
                ],
                'description' => [
                    8 => 'The problem archive to import',
                    11 => 'Optional: problem id to update.',
                    14 => 'Optional: whether to delete old (existing) data before importing into an existing problem.',
                    23 => 'Returns the ID of the imported problem and any messages produced',
                    27 => 'The ID of the imported problem',
                    31 => 'Messages produced while adding problems',
                ],
                'type' => [
                    8 => 'string',
                    11 => 'string',
                    14 => 'boolean',
                    26 => 'object',
                    'integer',
                    30 => 'array',
                    'string',
                ],
                'format' => [
                    8 => 'binary',
                ],
                'response' => [
                    23 => '200',
                ],
                '_unmerged' => [
                    23 => [
                        $o[26],
                    ],
                ],
                'items' => [
                    30 => $o[31],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[5],
            $o[23],
        ],
        []
    );
},
75 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Delete'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Delete')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
            clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Parameter')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{id}',
                ],
                'methods' => [
                    [
                        'DELETE',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
            'stdClass' => [
                'response' => [
                    2 => '204',
                ],
                'description' => [
                    2 => 'Problem unlinked from contest succeeded',
                ],
                '_context' => [
                    2 => $o[3],
                    5 => $o[6],
                ],
                'logger' => [
                    3 => $o[4],
                    6 => $o[7],
                ],
                'filename' => [
                    3 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    6 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    3 => 977,
                    6 => 977,
                ],
                'method' => [
                    3 => 'Annotation',
                    6 => 'Annotation',
                ],
                'class' => [
                    3 => 'DocParser',
                    6 => 'DocParser',
                ],
                'namespace' => [
                    3 => 'Doctrine\\Common\\Annotations',
                    6 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    3 => [
                        $o[2],
                    ],
                    6 => [
                        $o[5],
                    ],
                ],
                'ref' => [
                    5 => '#/components/parameters/id',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[5],
        ],
        []
    );
},
76 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Put'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Put')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
            clone ($p['OpenApi\\Annotations\\RequestBody'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\RequestBody')),
            clone ($p['OpenApi\\Annotations\\MediaType'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\MediaType')),
            clone ($p['OpenApi\\Annotations\\Schema'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Schema')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\JsonContent'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\JsonContent')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Parameter')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{id}',
                ],
                'methods' => [
                    [
                        'PUT',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
            'stdClass' => [
                'required' => [
                    2 => true,
                ],
                'content' => [
                    2 => [
                        $o[3],
                    ],
                ],
                '_context' => [
                    2 => $o[9],
                    $o[7],
                    $o[5],
                    11 => $o[12],
                    14 => $o[15],
                    17 => $o[18],
                ],
                'mediaType' => [
                    3 => 'application/json',
                ],
                'schema' => [
                    3 => $o[4],
                ],
                'ref' => [
                    4 => '#/components/schemas/ContestProblemPut',
                    14 => '#/components/schemas/ContestProblem',
                    17 => '#/components/parameters/id',
                ],
                'logger' => [
                    5 => $o[6],
                    7 => $o[8],
                    9 => $o[10],
                    12 => $o[13],
                    15 => $o[16],
                    18 => $o[19],
                ],
                'filename' => [
                    5 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    7 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    9 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    12 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    15 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    18 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    5 => 977,
                    7 => 977,
                    9 => 977,
                    12 => 977,
                    15 => 977,
                    18 => 977,
                ],
                'method' => [
                    5 => 'Annotation',
                    7 => 'Annotation',
                    9 => 'Annotation',
                    12 => 'Annotation',
                    15 => 'Annotation',
                    18 => 'Annotation',
                ],
                'class' => [
                    5 => 'DocParser',
                    7 => 'DocParser',
                    9 => 'DocParser',
                    12 => 'DocParser',
                    15 => 'DocParser',
                    18 => 'DocParser',
                ],
                'namespace' => [
                    5 => 'Doctrine\\Common\\Annotations',
                    7 => 'Doctrine\\Common\\Annotations',
                    9 => 'Doctrine\\Common\\Annotations',
                    12 => 'Doctrine\\Common\\Annotations',
                    15 => 'Doctrine\\Common\\Annotations',
                    18 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    5 => [
                        $o[4],
                    ],
                    7 => [
                        $o[3],
                    ],
                    9 => [
                        $o[2],
                    ],
                    12 => [
                        $o[11],
                    ],
                    15 => [
                        $o[14],
                    ],
                    18 => [
                        $o[17],
                    ],
                ],
                'response' => [
                    11 => '200',
                ],
                'description' => [
                    11 => 'Returns the linked problem for this contest',
                ],
                '_unmerged' => [
                    11 => [
                        $o[14],
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[11],
            $o[17],
        ],
        []
    );
},
77 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Get'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Get')),
            clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\JsonContent'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\JsonContent')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Parameter')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Parameter'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{id}',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'stdClass' => [
                'response' => [
                    1 => '200',
                ],
                'description' => [
                    1 => 'Returns the given problem for this contest',
                ],
                '_context' => [
                    1 => $o[2],
                    4 => $o[5],
                    7 => $o[8],
                    10 => $o[11],
                ],
                '_unmerged' => [
                    1 => [
                        $o[4],
                    ],
                ],
                'logger' => [
                    2 => $o[3],
                    5 => $o[6],
                    8 => $o[9],
                    11 => $o[12],
                ],
                'filename' => [
                    2 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    5 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    8 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    11 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    2 => 977,
                    5 => 977,
                    8 => 977,
                    11 => 977,
                ],
                'method' => [
                    2 => 'Annotation',
                    5 => 'Annotation',
                    8 => 'Annotation',
                    11 => 'Annotation',
                ],
                'class' => [
                    2 => 'DocParser',
                    5 => 'DocParser',
                    8 => 'DocParser',
                    11 => 'DocParser',
                ],
                'namespace' => [
                    2 => 'Doctrine\\Common\\Annotations',
                    5 => 'Doctrine\\Common\\Annotations',
                    8 => 'Doctrine\\Common\\Annotations',
                    11 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    2 => [
                        $o[1],
                    ],
                    5 => [
                        $o[4],
                    ],
                    8 => [
                        $o[7],
                    ],
                    11 => [
                        $o[10],
                    ],
                ],
                'ref' => [
                    4 => '#/components/schemas/ContestProblem',
                    7 => '#/components/parameters/id',
                    10 => '#/components/parameters/strict',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[7],
            $o[10],
        ],
        []
    );
},
78 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Route')),
            clone ($p['OpenApi\\Annotations\\Tag'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Tag')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Parameter')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Response'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Response'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/contests/{cid}/runs',
                ],
            ],
            'stdClass' => [
                'name' => [
                    1 => 'Runs',
                ],
                '_context' => [
                    1 => $o[2],
                    4 => $o[5],
                    7 => $o[8],
                    10 => $o[11],
                    13 => $o[14],
                ],
                'logger' => [
                    2 => $o[3],
                    5 => $o[6],
                    8 => $o[9],
                    11 => $o[12],
                    14 => $o[15],
                ],
                'filename' => [
                    2 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    5 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    8 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    11 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    14 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    2 => 977,
                    5 => 977,
                    8 => 977,
                    11 => 977,
                    14 => 977,
                ],
                'method' => [
                    2 => 'Annotation',
                    5 => 'Annotation',
                    8 => 'Annotation',
                    11 => 'Annotation',
                    14 => 'Annotation',
                ],
                'class' => [
                    2 => 'DocParser',
                    5 => 'DocParser',
                    8 => 'DocParser',
                    11 => 'DocParser',
                    14 => 'DocParser',
                ],
                'namespace' => [
                    2 => 'Doctrine\\Common\\Annotations',
                    5 => 'Doctrine\\Common\\Annotations',
                    8 => 'Doctrine\\Common\\Annotations',
                    11 => 'Doctrine\\Common\\Annotations',
                    14 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    2 => [
                        $o[1],
                    ],
                    5 => [
                        $o[4],
                    ],
                    8 => [
                        $o[7],
                    ],
                    11 => [
                        $o[10],
                    ],
                    14 => [
                        $o[13],
                    ],
                ],
                'ref' => [
                    4 => '#/components/parameters/cid',
                    7 => '#/components/responses/NotFound',
                    10 => '#/components/responses/Unauthorized',
                    13 => '#/components/responses/InvalidResponse',
                ],
                'response' => [
                    7 => '404',
                    10 => '401',
                    13 => '400',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[4],
            $o[7],
            $o[10],
            $o[13],
        ],
        []
    );
},
79 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Security'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Security')),
            clone ($p['FOS\\RestBundle\\Controller\\Annotations\\Get'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Get')),
            clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\JsonContent'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\JsonContent')),
            clone ($p['OpenApi\\Annotations\\Items'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Items')),
            clone ($p['OpenApi\\Annotations\\Schema'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Schema')),
            clone ($p['Nelmio\\ApiDocBundle\\Annotation\\Model'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Nelmio\\ApiDocBundle\\Annotation\\Model')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Schema'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Parameter')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Parameter'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Parameter'],
            clone $p['OpenApi\\Annotations\\Schema'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Parameter'],
            clone $p['OpenApi\\Annotations\\Schema'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Parameter'],
            clone $p['OpenApi\\Annotations\\Schema'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Parameter'],
            clone $p['OpenApi\\Annotations\\Schema'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Security' => [
                'expression' => [
                    'is_granted(\'ROLE_JURY\') or is_granted(\'ROLE_JUDGEHOST\') or is_granted(\'ROLE_API_READER\')',
                ],
            ],
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    1 => '',
                ],
                'methods' => [
                    1 => [
                        'GET',
                    ],
                ],
            ],
            'stdClass' => [
                'response' => [
                    2 => '200',
                ],
                'description' => [
                    2 => 'Returns all the runs for this contest',
                    26 => 'Only show runs starting from this ID',
                    32 => 'Only show runs until this ID',
                    38 => 'Only show runs for this judgement',
                    44 => 'Limit the number of returned runs to this amount',
                ],
                '_context' => [
                    2 => $o[3],
                    5 => $o[18],
                    $o[16],
                    $o[11],
                    $o[9],
                    13 => $o[14],
                    20 => $o[21],
                    23 => $o[24],
                    26 => $o[30],
                    $o[28],
                    32 => $o[36],
                    $o[34],
                    38 => $o[42],
                    $o[40],
                    44 => $o[48],
                    $o[46],
                ],
                '_unmerged' => [
                    2 => [
                        $o[5],
                    ],
                ],
                'logger' => [
                    3 => $o[4],
                    9 => $o[10],
                    11 => $o[12],
                    14 => $o[15],
                    16 => $o[17],
                    18 => $o[19],
                    21 => $o[22],
                    24 => $o[25],
                    28 => $o[29],
                    30 => $o[31],
                    34 => $o[35],
                    36 => $o[37],
                    40 => $o[41],
                    42 => $o[43],
                    46 => $o[47],
                    48 => $o[49],
                ],
                'filename' => [
                    3 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    9 => '/opt/domjudge/domserver/lib/vendor/nelmio/api-doc-bundle/Annotation/Model.php',
                    11 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    14 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    16 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    18 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    21 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    24 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    28 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    30 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    34 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    36 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    40 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    42 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    46 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    48 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    3 => 977,
                    9 => 66,
                    11 => 977,
                    14 => 977,
                    16 => 977,
                    18 => 977,
                    21 => 977,
                    24 => 977,
                    28 => 977,
                    30 => 977,
                    34 => 977,
                    36 => 977,
                    40 => 977,
                    42 => 977,
                    46 => 977,
                    48 => 977,
                ],
                'method' => [
                    3 => 'Annotation',
                    9 => '__construct',
                    11 => 'Annotation',
                    14 => 'Annotation',
                    16 => 'Annotation',
                    18 => 'Annotation',
                    21 => 'Annotation',
                    24 => 'Annotation',
                    28 => 'Annotation',
                    30 => 'Annotation',
                    34 => 'Annotation',
                    36 => 'Annotation',
                    40 => 'Annotation',
                    42 => 'Annotation',
                    46 => 'Annotation',
                    48 => 'Annotation',
                ],
                'class' => [
                    3 => 'DocParser',
                    9 => 'Model',
                    11 => 'DocParser',
                    14 => 'DocParser',
                    16 => 'DocParser',
                    18 => 'DocParser',
                    21 => 'DocParser',
                    24 => 'DocParser',
                    28 => 'DocParser',
                    30 => 'DocParser',
                    34 => 'DocParser',
                    36 => 'DocParser',
                    40 => 'DocParser',
                    42 => 'DocParser',
                    46 => 'DocParser',
                    48 => 'DocParser',
                ],
                'namespace' => [
                    3 => 'Doctrine\\Common\\Annotations',
                    9 => 'Nelmio\\ApiDocBundle\\Annotation',
                    11 => 'Doctrine\\Common\\Annotations',
                    14 => 'Doctrine\\Common\\Annotations',
                    16 => 'Doctrine\\Common\\Annotations',
                    18 => 'Doctrine\\Common\\Annotations',
                    21 => 'Doctrine\\Common\\Annotations',
                    24 => 'Doctrine\\Common\\Annotations',
                    28 => 'Doctrine\\Common\\Annotations',
                    30 => 'Doctrine\\Common\\Annotations',
                    34 => 'Doctrine\\Common\\Annotations',
                    36 => 'Doctrine\\Common\\Annotations',
                    40 => 'Doctrine\\Common\\Annotations',
                    42 => 'Doctrine\\Common\\Annotations',
                    46 => 'Doctrine\\Common\\Annotations',
                    48 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    3 => [
                        $o[2],
                    ],
                    9 => [
                        $o[8],
                    ],
                    11 => [
                        $o[7],
                    ],
                    14 => [
                        $o[13],
                    ],
                    16 => [
                        $o[6],
                    ],
                    18 => [
                        $o[5],
                    ],
                    21 => [
                        $o[20],
                    ],
                    24 => [
                        $o[23],
                    ],
                    28 => [
                        $o[27],
                    ],
                    30 => [
                        $o[26],
                    ],
                    34 => [
                        $o[33],
                    ],
                    36 => [
                        $o[32],
                    ],
                    40 => [
                        $o[39],
                    ],
                    42 => [
                        $o[38],
                    ],
                    46 => [
                        $o[45],
                    ],
                    48 => [
                        $o[44],
                    ],
                ],
                'type' => [
                    5 => 'array',
                    8 => 'App\\Entity\\JudgingRun',
                    27 => 'string',
                    33 => 'string',
                    39 => 'string',
                    45 => 'integer',
                ],
                'items' => [
                    5 => $o[6],
                ],
                'allOf' => [
                    6 => [
                        $o[7],
                        $o[13],
                    ],
                ],
                'ref' => [
                    7 => $o[8],
                    13 => '#/components/schemas/RunExtraFields',
                    20 => '#/components/parameters/idlist',
                    23 => '#/components/parameters/strict',
                ],
                'name' => [
                    26 => 'first_id',
                    32 => 'last_id',
                    38 => 'judging_id',
                    44 => 'limit',
                ],
                'in' => [
                    26 => 'query',
                    32 => 'query',
                    38 => 'query',
                    44 => 'query',
                ],
                'schema' => [
                    26 => $o[27],
                    32 => $o[33],
                    38 => $o[39],
                    44 => $o[45],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[20],
            $o[23],
            $o[26],
            $o[32],
            $o[38],
            $o[44],
        ],
        []
    );
},
80 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Security'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Security')),
            clone ($p['FOS\\RestBundle\\Controller\\Annotations\\Get'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Get')),
            clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\JsonContent'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\JsonContent')),
            clone ($p['OpenApi\\Annotations\\Schema'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Schema')),
            clone ($p['Nelmio\\ApiDocBundle\\Annotation\\Model'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Nelmio\\ApiDocBundle\\Annotation\\Model')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Schema'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Parameter')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Parameter'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Security' => [
                'expression' => [
                    'is_granted(\'ROLE_JURY\') or is_granted(\'ROLE_JUDGEHOST\') or is_granted(\'ROLE_API_READER\')',
                ],
            ],
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    1 => '/{id}',
                ],
                'methods' => [
                    1 => [
                        'GET',
                    ],
                ],
            ],
            'stdClass' => [
                'response' => [
                    2 => '200',
                ],
                'description' => [
                    2 => 'Returns the given run for this contest',
                ],
                '_context' => [
                    2 => $o[3],
                    5 => $o[15],
                    $o[10],
                    $o[8],
                    12 => $o[13],
                    17 => $o[18],
                    20 => $o[21],
                ],
                '_unmerged' => [
                    2 => [
                        $o[5],
                    ],
                ],
                'logger' => [
                    3 => $o[4],
                    8 => $o[9],
                    10 => $o[11],
                    13 => $o[14],
                    15 => $o[16],
                    18 => $o[19],
                    21 => $o[22],
                ],
                'filename' => [
                    3 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    8 => '/opt/domjudge/domserver/lib/vendor/nelmio/api-doc-bundle/Annotation/Model.php',
                    10 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    13 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    15 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    18 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    21 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    3 => 977,
                    8 => 66,
                    10 => 977,
                    13 => 977,
                    15 => 977,
                    18 => 977,
                    21 => 977,
                ],
                'method' => [
                    3 => 'Annotation',
                    8 => '__construct',
                    10 => 'Annotation',
                    13 => 'Annotation',
                    15 => 'Annotation',
                    18 => 'Annotation',
                    21 => 'Annotation',
                ],
                'class' => [
                    3 => 'DocParser',
                    8 => 'Model',
                    10 => 'DocParser',
                    13 => 'DocParser',
                    15 => 'DocParser',
                    18 => 'DocParser',
                    21 => 'DocParser',
                ],
                'namespace' => [
                    3 => 'Doctrine\\Common\\Annotations',
                    8 => 'Nelmio\\ApiDocBundle\\Annotation',
                    10 => 'Doctrine\\Common\\Annotations',
                    13 => 'Doctrine\\Common\\Annotations',
                    15 => 'Doctrine\\Common\\Annotations',
                    18 => 'Doctrine\\Common\\Annotations',
                    21 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    3 => [
                        $o[2],
                    ],
                    8 => [
                        $o[7],
                    ],
                    10 => [
                        $o[6],
                    ],
                    13 => [
                        $o[12],
                    ],
                    15 => [
                        $o[5],
                    ],
                    18 => [
                        $o[17],
                    ],
                    21 => [
                        $o[20],
                    ],
                ],
                'allOf' => [
                    5 => [
                        $o[6],
                        $o[12],
                    ],
                ],
                'ref' => [
                    6 => $o[7],
                    12 => '#/components/schemas/RunExtraFields',
                    17 => '#/components/parameters/id',
                    20 => '#/components/parameters/strict',
                ],
                'type' => [
                    7 => 'App\\Entity\\JudgingRun',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[17],
            $o[20],
        ],
        []
    );
},
81 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Route')),
            clone ($p['OpenApi\\Annotations\\Tag'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Tag')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Parameter')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Response'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Response'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/contests/{cid}/scoreboard',
                ],
            ],
            'stdClass' => [
                'name' => [
                    1 => 'Scoreboard',
                ],
                '_context' => [
                    1 => $o[2],
                    4 => $o[5],
                    7 => $o[8],
                    10 => $o[11],
                    13 => $o[14],
                ],
                'logger' => [
                    2 => $o[3],
                    5 => $o[6],
                    8 => $o[9],
                    11 => $o[12],
                    14 => $o[15],
                ],
                'filename' => [
                    2 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    5 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    8 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    11 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    14 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    2 => 977,
                    5 => 977,
                    8 => 977,
                    11 => 977,
                    14 => 977,
                ],
                'method' => [
                    2 => 'Annotation',
                    5 => 'Annotation',
                    8 => 'Annotation',
                    11 => 'Annotation',
                    14 => 'Annotation',
                ],
                'class' => [
                    2 => 'DocParser',
                    5 => 'DocParser',
                    8 => 'DocParser',
                    11 => 'DocParser',
                    14 => 'DocParser',
                ],
                'namespace' => [
                    2 => 'Doctrine\\Common\\Annotations',
                    5 => 'Doctrine\\Common\\Annotations',
                    8 => 'Doctrine\\Common\\Annotations',
                    11 => 'Doctrine\\Common\\Annotations',
                    14 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    2 => [
                        $o[1],
                    ],
                    5 => [
                        $o[4],
                    ],
                    8 => [
                        $o[7],
                    ],
                    11 => [
                        $o[10],
                    ],
                    14 => [
                        $o[13],
                    ],
                ],
                'ref' => [
                    4 => '#/components/parameters/cid',
                    7 => '#/components/responses/NotFound',
                    10 => '#/components/responses/Unauthorized',
                    13 => '#/components/responses/InvalidResponse',
                ],
                'response' => [
                    7 => '404',
                    10 => '401',
                    13 => '400',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[4],
            $o[7],
            $o[10],
            $o[13],
        ],
        []
    );
},
82 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Get'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Get')),
            clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\JsonContent'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\JsonContent')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Parameter')),
            clone ($p['OpenApi\\Annotations\\Schema'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Schema')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Parameter'],
            clone $p['OpenApi\\Annotations\\Schema'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Parameter'],
            clone $p['OpenApi\\Annotations\\Schema'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Parameter'],
            clone $p['OpenApi\\Annotations\\Schema'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Parameter'],
            clone $p['OpenApi\\Annotations\\Schema'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Parameter'],
            clone $p['OpenApi\\Annotations\\Schema'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'stdClass' => [
                'response' => [
                    1 => '200',
                ],
                'description' => [
                    1 => 'Returns the scoreboard',
                    7 => 'Also show invisible teams. Requires jury privileges',
                    13 => 'Get the scoreboard for only this category',
                    19 => 'Get the scoreboard for only this country (in ISO 3166-1 alpha-3 format)',
                    25 => 'Get the scoreboard for only this affiliation',
                    31 => 'Show publicly visible scoreboard, even for users with more permissions',
                    37 => 'The sort order to get the scoreboard for. If not given, uses the lowest sortorder',
                ],
                '_context' => [
                    1 => $o[2],
                    4 => $o[5],
                    7 => $o[11],
                    $o[9],
                    13 => $o[17],
                    $o[15],
                    19 => $o[23],
                    $o[21],
                    25 => $o[29],
                    $o[27],
                    31 => $o[35],
                    $o[33],
                    37 => $o[41],
                    $o[39],
                ],
                '_unmerged' => [
                    1 => [
                        $o[4],
                    ],
                ],
                'logger' => [
                    2 => $o[3],
                    5 => $o[6],
                    9 => $o[10],
                    11 => $o[12],
                    15 => $o[16],
                    17 => $o[18],
                    21 => $o[22],
                    23 => $o[24],
                    27 => $o[28],
                    29 => $o[30],
                    33 => $o[34],
                    35 => $o[36],
                    39 => $o[40],
                    41 => $o[42],
                ],
                'filename' => [
                    2 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    5 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    9 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    11 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    15 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    17 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    21 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    23 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    27 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    29 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    33 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    35 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    39 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    41 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    2 => 977,
                    5 => 977,
                    9 => 977,
                    11 => 977,
                    15 => 977,
                    17 => 977,
                    21 => 977,
                    23 => 977,
                    27 => 977,
                    29 => 977,
                    33 => 977,
                    35 => 977,
                    39 => 977,
                    41 => 977,
                ],
                'method' => [
                    2 => 'Annotation',
                    5 => 'Annotation',
                    9 => 'Annotation',
                    11 => 'Annotation',
                    15 => 'Annotation',
                    17 => 'Annotation',
                    21 => 'Annotation',
                    23 => 'Annotation',
                    27 => 'Annotation',
                    29 => 'Annotation',
                    33 => 'Annotation',
                    35 => 'Annotation',
                    39 => 'Annotation',
                    41 => 'Annotation',
                ],
                'class' => [
                    2 => 'DocParser',
                    5 => 'DocParser',
                    9 => 'DocParser',
                    11 => 'DocParser',
                    15 => 'DocParser',
                    17 => 'DocParser',
                    21 => 'DocParser',
                    23 => 'DocParser',
                    27 => 'DocParser',
                    29 => 'DocParser',
                    33 => 'DocParser',
                    35 => 'DocParser',
                    39 => 'DocParser',
                    41 => 'DocParser',
                ],
                'namespace' => [
                    2 => 'Doctrine\\Common\\Annotations',
                    5 => 'Doctrine\\Common\\Annotations',
                    9 => 'Doctrine\\Common\\Annotations',
                    11 => 'Doctrine\\Common\\Annotations',
                    15 => 'Doctrine\\Common\\Annotations',
                    17 => 'Doctrine\\Common\\Annotations',
                    21 => 'Doctrine\\Common\\Annotations',
                    23 => 'Doctrine\\Common\\Annotations',
                    27 => 'Doctrine\\Common\\Annotations',
                    29 => 'Doctrine\\Common\\Annotations',
                    33 => 'Doctrine\\Common\\Annotations',
                    35 => 'Doctrine\\Common\\Annotations',
                    39 => 'Doctrine\\Common\\Annotations',
                    41 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    2 => [
                        $o[1],
                    ],
                    5 => [
                        $o[4],
                    ],
                    9 => [
                        $o[8],
                    ],
                    11 => [
                        $o[7],
                    ],
                    15 => [
                        $o[14],
                    ],
                    17 => [
                        $o[13],
                    ],
                    21 => [
                        $o[20],
                    ],
                    23 => [
                        $o[19],
                    ],
                    27 => [
                        $o[26],
                    ],
                    29 => [
                        $o[25],
                    ],
                    33 => [
                        $o[32],
                    ],
                    35 => [
                        $o[31],
                    ],
                    39 => [
                        $o[38],
                    ],
                    41 => [
                        $o[37],
                    ],
                ],
                'ref' => [
                    4 => '#/components/schemas/Scoreboard',
                ],
                'name' => [
                    7 => 'allteams',
                    13 => 'category',
                    19 => 'country',
                    25 => 'affiliation',
                    31 => 'public',
                    37 => 'sortorder',
                ],
                'in' => [
                    7 => 'query',
                    13 => 'query',
                    19 => 'query',
                    25 => 'query',
                    31 => 'query',
                    37 => 'query',
                ],
                'schema' => [
                    7 => $o[8],
                    13 => $o[14],
                    19 => $o[20],
                    25 => $o[26],
                    31 => $o[32],
                    37 => $o[38],
                ],
                'type' => [
                    8 => 'boolean',
                    14 => 'integer',
                    20 => 'string',
                    26 => 'integer',
                    32 => 'boolean',
                    38 => 'integer',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[7],
            $o[13],
            $o[19],
            $o[25],
            $o[31],
            $o[37],
        ],
        []
    );
},
83 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Route')),
            clone ($p['OpenApi\\Annotations\\Tag'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Tag')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Parameter')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Response'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Response'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/contests/{cid}/submissions',
                ],
            ],
            'stdClass' => [
                'name' => [
                    1 => 'Submissions',
                ],
                '_context' => [
                    1 => $o[2],
                    4 => $o[5],
                    7 => $o[8],
                    10 => $o[11],
                    13 => $o[14],
                ],
                'logger' => [
                    2 => $o[3],
                    5 => $o[6],
                    8 => $o[9],
                    11 => $o[12],
                    14 => $o[15],
                ],
                'filename' => [
                    2 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    5 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    8 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    11 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    14 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    2 => 977,
                    5 => 977,
                    8 => 977,
                    11 => 977,
                    14 => 977,
                ],
                'method' => [
                    2 => 'Annotation',
                    5 => 'Annotation',
                    8 => 'Annotation',
                    11 => 'Annotation',
                    14 => 'Annotation',
                ],
                'class' => [
                    2 => 'DocParser',
                    5 => 'DocParser',
                    8 => 'DocParser',
                    11 => 'DocParser',
                    14 => 'DocParser',
                ],
                'namespace' => [
                    2 => 'Doctrine\\Common\\Annotations',
                    5 => 'Doctrine\\Common\\Annotations',
                    8 => 'Doctrine\\Common\\Annotations',
                    11 => 'Doctrine\\Common\\Annotations',
                    14 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    2 => [
                        $o[1],
                    ],
                    5 => [
                        $o[4],
                    ],
                    8 => [
                        $o[7],
                    ],
                    11 => [
                        $o[10],
                    ],
                    14 => [
                        $o[13],
                    ],
                ],
                'ref' => [
                    4 => '#/components/parameters/cid',
                    7 => '#/components/responses/NotFound',
                    10 => '#/components/responses/Unauthorized',
                    13 => '#/components/responses/InvalidResponse',
                ],
                'response' => [
                    7 => '404',
                    10 => '401',
                    13 => '400',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[4],
            $o[7],
            $o[10],
            $o[13],
        ],
        []
    );
},
84 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Get'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Get')),
            clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\JsonContent'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\JsonContent')),
            clone ($p['OpenApi\\Annotations\\Items'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Items')),
            clone ($p['OpenApi\\Annotations\\Schema'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Schema')),
            clone ($p['Nelmio\\ApiDocBundle\\Annotation\\Model'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Nelmio\\ApiDocBundle\\Annotation\\Model')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Schema'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Parameter')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Parameter'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Parameter'],
            clone $p['OpenApi\\Annotations\\Schema'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'stdClass' => [
                'response' => [
                    1 => '200',
                ],
                'description' => [
                    1 => 'Returns all the submissions for this contest',
                    25 => 'Only show submissions for the given language',
                ],
                '_context' => [
                    1 => $o[2],
                    4 => $o[17],
                    $o[15],
                    $o[10],
                    $o[8],
                    12 => $o[13],
                    19 => $o[20],
                    22 => $o[23],
                    25 => $o[29],
                    $o[27],
                ],
                '_unmerged' => [
                    1 => [
                        $o[4],
                    ],
                ],
                'logger' => [
                    2 => $o[3],
                    8 => $o[9],
                    10 => $o[11],
                    13 => $o[14],
                    15 => $o[16],
                    17 => $o[18],
                    20 => $o[21],
                    23 => $o[24],
                    27 => $o[28],
                    29 => $o[30],
                ],
                'filename' => [
                    2 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    8 => '/opt/domjudge/domserver/lib/vendor/nelmio/api-doc-bundle/Annotation/Model.php',
                    10 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    13 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    15 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    17 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    20 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    23 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    27 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    29 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    2 => 977,
                    8 => 66,
                    10 => 977,
                    13 => 977,
                    15 => 977,
                    17 => 977,
                    20 => 977,
                    23 => 977,
                    27 => 977,
                    29 => 977,
                ],
                'method' => [
                    2 => 'Annotation',
                    8 => '__construct',
                    10 => 'Annotation',
                    13 => 'Annotation',
                    15 => 'Annotation',
                    17 => 'Annotation',
                    20 => 'Annotation',
                    23 => 'Annotation',
                    27 => 'Annotation',
                    29 => 'Annotation',
                ],
                'class' => [
                    2 => 'DocParser',
                    8 => 'Model',
                    10 => 'DocParser',
                    13 => 'DocParser',
                    15 => 'DocParser',
                    17 => 'DocParser',
                    20 => 'DocParser',
                    23 => 'DocParser',
                    27 => 'DocParser',
                    29 => 'DocParser',
                ],
                'namespace' => [
                    2 => 'Doctrine\\Common\\Annotations',
                    8 => 'Nelmio\\ApiDocBundle\\Annotation',
                    10 => 'Doctrine\\Common\\Annotations',
                    13 => 'Doctrine\\Common\\Annotations',
                    15 => 'Doctrine\\Common\\Annotations',
                    17 => 'Doctrine\\Common\\Annotations',
                    20 => 'Doctrine\\Common\\Annotations',
                    23 => 'Doctrine\\Common\\Annotations',
                    27 => 'Doctrine\\Common\\Annotations',
                    29 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    2 => [
                        $o[1],
                    ],
                    8 => [
                        $o[7],
                    ],
                    10 => [
                        $o[6],
                    ],
                    13 => [
                        $o[12],
                    ],
                    15 => [
                        $o[5],
                    ],
                    17 => [
                        $o[4],
                    ],
                    20 => [
                        $o[19],
                    ],
                    23 => [
                        $o[22],
                    ],
                    27 => [
                        $o[26],
                    ],
                    29 => [
                        $o[25],
                    ],
                ],
                'type' => [
                    4 => 'array',
                    7 => 'App\\Entity\\Submission',
                    26 => 'string',
                ],
                'items' => [
                    4 => $o[5],
                ],
                'allOf' => [
                    5 => [
                        $o[6],
                        $o[12],
                    ],
                ],
                'ref' => [
                    6 => $o[7],
                    12 => '#/components/schemas/Files',
                    19 => '#/components/parameters/idlist',
                    22 => '#/components/parameters/strict',
                ],
                'name' => [
                    25 => 'language_id',
                ],
                'in' => [
                    25 => 'query',
                ],
                'schema' => [
                    25 => $o[26],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[19],
            $o[22],
            $o[25],
        ],
        []
    );
},
85 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Get'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Get')),
            clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\JsonContent'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\JsonContent')),
            clone ($p['OpenApi\\Annotations\\Schema'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Schema')),
            clone ($p['Nelmio\\ApiDocBundle\\Annotation\\Model'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Nelmio\\ApiDocBundle\\Annotation\\Model')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Schema'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Parameter')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Parameter'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{id}',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'stdClass' => [
                'response' => [
                    1 => '200',
                ],
                'description' => [
                    1 => 'Returns the given submission for this contest',
                ],
                '_context' => [
                    1 => $o[2],
                    4 => $o[14],
                    $o[9],
                    $o[7],
                    11 => $o[12],
                    16 => $o[17],
                    19 => $o[20],
                ],
                '_unmerged' => [
                    1 => [
                        $o[4],
                    ],
                ],
                'logger' => [
                    2 => $o[3],
                    7 => $o[8],
                    9 => $o[10],
                    12 => $o[13],
                    14 => $o[15],
                    17 => $o[18],
                    20 => $o[21],
                ],
                'filename' => [
                    2 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    7 => '/opt/domjudge/domserver/lib/vendor/nelmio/api-doc-bundle/Annotation/Model.php',
                    9 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    12 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    14 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    17 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    20 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    2 => 977,
                    7 => 66,
                    9 => 977,
                    12 => 977,
                    14 => 977,
                    17 => 977,
                    20 => 977,
                ],
                'method' => [
                    2 => 'Annotation',
                    7 => '__construct',
                    9 => 'Annotation',
                    12 => 'Annotation',
                    14 => 'Annotation',
                    17 => 'Annotation',
                    20 => 'Annotation',
                ],
                'class' => [
                    2 => 'DocParser',
                    7 => 'Model',
                    9 => 'DocParser',
                    12 => 'DocParser',
                    14 => 'DocParser',
                    17 => 'DocParser',
                    20 => 'DocParser',
                ],
                'namespace' => [
                    2 => 'Doctrine\\Common\\Annotations',
                    7 => 'Nelmio\\ApiDocBundle\\Annotation',
                    9 => 'Doctrine\\Common\\Annotations',
                    12 => 'Doctrine\\Common\\Annotations',
                    14 => 'Doctrine\\Common\\Annotations',
                    17 => 'Doctrine\\Common\\Annotations',
                    20 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    2 => [
                        $o[1],
                    ],
                    7 => [
                        $o[6],
                    ],
                    9 => [
                        $o[5],
                    ],
                    12 => [
                        $o[11],
                    ],
                    14 => [
                        $o[4],
                    ],
                    17 => [
                        $o[16],
                    ],
                    20 => [
                        $o[19],
                    ],
                ],
                'allOf' => [
                    4 => [
                        $o[5],
                        $o[11],
                    ],
                ],
                'ref' => [
                    5 => $o[6],
                    11 => '#/components/schemas/Files',
                    16 => '#/components/parameters/id',
                    19 => '#/components/parameters/strict',
                ],
                'type' => [
                    6 => 'App\\Entity\\Submission',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[16],
            $o[19],
        ],
        []
    );
},
86 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Post'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Post')),
            clone $p['FOS\\RestBundle\\Controller\\Annotations\\Post'],
            clone ($p['FOS\\RestBundle\\Controller\\Annotations\\Put'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Put')),
            clone ($p['OpenApi\\Annotations\\Post'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Post')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\Put'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Put')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Security'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Security')),
            clone ($p['OpenApi\\Annotations\\RequestBody'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\RequestBody')),
            clone ($p['OpenApi\\Annotations\\MediaType'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\MediaType')),
            clone ($p['OpenApi\\Annotations\\Schema'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Schema')),
            clone ($p['OpenApi\\Annotations\\Property'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Property')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone ($p['OpenApi\\Annotations\\Items'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Items')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\MediaType'],
            clone $p['OpenApi\\Annotations\\Schema'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Annotations\\Items'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\JsonContent'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\JsonContent')),
            clone $p['OpenApi\\Annotations\\Schema'],
            clone ($p['Nelmio\\ApiDocBundle\\Annotation\\Model'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Nelmio\\ApiDocBundle\\Annotation\\Model')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Schema'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '',
                    '/',
                    '/{id}',
                ],
                'methods' => [
                    [
                        'POST',
                    ],
                    [
                        'POST',
                    ],
                    [
                        'PUT',
                    ],
                ],
            ],
            'stdClass' => [
                '_context' => [
                    3 => $o[4],
                    6 => $o[7],
                    10 => $o[65],
                    $o[30],
                    $o[28],
                    $o[14],
                    16 => $o[17],
                    19 => $o[23],
                    $o[21],
                    25 => $o[26],
                    32 => $o[63],
                    $o[61],
                    $o[35],
                    37 => $o[38],
                    40 => $o[41],
                    43 => $o[44],
                    46 => $o[47],
                    49 => $o[56],
                    $o[54],
                    $o[52],
                    58 => $o[59],
                    67 => $o[68],
                    70 => $o[80],
                    $o[75],
                    $o[73],
                    77 => $o[78],
                ],
                'logger' => [
                    4 => $o[5],
                    7 => $o[8],
                    14 => $o[15],
                    17 => $o[18],
                    21 => $o[22],
                    23 => $o[24],
                    26 => $o[27],
                    28 => $o[29],
                    30 => $o[31],
                    35 => $o[36],
                    38 => $o[39],
                    41 => $o[42],
                    44 => $o[45],
                    47 => $o[48],
                    52 => $o[53],
                    54 => $o[55],
                    56 => $o[57],
                    59 => $o[60],
                    61 => $o[62],
                    63 => $o[64],
                    65 => $o[66],
                    68 => $o[69],
                    73 => $o[74],
                    75 => $o[76],
                    78 => $o[79],
                    80 => $o[81],
                ],
                'filename' => [
                    4 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    7 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    14 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    17 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    21 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    23 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    26 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    28 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    30 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    35 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    38 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    41 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    44 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    47 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    52 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    54 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    56 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    59 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    61 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    63 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    65 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    68 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    73 => '/opt/domjudge/domserver/lib/vendor/nelmio/api-doc-bundle/Annotation/Model.php',
                    75 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    78 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    80 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    4 => 977,
                    7 => 977,
                    14 => 977,
                    17 => 977,
                    21 => 977,
                    23 => 977,
                    26 => 977,
                    28 => 977,
                    30 => 977,
                    35 => 977,
                    38 => 977,
                    41 => 977,
                    44 => 977,
                    47 => 977,
                    52 => 977,
                    54 => 977,
                    56 => 977,
                    59 => 977,
                    61 => 977,
                    63 => 977,
                    65 => 977,
                    68 => 977,
                    73 => 66,
                    75 => 977,
                    78 => 977,
                    80 => 977,
                ],
                'method' => [
                    4 => 'Annotation',
                    7 => 'Annotation',
                    14 => 'Annotation',
                    17 => 'Annotation',
                    21 => 'Annotation',
                    23 => 'Annotation',
                    26 => 'Annotation',
                    28 => 'Annotation',
                    30 => 'Annotation',
                    35 => 'Annotation',
                    38 => 'Annotation',
                    41 => 'Annotation',
                    44 => 'Annotation',
                    47 => 'Annotation',
                    52 => 'Annotation',
                    54 => 'Annotation',
                    56 => 'Annotation',
                    59 => 'Annotation',
                    61 => 'Annotation',
                    63 => 'Annotation',
                    65 => 'Annotation',
                    68 => 'Annotation',
                    73 => '__construct',
                    75 => 'Annotation',
                    78 => 'Annotation',
                    80 => 'Annotation',
                ],
                'class' => [
                    4 => 'DocParser',
                    7 => 'DocParser',
                    14 => 'DocParser',
                    17 => 'DocParser',
                    21 => 'DocParser',
                    23 => 'DocParser',
                    26 => 'DocParser',
                    28 => 'DocParser',
                    30 => 'DocParser',
                    35 => 'DocParser',
                    38 => 'DocParser',
                    41 => 'DocParser',
                    44 => 'DocParser',
                    47 => 'DocParser',
                    52 => 'DocParser',
                    54 => 'DocParser',
                    56 => 'DocParser',
                    59 => 'DocParser',
                    61 => 'DocParser',
                    63 => 'DocParser',
                    65 => 'DocParser',
                    68 => 'DocParser',
                    73 => 'Model',
                    75 => 'DocParser',
                    78 => 'DocParser',
                    80 => 'DocParser',
                ],
                'namespace' => [
                    4 => 'Doctrine\\Common\\Annotations',
                    7 => 'Doctrine\\Common\\Annotations',
                    14 => 'Doctrine\\Common\\Annotations',
                    17 => 'Doctrine\\Common\\Annotations',
                    21 => 'Doctrine\\Common\\Annotations',
                    23 => 'Doctrine\\Common\\Annotations',
                    26 => 'Doctrine\\Common\\Annotations',
                    28 => 'Doctrine\\Common\\Annotations',
                    30 => 'Doctrine\\Common\\Annotations',
                    35 => 'Doctrine\\Common\\Annotations',
                    38 => 'Doctrine\\Common\\Annotations',
                    41 => 'Doctrine\\Common\\Annotations',
                    44 => 'Doctrine\\Common\\Annotations',
                    47 => 'Doctrine\\Common\\Annotations',
                    52 => 'Doctrine\\Common\\Annotations',
                    54 => 'Doctrine\\Common\\Annotations',
                    56 => 'Doctrine\\Common\\Annotations',
                    59 => 'Doctrine\\Common\\Annotations',
                    61 => 'Doctrine\\Common\\Annotations',
                    63 => 'Doctrine\\Common\\Annotations',
                    65 => 'Doctrine\\Common\\Annotations',
                    68 => 'Doctrine\\Common\\Annotations',
                    73 => 'Nelmio\\ApiDocBundle\\Annotation',
                    75 => 'Doctrine\\Common\\Annotations',
                    78 => 'Doctrine\\Common\\Annotations',
                    80 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    4 => [
                        $o[3],
                    ],
                    7 => [
                        $o[6],
                    ],
                    14 => [
                        $o[13],
                    ],
                    17 => [
                        $o[16],
                    ],
                    21 => [
                        $o[20],
                    ],
                    23 => [
                        $o[19],
                    ],
                    26 => [
                        $o[25],
                    ],
                    28 => [
                        $o[12],
                    ],
                    30 => [
                        $o[11],
                    ],
                    35 => [
                        $o[34],
                    ],
                    38 => [
                        $o[37],
                    ],
                    41 => [
                        $o[40],
                    ],
                    44 => [
                        $o[43],
                    ],
                    47 => [
                        $o[46],
                    ],
                    52 => [
                        $o[51],
                    ],
                    54 => [
                        $o[50],
                    ],
                    56 => [
                        $o[49],
                    ],
                    59 => [
                        $o[58],
                    ],
                    61 => [
                        $o[33],
                    ],
                    63 => [
                        $o[32],
                    ],
                    65 => [
                        $o[10],
                    ],
                    68 => [
                        $o[67],
                    ],
                    73 => [
                        $o[72],
                    ],
                    75 => [
                        $o[71],
                    ],
                    78 => [
                        $o[77],
                    ],
                    80 => [
                        $o[70],
                    ],
                ],
                'required' => [
                    10 => true,
                    12 => [
                        'problem',
                        'language',
                        'code',
                    ],
                    33 => [
                        'problem_id',
                        'language_id',
                        'files',
                    ],
                    50 => [
                        'data',
                    ],
                ],
                'content' => [
                    10 => [
                        $o[11],
                        $o[32],
                    ],
                ],
                'mediaType' => [
                    11 => 'multipart/form-data',
                    32 => 'application/json',
                ],
                'schema' => [
                    11 => $o[12],
                    32 => $o[33],
                ],
                'properties' => [
                    12 => [
                        $o[13],
                        $o[16],
                        $o[19],
                        $o[25],
                    ],
                    33 => [
                        $o[34],
                        $o[37],
                        $o[40],
                        $o[43],
                        $o[46],
                        $o[49],
                        $o[58],
                    ],
                    50 => [
                        $o[51],
                    ],
                ],
                'property' => [
                    13 => 'problem',
                    16 => 'language',
                    19 => 'code',
                    25 => 'entry_point',
                    34 => 'problem_id',
                    37 => 'language_id',
                    40 => 'team_id',
                    43 => 'time',
                    46 => 'id',
                    49 => 'files',
                    51 => 'data',
                    58 => 'entry_point',
                ],
                'description' => [
                    13 => 'The problem to submit a solution for',
                    16 => 'The language to submit a solution in',
                    19 => 'The file(s) to submit',
                    25 => 'The entry point for the submission. Required for languages requiring an entry point',
                    34 => 'The problem ID to submit a solution for',
                    37 => 'The language to submit a solution in',
                    40 => 'The team to submit a solution for. Only used when adding a submission as admin',
                    43 => 'The time to use for the submission. Only used when adding a submission as admin',
                    46 => 'The ID to use for the submission. Only used when adding a submission as admin and only allowed with PUT',
                    49 => 'The base64 encoded ZIP file to submit',
                    51 => 'The base64 encoded ZIP archive',
                    58 => 'The entry point for the submission. Required for languages requiring an entry point',
                    67 => 'When submitting was successful',
                ],
                'type' => [
                    13 => 'string',
                    16 => 'string',
                    19 => 'array',
                    'string',
                    25 => 'string',
                    34 => 'string',
                    37 => 'string',
                    40 => 'string',
                    43 => 'string',
                    46 => 'string',
                    49 => 'array',
                    'object',
                    'string',
                    58 => 'string',
                    72 => 'App\\Entity\\Submission',
                ],
                'items' => [
                    19 => $o[20],
                    49 => $o[50],
                ],
                'format' => [
                    20 => 'binary',
                    43 => 'date-time',
                ],
                'maxItems' => [
                    49 => 1,
                ],
                'minItems' => [
                    49 => 1,
                ],
                'response' => [
                    67 => '200',
                ],
                '_unmerged' => [
                    67 => [
                        $o[70],
                    ],
                ],
                'allOf' => [
                    70 => [
                        $o[71],
                        $o[77],
                    ],
                ],
                'ref' => [
                    71 => $o[72],
                    77 => '#/components/schemas/Files',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Security' => [
                'expression' => [
                    9 => 'is_granted(\'ROLE_TEAM\') or is_granted(\'ROLE_API_WRITER\')',
                ],
                'message' => [
                    9 => 'You need to have the Team Member role to add a submission',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
            $o[6],
            $o[9],
            $o[10],
            $o[67],
        ],
        []
    );
},
87 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Get'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Get')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
            clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone ($p['OpenApi\\Annotations\\MediaType'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\MediaType')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Response'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Parameter')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{id}/files',
                ],
                'name' => [
                    'submission_files',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_API_SOURCE_READER',
                ],
            ],
            'stdClass' => [
                'response' => [
                    2 => '200',
                    8 => '500',
                ],
                'description' => [
                    2 => 'The files for the submission as a ZIP archive',
                    8 => 'An error occurred while creating the ZIP file',
                ],
                'content' => [
                    2 => [
                        $o[3],
                    ],
                ],
                '_context' => [
                    2 => $o[6],
                    $o[4],
                    8 => $o[9],
                    11 => $o[12],
                ],
                'mediaType' => [
                    3 => 'application/zip',
                ],
                'logger' => [
                    4 => $o[5],
                    6 => $o[7],
                    9 => $o[10],
                    12 => $o[13],
                ],
                'filename' => [
                    4 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    6 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    9 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    12 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    4 => 977,
                    6 => 977,
                    9 => 977,
                    12 => 977,
                ],
                'method' => [
                    4 => 'Annotation',
                    6 => 'Annotation',
                    9 => 'Annotation',
                    12 => 'Annotation',
                ],
                'class' => [
                    4 => 'DocParser',
                    6 => 'DocParser',
                    9 => 'DocParser',
                    12 => 'DocParser',
                ],
                'namespace' => [
                    4 => 'Doctrine\\Common\\Annotations',
                    6 => 'Doctrine\\Common\\Annotations',
                    9 => 'Doctrine\\Common\\Annotations',
                    12 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    4 => [
                        $o[3],
                    ],
                    6 => [
                        $o[2],
                    ],
                    9 => [
                        $o[8],
                    ],
                    12 => [
                        $o[11],
                    ],
                ],
                'ref' => [
                    11 => '#/components/parameters/id',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[8],
            $o[11],
        ],
        []
    );
},
88 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Get'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Get')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Security'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Security')),
            clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\JsonContent'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\JsonContent')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Parameter')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{id}/source-code',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Security' => [
                'expression' => [
                    1 => 'is_granted(\'ROLE_JURY\') or is_granted(\'ROLE_JUDGEHOST\')',
                ],
            ],
            'stdClass' => [
                'response' => [
                    2 => '200',
                ],
                'description' => [
                    2 => 'The files for the submission',
                ],
                '_context' => [
                    2 => $o[3],
                    5 => $o[6],
                    8 => $o[9],
                ],
                '_unmerged' => [
                    2 => [
                        $o[5],
                    ],
                ],
                'logger' => [
                    3 => $o[4],
                    6 => $o[7],
                    9 => $o[10],
                ],
                'filename' => [
                    3 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    6 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    9 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    3 => 977,
                    6 => 977,
                    9 => 977,
                ],
                'method' => [
                    3 => 'Annotation',
                    6 => 'Annotation',
                    9 => 'Annotation',
                ],
                'class' => [
                    3 => 'DocParser',
                    6 => 'DocParser',
                    9 => 'DocParser',
                ],
                'namespace' => [
                    3 => 'Doctrine\\Common\\Annotations',
                    6 => 'Doctrine\\Common\\Annotations',
                    9 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    3 => [
                        $o[2],
                    ],
                    6 => [
                        $o[5],
                    ],
                    9 => [
                        $o[8],
                    ],
                ],
                'ref' => [
                    5 => '#/components/schemas/SourceCodeList',
                    8 => '#/components/parameters/id',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[8],
        ],
        []
    );
},
89 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Route')),
            clone ($p['OpenApi\\Annotations\\Tag'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Tag')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Parameter')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Response'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Response'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/contests/{cid}/teams',
                ],
            ],
            'stdClass' => [
                'name' => [
                    1 => 'Teams',
                ],
                '_context' => [
                    1 => $o[2],
                    4 => $o[5],
                    7 => $o[8],
                    10 => $o[11],
                    13 => $o[14],
                ],
                'logger' => [
                    2 => $o[3],
                    5 => $o[6],
                    8 => $o[9],
                    11 => $o[12],
                    14 => $o[15],
                ],
                'filename' => [
                    2 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    5 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    8 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    11 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    14 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    2 => 977,
                    5 => 977,
                    8 => 977,
                    11 => 977,
                    14 => 977,
                ],
                'method' => [
                    2 => 'Annotation',
                    5 => 'Annotation',
                    8 => 'Annotation',
                    11 => 'Annotation',
                    14 => 'Annotation',
                ],
                'class' => [
                    2 => 'DocParser',
                    5 => 'DocParser',
                    8 => 'DocParser',
                    11 => 'DocParser',
                    14 => 'DocParser',
                ],
                'namespace' => [
                    2 => 'Doctrine\\Common\\Annotations',
                    5 => 'Doctrine\\Common\\Annotations',
                    8 => 'Doctrine\\Common\\Annotations',
                    11 => 'Doctrine\\Common\\Annotations',
                    14 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    2 => [
                        $o[1],
                    ],
                    5 => [
                        $o[4],
                    ],
                    8 => [
                        $o[7],
                    ],
                    11 => [
                        $o[10],
                    ],
                    14 => [
                        $o[13],
                    ],
                ],
                'ref' => [
                    4 => '#/components/parameters/cid',
                    7 => '#/components/responses/NotFound',
                    10 => '#/components/responses/Unauthorized',
                    13 => '#/components/responses/InvalidResponse',
                ],
                'response' => [
                    7 => '404',
                    10 => '401',
                    13 => '400',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[4],
            $o[7],
            $o[10],
            $o[13],
        ],
        []
    );
},
90 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Get'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Get')),
            clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\JsonContent'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\JsonContent')),
            clone ($p['OpenApi\\Annotations\\Items'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Items')),
            clone ($p['OpenApi\\Annotations\\Schema'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Schema')),
            clone ($p['Nelmio\\ApiDocBundle\\Annotation\\Model'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Nelmio\\ApiDocBundle\\Annotation\\Model')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Schema'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Parameter')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Parameter'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Parameter'],
            clone $p['OpenApi\\Annotations\\Schema'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Parameter'],
            clone $p['OpenApi\\Annotations\\Schema'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Parameter'],
            clone $p['OpenApi\\Annotations\\Schema'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'stdClass' => [
                'response' => [
                    1 => '200',
                ],
                'description' => [
                    1 => 'Returns all the teams for this contest',
                    25 => 'Only show teams for the given category',
                    31 => 'Only show teams for the given affiliation / organization',
                    37 => 'Only show visible teams, even for users with more permissions',
                ],
                '_context' => [
                    1 => $o[2],
                    4 => $o[17],
                    $o[15],
                    $o[10],
                    $o[8],
                    12 => $o[13],
                    19 => $o[20],
                    22 => $o[23],
                    25 => $o[29],
                    $o[27],
                    31 => $o[35],
                    $o[33],
                    37 => $o[41],
                    $o[39],
                ],
                '_unmerged' => [
                    1 => [
                        $o[4],
                    ],
                ],
                'logger' => [
                    2 => $o[3],
                    8 => $o[9],
                    10 => $o[11],
                    13 => $o[14],
                    15 => $o[16],
                    17 => $o[18],
                    20 => $o[21],
                    23 => $o[24],
                    27 => $o[28],
                    29 => $o[30],
                    33 => $o[34],
                    35 => $o[36],
                    39 => $o[40],
                    41 => $o[42],
                ],
                'filename' => [
                    2 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    8 => '/opt/domjudge/domserver/lib/vendor/nelmio/api-doc-bundle/Annotation/Model.php',
                    10 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    13 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    15 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    17 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    20 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    23 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    27 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    29 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    33 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    35 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    39 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    41 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    2 => 977,
                    8 => 66,
                    10 => 977,
                    13 => 977,
                    15 => 977,
                    17 => 977,
                    20 => 977,
                    23 => 977,
                    27 => 977,
                    29 => 977,
                    33 => 977,
                    35 => 977,
                    39 => 977,
                    41 => 977,
                ],
                'method' => [
                    2 => 'Annotation',
                    8 => '__construct',
                    10 => 'Annotation',
                    13 => 'Annotation',
                    15 => 'Annotation',
                    17 => 'Annotation',
                    20 => 'Annotation',
                    23 => 'Annotation',
                    27 => 'Annotation',
                    29 => 'Annotation',
                    33 => 'Annotation',
                    35 => 'Annotation',
                    39 => 'Annotation',
                    41 => 'Annotation',
                ],
                'class' => [
                    2 => 'DocParser',
                    8 => 'Model',
                    10 => 'DocParser',
                    13 => 'DocParser',
                    15 => 'DocParser',
                    17 => 'DocParser',
                    20 => 'DocParser',
                    23 => 'DocParser',
                    27 => 'DocParser',
                    29 => 'DocParser',
                    33 => 'DocParser',
                    35 => 'DocParser',
                    39 => 'DocParser',
                    41 => 'DocParser',
                ],
                'namespace' => [
                    2 => 'Doctrine\\Common\\Annotations',
                    8 => 'Nelmio\\ApiDocBundle\\Annotation',
                    10 => 'Doctrine\\Common\\Annotations',
                    13 => 'Doctrine\\Common\\Annotations',
                    15 => 'Doctrine\\Common\\Annotations',
                    17 => 'Doctrine\\Common\\Annotations',
                    20 => 'Doctrine\\Common\\Annotations',
                    23 => 'Doctrine\\Common\\Annotations',
                    27 => 'Doctrine\\Common\\Annotations',
                    29 => 'Doctrine\\Common\\Annotations',
                    33 => 'Doctrine\\Common\\Annotations',
                    35 => 'Doctrine\\Common\\Annotations',
                    39 => 'Doctrine\\Common\\Annotations',
                    41 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    2 => [
                        $o[1],
                    ],
                    8 => [
                        $o[7],
                    ],
                    10 => [
                        $o[6],
                    ],
                    13 => [
                        $o[12],
                    ],
                    15 => [
                        $o[5],
                    ],
                    17 => [
                        $o[4],
                    ],
                    20 => [
                        $o[19],
                    ],
                    23 => [
                        $o[22],
                    ],
                    27 => [
                        $o[26],
                    ],
                    29 => [
                        $o[25],
                    ],
                    33 => [
                        $o[32],
                    ],
                    35 => [
                        $o[31],
                    ],
                    39 => [
                        $o[38],
                    ],
                    41 => [
                        $o[37],
                    ],
                ],
                'type' => [
                    4 => 'array',
                    7 => 'App\\Entity\\Team',
                    26 => 'string',
                    32 => 'string',
                    38 => 'boolean',
                ],
                'items' => [
                    4 => $o[5],
                ],
                'allOf' => [
                    5 => [
                        $o[6],
                        $o[12],
                    ],
                ],
                'ref' => [
                    6 => $o[7],
                    12 => '#/components/schemas/Photo',
                    19 => '#/components/parameters/idlist',
                    22 => '#/components/parameters/strict',
                ],
                'name' => [
                    25 => 'category',
                    31 => 'affiliation',
                    37 => 'public',
                ],
                'in' => [
                    25 => 'query',
                    31 => 'query',
                    37 => 'query',
                ],
                'schema' => [
                    25 => $o[26],
                    31 => $o[32],
                    37 => $o[38],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[19],
            $o[22],
            $o[25],
            $o[31],
            $o[37],
        ],
        []
    );
},
91 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Get'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Get')),
            clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\JsonContent'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\JsonContent')),
            clone ($p['OpenApi\\Annotations\\Schema'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Schema')),
            clone ($p['Nelmio\\ApiDocBundle\\Annotation\\Model'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Nelmio\\ApiDocBundle\\Annotation\\Model')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Schema'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Parameter')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Parameter'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{id}',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'stdClass' => [
                'response' => [
                    1 => '200',
                ],
                'description' => [
                    1 => 'Returns the given team for this contest',
                ],
                '_context' => [
                    1 => $o[2],
                    4 => $o[14],
                    $o[9],
                    $o[7],
                    11 => $o[12],
                    16 => $o[17],
                    19 => $o[20],
                ],
                '_unmerged' => [
                    1 => [
                        $o[4],
                    ],
                ],
                'logger' => [
                    2 => $o[3],
                    7 => $o[8],
                    9 => $o[10],
                    12 => $o[13],
                    14 => $o[15],
                    17 => $o[18],
                    20 => $o[21],
                ],
                'filename' => [
                    2 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    7 => '/opt/domjudge/domserver/lib/vendor/nelmio/api-doc-bundle/Annotation/Model.php',
                    9 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    12 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    14 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    17 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    20 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    2 => 977,
                    7 => 66,
                    9 => 977,
                    12 => 977,
                    14 => 977,
                    17 => 977,
                    20 => 977,
                ],
                'method' => [
                    2 => 'Annotation',
                    7 => '__construct',
                    9 => 'Annotation',
                    12 => 'Annotation',
                    14 => 'Annotation',
                    17 => 'Annotation',
                    20 => 'Annotation',
                ],
                'class' => [
                    2 => 'DocParser',
                    7 => 'Model',
                    9 => 'DocParser',
                    12 => 'DocParser',
                    14 => 'DocParser',
                    17 => 'DocParser',
                    20 => 'DocParser',
                ],
                'namespace' => [
                    2 => 'Doctrine\\Common\\Annotations',
                    7 => 'Nelmio\\ApiDocBundle\\Annotation',
                    9 => 'Doctrine\\Common\\Annotations',
                    12 => 'Doctrine\\Common\\Annotations',
                    14 => 'Doctrine\\Common\\Annotations',
                    17 => 'Doctrine\\Common\\Annotations',
                    20 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    2 => [
                        $o[1],
                    ],
                    7 => [
                        $o[6],
                    ],
                    9 => [
                        $o[5],
                    ],
                    12 => [
                        $o[11],
                    ],
                    14 => [
                        $o[4],
                    ],
                    17 => [
                        $o[16],
                    ],
                    20 => [
                        $o[19],
                    ],
                ],
                'allOf' => [
                    4 => [
                        $o[5],
                        $o[11],
                    ],
                ],
                'ref' => [
                    5 => $o[6],
                    11 => '#/components/schemas/Photo',
                    16 => '#/components/parameters/id',
                    19 => '#/components/parameters/strict',
                ],
                'type' => [
                    6 => 'App\\Entity\\Team',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[16],
            $o[19],
        ],
        []
    );
},
92 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Get'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Get')),
            clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone ($p['OpenApi\\Annotations\\MediaType'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\MediaType')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone $p['OpenApi\\Annotations\\MediaType'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\MediaType'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Parameter')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{id}/photo',
                ],
                'name' => [
                    'team_photo',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'stdClass' => [
                'response' => [
                    1 => '200',
                ],
                'description' => [
                    1 => 'Returns the given team photo in PNG, JPG or SVG format',
                ],
                'content' => [
                    1 => [
                        $o[2],
                        $o[5],
                        $o[8],
                    ],
                ],
                '_context' => [
                    1 => $o[11],
                    $o[3],
                    5 => $o[6],
                    8 => $o[9],
                    13 => $o[14],
                ],
                'mediaType' => [
                    2 => 'image/png',
                    5 => 'image/jpeg',
                    8 => 'image/svg+xml',
                ],
                'logger' => [
                    3 => $o[4],
                    6 => $o[7],
                    9 => $o[10],
                    11 => $o[12],
                    14 => $o[15],
                ],
                'filename' => [
                    3 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    6 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    9 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    11 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    14 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    3 => 977,
                    6 => 977,
                    9 => 977,
                    11 => 977,
                    14 => 977,
                ],
                'method' => [
                    3 => 'Annotation',
                    6 => 'Annotation',
                    9 => 'Annotation',
                    11 => 'Annotation',
                    14 => 'Annotation',
                ],
                'class' => [
                    3 => 'DocParser',
                    6 => 'DocParser',
                    9 => 'DocParser',
                    11 => 'DocParser',
                    14 => 'DocParser',
                ],
                'namespace' => [
                    3 => 'Doctrine\\Common\\Annotations',
                    6 => 'Doctrine\\Common\\Annotations',
                    9 => 'Doctrine\\Common\\Annotations',
                    11 => 'Doctrine\\Common\\Annotations',
                    14 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    3 => [
                        $o[2],
                    ],
                    6 => [
                        $o[5],
                    ],
                    9 => [
                        $o[8],
                    ],
                    11 => [
                        $o[1],
                    ],
                    14 => [
                        $o[13],
                    ],
                ],
                'ref' => [
                    13 => '#/components/parameters/id',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[13],
        ],
        []
    );
},
93 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Delete'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Delete')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
            clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Parameter')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{id}/photo',
                ],
                'name' => [
                    'delete_team_photo',
                ],
                'methods' => [
                    [
                        'DELETE',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
            'stdClass' => [
                'response' => [
                    2 => '204',
                ],
                'description' => [
                    2 => 'Deleting photo succeeded',
                ],
                '_context' => [
                    2 => $o[3],
                    5 => $o[6],
                ],
                'logger' => [
                    3 => $o[4],
                    6 => $o[7],
                ],
                'filename' => [
                    3 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    6 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    3 => 977,
                    6 => 977,
                ],
                'method' => [
                    3 => 'Annotation',
                    6 => 'Annotation',
                ],
                'class' => [
                    3 => 'DocParser',
                    6 => 'DocParser',
                ],
                'namespace' => [
                    3 => 'Doctrine\\Common\\Annotations',
                    6 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    3 => [
                        $o[2],
                    ],
                    6 => [
                        $o[5],
                    ],
                ],
                'ref' => [
                    5 => '#/components/parameters/id',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[5],
        ],
        []
    );
},
94 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Post'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Post')),
            clone ($p['FOS\\RestBundle\\Controller\\Annotations\\Put'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Put')),
            clone ($p['OpenApi\\Annotations\\RequestBody'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\RequestBody')),
            clone ($p['OpenApi\\Annotations\\MediaType'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\MediaType')),
            clone ($p['OpenApi\\Annotations\\Schema'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Schema')),
            clone ($p['OpenApi\\Annotations\\Property'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Property')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
            clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Parameter')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{id}/photo',
                    '/{id}/photo',
                ],
                'name' => [
                    'post_team_photo',
                    'put_team_photo',
                ],
                'methods' => [
                    [
                        'POST',
                    ],
                    [
                        'PUT',
                    ],
                ],
            ],
            'stdClass' => [
                'required' => [
                    2 => true,
                    4 => [
                        'photo',
                    ],
                ],
                'content' => [
                    2 => [
                        $o[3],
                    ],
                ],
                '_context' => [
                    2 => $o[12],
                    $o[10],
                    $o[8],
                    $o[6],
                    15 => $o[16],
                    18 => $o[19],
                ],
                'mediaType' => [
                    3 => 'multipart/form-data',
                ],
                'schema' => [
                    3 => $o[4],
                ],
                'properties' => [
                    4 => [
                        $o[5],
                    ],
                ],
                'property' => [
                    5 => 'photo',
                ],
                'description' => [
                    5 => 'The photo to use.',
                    15 => 'Setting photo succeeded',
                ],
                'type' => [
                    5 => 'string',
                ],
                'format' => [
                    5 => 'binary',
                ],
                'logger' => [
                    6 => $o[7],
                    8 => $o[9],
                    10 => $o[11],
                    12 => $o[13],
                    16 => $o[17],
                    19 => $o[20],
                ],
                'filename' => [
                    6 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    8 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    10 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    12 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    16 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    19 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    6 => 977,
                    8 => 977,
                    10 => 977,
                    12 => 977,
                    16 => 977,
                    19 => 977,
                ],
                'method' => [
                    6 => 'Annotation',
                    8 => 'Annotation',
                    10 => 'Annotation',
                    12 => 'Annotation',
                    16 => 'Annotation',
                    19 => 'Annotation',
                ],
                'class' => [
                    6 => 'DocParser',
                    8 => 'DocParser',
                    10 => 'DocParser',
                    12 => 'DocParser',
                    16 => 'DocParser',
                    19 => 'DocParser',
                ],
                'namespace' => [
                    6 => 'Doctrine\\Common\\Annotations',
                    8 => 'Doctrine\\Common\\Annotations',
                    10 => 'Doctrine\\Common\\Annotations',
                    12 => 'Doctrine\\Common\\Annotations',
                    16 => 'Doctrine\\Common\\Annotations',
                    19 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    6 => [
                        $o[5],
                    ],
                    8 => [
                        $o[4],
                    ],
                    10 => [
                        $o[3],
                    ],
                    12 => [
                        $o[2],
                    ],
                    16 => [
                        $o[15],
                    ],
                    19 => [
                        $o[18],
                    ],
                ],
                'response' => [
                    15 => '204',
                ],
                'ref' => [
                    18 => '#/components/parameters/id',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    14 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[14],
            $o[15],
            $o[18],
        ],
        []
    );
},
95 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Post'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Post')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
            clone ($p['OpenApi\\Annotations\\RequestBody'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\RequestBody')),
            clone ($p['OpenApi\\Annotations\\MediaType'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\MediaType')),
            clone ($p['OpenApi\\Annotations\\Schema'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Schema')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\MediaType'],
            clone $p['OpenApi\\Annotations\\Schema'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['Nelmio\\ApiDocBundle\\Annotation\\Model'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Nelmio\\ApiDocBundle\\Annotation\\Model')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'methods' => [
                    [
                        'POST',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_API_WRITER',
                ],
            ],
            'stdClass' => [
                'required' => [
                    2 => true,
                ],
                'content' => [
                    2 => [
                        $o[3],
                        $o[9],
                    ],
                ],
                '_context' => [
                    2 => $o[15],
                    $o[7],
                    $o[5],
                    9 => $o[13],
                    $o[11],
                    17 => $o[18],
                    20 => $o[21],
                ],
                'mediaType' => [
                    3 => 'multipart/form-data',
                    9 => 'application/json',
                ],
                'schema' => [
                    3 => $o[4],
                    9 => $o[10],
                ],
                'ref' => [
                    4 => '#/components/schemas/Team',
                    10 => '#/components/schemas/Team',
                ],
                'logger' => [
                    5 => $o[6],
                    7 => $o[8],
                    11 => $o[12],
                    13 => $o[14],
                    15 => $o[16],
                    18 => $o[19],
                    21 => $o[22],
                ],
                'filename' => [
                    5 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    7 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    11 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    13 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    15 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    18 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    21 => '/opt/domjudge/domserver/lib/vendor/nelmio/api-doc-bundle/Annotation/Model.php',
                ],
                'line' => [
                    5 => 977,
                    7 => 977,
                    11 => 977,
                    13 => 977,
                    15 => 977,
                    18 => 977,
                    21 => 66,
                ],
                'method' => [
                    5 => 'Annotation',
                    7 => 'Annotation',
                    11 => 'Annotation',
                    13 => 'Annotation',
                    15 => 'Annotation',
                    18 => 'Annotation',
                    21 => '__construct',
                ],
                'class' => [
                    5 => 'DocParser',
                    7 => 'DocParser',
                    11 => 'DocParser',
                    13 => 'DocParser',
                    15 => 'DocParser',
                    18 => 'DocParser',
                    21 => 'Model',
                ],
                'namespace' => [
                    5 => 'Doctrine\\Common\\Annotations',
                    7 => 'Doctrine\\Common\\Annotations',
                    11 => 'Doctrine\\Common\\Annotations',
                    13 => 'Doctrine\\Common\\Annotations',
                    15 => 'Doctrine\\Common\\Annotations',
                    18 => 'Doctrine\\Common\\Annotations',
                    21 => 'Nelmio\\ApiDocBundle\\Annotation',
                ],
                'annotations' => [
                    5 => [
                        $o[4],
                    ],
                    7 => [
                        $o[3],
                    ],
                    11 => [
                        $o[10],
                    ],
                    13 => [
                        $o[9],
                    ],
                    15 => [
                        $o[2],
                    ],
                    18 => [
                        $o[17],
                    ],
                    21 => [
                        $o[20],
                    ],
                ],
                'response' => [
                    17 => '201',
                ],
                'description' => [
                    17 => 'Returns the added team',
                ],
                '_unmerged' => [
                    17 => [
                        $o[20],
                    ],
                ],
                'type' => [
                    20 => 'App\\Entity\\Team',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[17],
        ],
        []
    );
},
96 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Route')),
            clone ($p['OpenApi\\Annotations\\Tag'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Tag')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Response'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Response'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/users',
                ],
                'defaults' => [
                    [
                        '_format' => 'json',
                    ],
                ],
            ],
            'stdClass' => [
                'name' => [
                    1 => 'Users',
                ],
                '_context' => [
                    1 => $o[2],
                    4 => $o[5],
                    7 => $o[8],
                    10 => $o[11],
                ],
                'logger' => [
                    2 => $o[3],
                    5 => $o[6],
                    8 => $o[9],
                    11 => $o[12],
                ],
                'filename' => [
                    2 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    5 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    8 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    11 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    2 => 977,
                    5 => 977,
                    8 => 977,
                    11 => 977,
                ],
                'method' => [
                    2 => 'Annotation',
                    5 => 'Annotation',
                    8 => 'Annotation',
                    11 => 'Annotation',
                ],
                'class' => [
                    2 => 'DocParser',
                    5 => 'DocParser',
                    8 => 'DocParser',
                    11 => 'DocParser',
                ],
                'namespace' => [
                    2 => 'Doctrine\\Common\\Annotations',
                    5 => 'Doctrine\\Common\\Annotations',
                    8 => 'Doctrine\\Common\\Annotations',
                    11 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    2 => [
                        $o[1],
                    ],
                    5 => [
                        $o[4],
                    ],
                    8 => [
                        $o[7],
                    ],
                    11 => [
                        $o[10],
                    ],
                ],
                'ref' => [
                    4 => '#/components/responses/NotFound',
                    7 => '#/components/responses/Unauthorized',
                    10 => '#/components/responses/InvalidResponse',
                ],
                'response' => [
                    4 => '404',
                    7 => '401',
                    10 => '400',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[4],
            $o[7],
            $o[10],
        ],
        []
    );
},
97 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Post'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Post')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
            clone ($p['OpenApi\\Annotations\\Post'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Post')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\RequestBody'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\RequestBody')),
            clone ($p['OpenApi\\Annotations\\MediaType'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\MediaType')),
            clone ($p['OpenApi\\Annotations\\Schema'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Schema')),
            clone ($p['OpenApi\\Annotations\\Property'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Property')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/groups',
                ],
                'methods' => [
                    [
                        'POST',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
            'stdClass' => [
                '_context' => [
                    2 => $o[3],
                    5 => $o[18],
                    $o[16],
                    $o[14],
                    $o[9],
                    11 => $o[12],
                    20 => $o[21],
                ],
                'logger' => [
                    3 => $o[4],
                    9 => $o[10],
                    12 => $o[13],
                    14 => $o[15],
                    16 => $o[17],
                    18 => $o[19],
                    21 => $o[22],
                ],
                'filename' => [
                    3 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    9 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    12 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    14 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    16 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    18 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    21 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    3 => 977,
                    9 => 977,
                    12 => 977,
                    14 => 977,
                    16 => 977,
                    18 => 977,
                    21 => 977,
                ],
                'method' => [
                    3 => 'Annotation',
                    9 => 'Annotation',
                    12 => 'Annotation',
                    14 => 'Annotation',
                    16 => 'Annotation',
                    18 => 'Annotation',
                    21 => 'Annotation',
                ],
                'class' => [
                    3 => 'DocParser',
                    9 => 'DocParser',
                    12 => 'DocParser',
                    14 => 'DocParser',
                    16 => 'DocParser',
                    18 => 'DocParser',
                    21 => 'DocParser',
                ],
                'namespace' => [
                    3 => 'Doctrine\\Common\\Annotations',
                    9 => 'Doctrine\\Common\\Annotations',
                    12 => 'Doctrine\\Common\\Annotations',
                    14 => 'Doctrine\\Common\\Annotations',
                    16 => 'Doctrine\\Common\\Annotations',
                    18 => 'Doctrine\\Common\\Annotations',
                    21 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    3 => [
                        $o[2],
                    ],
                    9 => [
                        $o[8],
                    ],
                    12 => [
                        $o[11],
                    ],
                    14 => [
                        $o[7],
                    ],
                    16 => [
                        $o[6],
                    ],
                    18 => [
                        $o[5],
                    ],
                    21 => [
                        $o[20],
                    ],
                ],
                'required' => [
                    5 => true,
                ],
                'content' => [
                    5 => [
                        $o[6],
                    ],
                ],
                'mediaType' => [
                    6 => 'multipart/form-data',
                ],
                'schema' => [
                    6 => $o[7],
                ],
                'properties' => [
                    7 => [
                        $o[8],
                        $o[11],
                    ],
                ],
                'property' => [
                    8 => 'tsv',
                    11 => 'json',
                ],
                'description' => [
                    8 => 'The groups.tsv files to import.',
                    11 => 'The groups.json files to import.',
                    20 => 'Returns a (currently meaningless) status message.',
                ],
                'type' => [
                    8 => 'string',
                    11 => 'string',
                ],
                'format' => [
                    8 => 'binary',
                    11 => 'binary',
                ],
                'response' => [
                    20 => '200',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[5],
            $o[20],
        ],
        []
    );
},
98 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Post'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Post')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
            clone ($p['OpenApi\\Annotations\\Post'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Post')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\RequestBody'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\RequestBody')),
            clone ($p['OpenApi\\Annotations\\MediaType'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\MediaType')),
            clone ($p['OpenApi\\Annotations\\Schema'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Schema')),
            clone ($p['OpenApi\\Annotations\\Property'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Property')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/organizations',
                ],
                'methods' => [
                    [
                        'POST',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
            'stdClass' => [
                '_context' => [
                    2 => $o[3],
                    5 => $o[15],
                    $o[13],
                    $o[11],
                    $o[9],
                    17 => $o[18],
                ],
                'logger' => [
                    3 => $o[4],
                    9 => $o[10],
                    11 => $o[12],
                    13 => $o[14],
                    15 => $o[16],
                    18 => $o[19],
                ],
                'filename' => [
                    3 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    9 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    11 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    13 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    15 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    18 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    3 => 977,
                    9 => 977,
                    11 => 977,
                    13 => 977,
                    15 => 977,
                    18 => 977,
                ],
                'method' => [
                    3 => 'Annotation',
                    9 => 'Annotation',
                    11 => 'Annotation',
                    13 => 'Annotation',
                    15 => 'Annotation',
                    18 => 'Annotation',
                ],
                'class' => [
                    3 => 'DocParser',
                    9 => 'DocParser',
                    11 => 'DocParser',
                    13 => 'DocParser',
                    15 => 'DocParser',
                    18 => 'DocParser',
                ],
                'namespace' => [
                    3 => 'Doctrine\\Common\\Annotations',
                    9 => 'Doctrine\\Common\\Annotations',
                    11 => 'Doctrine\\Common\\Annotations',
                    13 => 'Doctrine\\Common\\Annotations',
                    15 => 'Doctrine\\Common\\Annotations',
                    18 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    3 => [
                        $o[2],
                    ],
                    9 => [
                        $o[8],
                    ],
                    11 => [
                        $o[7],
                    ],
                    13 => [
                        $o[6],
                    ],
                    15 => [
                        $o[5],
                    ],
                    18 => [
                        $o[17],
                    ],
                ],
                'required' => [
                    5 => true,
                    7 => [
                        'json',
                    ],
                ],
                'content' => [
                    5 => [
                        $o[6],
                    ],
                ],
                'mediaType' => [
                    6 => 'multipart/form-data',
                ],
                'schema' => [
                    6 => $o[7],
                ],
                'properties' => [
                    7 => [
                        $o[8],
                    ],
                ],
                'property' => [
                    8 => 'json',
                ],
                'description' => [
                    8 => 'The organizations.json files to import.',
                    17 => 'Returns a (currently meaningless) status message.',
                ],
                'type' => [
                    8 => 'string',
                ],
                'format' => [
                    8 => 'binary',
                ],
                'response' => [
                    17 => '200',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[5],
            $o[17],
        ],
        []
    );
},
99 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Post'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Post')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
            clone ($p['OpenApi\\Annotations\\Post'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Post')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\RequestBody'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\RequestBody')),
            clone ($p['OpenApi\\Annotations\\MediaType'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\MediaType')),
            clone ($p['OpenApi\\Annotations\\Schema'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Schema')),
            clone ($p['OpenApi\\Annotations\\Property'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Property')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/teams',
                ],
                'methods' => [
                    [
                        'POST',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
            'stdClass' => [
                '_context' => [
                    2 => $o[3],
                    5 => $o[18],
                    $o[16],
                    $o[14],
                    $o[9],
                    11 => $o[12],
                    20 => $o[21],
                ],
                'logger' => [
                    3 => $o[4],
                    9 => $o[10],
                    12 => $o[13],
                    14 => $o[15],
                    16 => $o[17],
                    18 => $o[19],
                    21 => $o[22],
                ],
                'filename' => [
                    3 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    9 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    12 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    14 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    16 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    18 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    21 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    3 => 977,
                    9 => 977,
                    12 => 977,
                    14 => 977,
                    16 => 977,
                    18 => 977,
                    21 => 977,
                ],
                'method' => [
                    3 => 'Annotation',
                    9 => 'Annotation',
                    12 => 'Annotation',
                    14 => 'Annotation',
                    16 => 'Annotation',
                    18 => 'Annotation',
                    21 => 'Annotation',
                ],
                'class' => [
                    3 => 'DocParser',
                    9 => 'DocParser',
                    12 => 'DocParser',
                    14 => 'DocParser',
                    16 => 'DocParser',
                    18 => 'DocParser',
                    21 => 'DocParser',
                ],
                'namespace' => [
                    3 => 'Doctrine\\Common\\Annotations',
                    9 => 'Doctrine\\Common\\Annotations',
                    12 => 'Doctrine\\Common\\Annotations',
                    14 => 'Doctrine\\Common\\Annotations',
                    16 => 'Doctrine\\Common\\Annotations',
                    18 => 'Doctrine\\Common\\Annotations',
                    21 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    3 => [
                        $o[2],
                    ],
                    9 => [
                        $o[8],
                    ],
                    12 => [
                        $o[11],
                    ],
                    14 => [
                        $o[7],
                    ],
                    16 => [
                        $o[6],
                    ],
                    18 => [
                        $o[5],
                    ],
                    21 => [
                        $o[20],
                    ],
                ],
                'required' => [
                    5 => true,
                ],
                'content' => [
                    5 => [
                        $o[6],
                    ],
                ],
                'mediaType' => [
                    6 => 'multipart/form-data',
                ],
                'schema' => [
                    6 => $o[7],
                ],
                'properties' => [
                    7 => [
                        $o[8],
                        $o[11],
                    ],
                ],
                'property' => [
                    8 => 'tsv',
                    11 => 'json',
                ],
                'description' => [
                    8 => 'The teams.tsv files to import.',
                    11 => 'The teams.json files to import.',
                    20 => 'Returns a (currently meaningless) status message.',
                ],
                'type' => [
                    8 => 'string',
                    11 => 'string',
                ],
                'format' => [
                    8 => 'binary',
                    11 => 'binary',
                ],
                'response' => [
                    20 => '200',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[5],
            $o[20],
        ],
        []
    );
},
100 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Post'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Post')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
            clone ($p['OpenApi\\Annotations\\Post'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Post')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\RequestBody'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\RequestBody')),
            clone ($p['OpenApi\\Annotations\\MediaType'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\MediaType')),
            clone ($p['OpenApi\\Annotations\\Schema'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Schema')),
            clone ($p['OpenApi\\Annotations\\Property'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Property')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/accounts',
                ],
                'methods' => [
                    [
                        'POST',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
            'stdClass' => [
                '_context' => [
                    2 => $o[3],
                    5 => $o[21],
                    $o[19],
                    $o[17],
                    $o[9],
                    11 => $o[12],
                    14 => $o[15],
                    23 => $o[24],
                ],
                'logger' => [
                    3 => $o[4],
                    9 => $o[10],
                    12 => $o[13],
                    15 => $o[16],
                    17 => $o[18],
                    19 => $o[20],
                    21 => $o[22],
                    24 => $o[25],
                ],
                'filename' => [
                    3 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    9 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    12 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    15 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    17 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    19 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    21 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    24 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    3 => 977,
                    9 => 977,
                    12 => 977,
                    15 => 977,
                    17 => 977,
                    19 => 977,
                    21 => 977,
                    24 => 977,
                ],
                'method' => [
                    3 => 'Annotation',
                    9 => 'Annotation',
                    12 => 'Annotation',
                    15 => 'Annotation',
                    17 => 'Annotation',
                    19 => 'Annotation',
                    21 => 'Annotation',
                    24 => 'Annotation',
                ],
                'class' => [
                    3 => 'DocParser',
                    9 => 'DocParser',
                    12 => 'DocParser',
                    15 => 'DocParser',
                    17 => 'DocParser',
                    19 => 'DocParser',
                    21 => 'DocParser',
                    24 => 'DocParser',
                ],
                'namespace' => [
                    3 => 'Doctrine\\Common\\Annotations',
                    9 => 'Doctrine\\Common\\Annotations',
                    12 => 'Doctrine\\Common\\Annotations',
                    15 => 'Doctrine\\Common\\Annotations',
                    17 => 'Doctrine\\Common\\Annotations',
                    19 => 'Doctrine\\Common\\Annotations',
                    21 => 'Doctrine\\Common\\Annotations',
                    24 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    3 => [
                        $o[2],
                    ],
                    9 => [
                        $o[8],
                    ],
                    12 => [
                        $o[11],
                    ],
                    15 => [
                        $o[14],
                    ],
                    17 => [
                        $o[7],
                    ],
                    19 => [
                        $o[6],
                    ],
                    21 => [
                        $o[5],
                    ],
                    24 => [
                        $o[23],
                    ],
                ],
                'required' => [
                    5 => true,
                ],
                'content' => [
                    5 => [
                        $o[6],
                    ],
                ],
                'mediaType' => [
                    6 => 'multipart/form-data',
                ],
                'schema' => [
                    6 => $o[7],
                ],
                'properties' => [
                    7 => [
                        $o[8],
                        $o[11],
                        $o[14],
                    ],
                ],
                'property' => [
                    8 => 'tsv',
                    11 => 'json',
                    14 => 'yaml',
                ],
                'description' => [
                    8 => 'The accounts.tsv files to import.',
                    11 => 'The accounts.json files to import.',
                    14 => 'The accounts.yaml files to import.',
                    23 => 'Returns a (currently meaningless) status message.',
                ],
                'type' => [
                    8 => 'string',
                    11 => 'string',
                    14 => 'string',
                ],
                'format' => [
                    8 => 'binary',
                    11 => 'binary',
                    14 => 'binary',
                ],
                'response' => [
                    23 => '200',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[5],
            $o[23],
        ],
        []
    );
},
101 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Get'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Get')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Security'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Security')),
            clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\JsonContent'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\JsonContent')),
            clone ($p['OpenApi\\Annotations\\Items'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Items')),
            clone ($p['Nelmio\\ApiDocBundle\\Annotation\\Model'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Nelmio\\ApiDocBundle\\Annotation\\Model')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Parameter')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Parameter'],
            clone ($p['OpenApi\\Annotations\\Schema'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Schema')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Security' => [
                'expression' => [
                    1 => 'is_granted(\'ROLE_ADMIN\') or is_granted(\'ROLE_API_READER\')',
                ],
            ],
            'stdClass' => [
                'response' => [
                    2 => '200',
                ],
                'description' => [
                    2 => 'Returns all the users for this contest',
                    17 => 'Only show users for the given team',
                ],
                '_context' => [
                    2 => $o[3],
                    5 => $o[12],
                    $o[10],
                    $o[8],
                    14 => $o[15],
                    17 => $o[21],
                    $o[19],
                ],
                '_unmerged' => [
                    2 => [
                        $o[5],
                    ],
                ],
                'logger' => [
                    3 => $o[4],
                    8 => $o[9],
                    10 => $o[11],
                    12 => $o[13],
                    15 => $o[16],
                    19 => $o[20],
                    21 => $o[22],
                ],
                'filename' => [
                    3 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    8 => '/opt/domjudge/domserver/lib/vendor/nelmio/api-doc-bundle/Annotation/Model.php',
                    10 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    12 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    15 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    19 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    21 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    3 => 977,
                    8 => 66,
                    10 => 977,
                    12 => 977,
                    15 => 977,
                    19 => 977,
                    21 => 977,
                ],
                'method' => [
                    3 => 'Annotation',
                    8 => '__construct',
                    10 => 'Annotation',
                    12 => 'Annotation',
                    15 => 'Annotation',
                    19 => 'Annotation',
                    21 => 'Annotation',
                ],
                'class' => [
                    3 => 'DocParser',
                    8 => 'Model',
                    10 => 'DocParser',
                    12 => 'DocParser',
                    15 => 'DocParser',
                    19 => 'DocParser',
                    21 => 'DocParser',
                ],
                'namespace' => [
                    3 => 'Doctrine\\Common\\Annotations',
                    8 => 'Nelmio\\ApiDocBundle\\Annotation',
                    10 => 'Doctrine\\Common\\Annotations',
                    12 => 'Doctrine\\Common\\Annotations',
                    15 => 'Doctrine\\Common\\Annotations',
                    19 => 'Doctrine\\Common\\Annotations',
                    21 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    3 => [
                        $o[2],
                    ],
                    8 => [
                        $o[7],
                    ],
                    10 => [
                        $o[6],
                    ],
                    12 => [
                        $o[5],
                    ],
                    15 => [
                        $o[14],
                    ],
                    19 => [
                        $o[18],
                    ],
                    21 => [
                        $o[17],
                    ],
                ],
                'type' => [
                    5 => 'array',
                    7 => 'App\\Entity\\User',
                    18 => 'string',
                ],
                'items' => [
                    5 => $o[6],
                ],
                'ref' => [
                    6 => $o[7],
                    14 => '#/components/parameters/idlist',
                ],
                'name' => [
                    17 => 'team_id',
                ],
                'in' => [
                    17 => 'query',
                ],
                'schema' => [
                    17 => $o[18],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[14],
            $o[17],
        ],
        []
    );
},
102 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Get'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Get')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Security'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Security')),
            clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['Nelmio\\ApiDocBundle\\Annotation\\Model'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Nelmio\\ApiDocBundle\\Annotation\\Model')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Parameter')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{id}',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Security' => [
                'expression' => [
                    1 => 'is_granted(\'ROLE_ADMIN\') or is_granted(\'ROLE_API_READER\')',
                ],
            ],
            'stdClass' => [
                'response' => [
                    2 => '200',
                ],
                'description' => [
                    2 => 'Returns the given user',
                ],
                '_context' => [
                    2 => $o[3],
                    5 => $o[6],
                    8 => $o[9],
                ],
                '_unmerged' => [
                    2 => [
                        $o[5],
                    ],
                ],
                'logger' => [
                    3 => $o[4],
                    6 => $o[7],
                    9 => $o[10],
                ],
                'filename' => [
                    3 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    6 => '/opt/domjudge/domserver/lib/vendor/nelmio/api-doc-bundle/Annotation/Model.php',
                    9 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    3 => 977,
                    6 => 66,
                    9 => 977,
                ],
                'method' => [
                    3 => 'Annotation',
                    6 => '__construct',
                    9 => 'Annotation',
                ],
                'class' => [
                    3 => 'DocParser',
                    6 => 'Model',
                    9 => 'DocParser',
                ],
                'namespace' => [
                    3 => 'Doctrine\\Common\\Annotations',
                    6 => 'Nelmio\\ApiDocBundle\\Annotation',
                    9 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    3 => [
                        $o[2],
                    ],
                    6 => [
                        $o[5],
                    ],
                    9 => [
                        $o[8],
                    ],
                ],
                'type' => [
                    5 => 'App\\Entity\\User',
                ],
                'ref' => [
                    8 => '#/components/parameters/id',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[8],
        ],
        []
    );
},
103 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Post'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Post')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
            clone ($p['OpenApi\\Annotations\\RequestBody'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\RequestBody')),
            clone ($p['OpenApi\\Annotations\\MediaType'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\MediaType')),
            clone ($p['OpenApi\\Annotations\\Schema'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Schema')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\MediaType'],
            clone $p['OpenApi\\Annotations\\Schema'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['Nelmio\\ApiDocBundle\\Annotation\\Model'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Nelmio\\ApiDocBundle\\Annotation\\Model')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'methods' => [
                    [
                        'POST',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_API_WRITER',
                ],
            ],
            'stdClass' => [
                'required' => [
                    2 => true,
                ],
                'content' => [
                    2 => [
                        $o[3],
                        $o[9],
                    ],
                ],
                '_context' => [
                    2 => $o[15],
                    $o[7],
                    $o[5],
                    9 => $o[13],
                    $o[11],
                    17 => $o[18],
                    20 => $o[21],
                ],
                'mediaType' => [
                    3 => 'multipart/form-data',
                    9 => 'application/json',
                ],
                'schema' => [
                    3 => $o[4],
                    9 => $o[10],
                ],
                'ref' => [
                    4 => '#/components/schemas/AddUser',
                    10 => '#/components/schemas/AddUser',
                ],
                'logger' => [
                    5 => $o[6],
                    7 => $o[8],
                    11 => $o[12],
                    13 => $o[14],
                    15 => $o[16],
                    18 => $o[19],
                    21 => $o[22],
                ],
                'filename' => [
                    5 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    7 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    11 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    13 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    15 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    18 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    21 => '/opt/domjudge/domserver/lib/vendor/nelmio/api-doc-bundle/Annotation/Model.php',
                ],
                'line' => [
                    5 => 977,
                    7 => 977,
                    11 => 977,
                    13 => 977,
                    15 => 977,
                    18 => 977,
                    21 => 66,
                ],
                'method' => [
                    5 => 'Annotation',
                    7 => 'Annotation',
                    11 => 'Annotation',
                    13 => 'Annotation',
                    15 => 'Annotation',
                    18 => 'Annotation',
                    21 => '__construct',
                ],
                'class' => [
                    5 => 'DocParser',
                    7 => 'DocParser',
                    11 => 'DocParser',
                    13 => 'DocParser',
                    15 => 'DocParser',
                    18 => 'DocParser',
                    21 => 'Model',
                ],
                'namespace' => [
                    5 => 'Doctrine\\Common\\Annotations',
                    7 => 'Doctrine\\Common\\Annotations',
                    11 => 'Doctrine\\Common\\Annotations',
                    13 => 'Doctrine\\Common\\Annotations',
                    15 => 'Doctrine\\Common\\Annotations',
                    18 => 'Doctrine\\Common\\Annotations',
                    21 => 'Nelmio\\ApiDocBundle\\Annotation',
                ],
                'annotations' => [
                    5 => [
                        $o[4],
                    ],
                    7 => [
                        $o[3],
                    ],
                    11 => [
                        $o[10],
                    ],
                    13 => [
                        $o[9],
                    ],
                    15 => [
                        $o[2],
                    ],
                    18 => [
                        $o[17],
                    ],
                    21 => [
                        $o[20],
                    ],
                ],
                'response' => [
                    17 => '201',
                ],
                'description' => [
                    17 => 'Returns the added user',
                ],
                '_unmerged' => [
                    17 => [
                        $o[20],
                    ],
                ],
                'type' => [
                    20 => 'App\\Entity\\User',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[17],
        ],
        []
    );
},
104 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/jury/analysis',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_JURY',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
105 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '',
                ],
                'name' => [
                    'analysis_index',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
106 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/team/{teamid}',
                ],
                'name' => [
                    'analysis_team',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
107 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/problem/{probid}',
                ],
                'name' => [
                    'analysis_problem',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
108 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/jury/auditlog',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
109 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '',
                ],
                'name' => [
                    'jury_auditlog',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
110 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Security'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Security')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/jury/balloons',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Security' => [
                'expression' => [
                    1 => 'is_granted(\'ROLE_JURY\') or is_granted(\'ROLE_BALLOON\')',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
111 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '',
                ],
                'name' => [
                    'jury_balloons',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
112 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{balloonId}/done',
                ],
                'name' => [
                    'jury_balloons_setdone',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
113 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/jury/clarifications',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_CLARIFICATION_RW',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
114 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '',
                ],
                'name' => [
                    'jury_clarifications',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
115 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{id<\\d+>}',
                ],
                'name' => [
                    'jury_clarification',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
116 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/send',
                ],
                'name' => [
                    'jury_clarification_new',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
117 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{clarId<\\d+>}/claim',
                ],
                'name' => [
                    'jury_clarification_claim',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
118 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{clarId<\\d+>}/set-answered',
                ],
                'name' => [
                    'jury_clarification_set_answered',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
119 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{clarId<\\d+>}/change-subject',
                ],
                'name' => [
                    'jury_clarification_change_subject',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
120 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{clarId<\\d+>}/change-queue',
                ],
                'name' => [
                    'jury_clarification_change_queue',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
121 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/send',
                ],
                'name' => [
                    'jury_clarification_send',
                ],
                'methods' => [
                    [
                        'POST',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
122 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/jury/config',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
123 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '',
                ],
                'name' => [
                    'jury_config',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
124 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/check',
                ],
                'name' => [
                    'jury_config_check',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
125 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/check/phpinfo',
                ],
                'name' => [
                    'jury_config_phpinfo',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
126 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/jury/contests',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_JURY',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
127 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '',
                ],
                'name' => [
                    'jury_contests',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
128 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{contestId<\\d+>}',
                ],
                'name' => [
                    'jury_contest',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
129 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{contestId<\\d+>}/remove-interval/{intervalId}',
                ],
                'name' => [
                    'jury_contest_remove_interval',
                ],
                'methods' => [
                    [
                        'POST',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
130 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{contestId<\\d+>}/edit',
                ],
                'name' => [
                    'jury_contest_edit',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
131 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{contestId<\\d+>}/delete',
                ],
                'name' => [
                    'jury_contest_delete',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
132 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{contestId<\\d+>}/problems/{probId<\\d+>}/delete',
                ],
                'name' => [
                    'jury_contest_problem_delete',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
133 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/add',
                ],
                'name' => [
                    'jury_contest_add',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
134 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{contestId<\\d+>}/prefetch',
                ],
                'name' => [
                    'jury_contest_prefetch',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
135 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{contestId<\\d+>}/finalize',
                ],
                'name' => [
                    'jury_contest_finalize',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
136 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{contestId<\\d+>}/request-remaining',
                ],
                'name' => [
                    'jury_contest_request_remaining',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
137 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{contestId<\\d+>}/problems/{probId<\\d+>}/request-remaining',
                ],
                'name' => [
                    'jury_contest_problem_request_remaining',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
138 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/jury/executables',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_JURY',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
139 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '',
                ],
                'name' => [
                    'jury_executables',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
140 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/add',
                ],
                'name' => [
                    'jury_executable_add',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
141 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{execId}',
                ],
                'name' => [
                    'jury_executable',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
142 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{execId}/download',
                ],
                'name' => [
                    'jury_executable_download',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
143 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{execId}/delete/{rank}',
                ],
                'name' => [
                    'jury_executable_delete_single',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
144 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{execId}/download/{rank}',
                ],
                'name' => [
                    'jury_executable_download_single',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
145 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{execId}/edit',
                ],
                'name' => [
                    'jury_executable_edit',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
146 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{execId}/delete',
                ],
                'name' => [
                    'jury_executable_delete',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
147 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{execId}/edit-files',
                ],
                'name' => [
                    'jury_executable_edit_files',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
148 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/jury/external-contest-sources',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
149 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/',
                ],
                'name' => [
                    'jury_external_contest_sources',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
150 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{extsourceid<\\d+>}',
                ],
                'name' => [
                    'jury_external_contest_source',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
151 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{extsourceid<\\d+>}/edit',
                ],
                'name' => [
                    'jury_external_contest_source_edit',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
152 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/add',
                ],
                'name' => [
                    'jury_external_contest_source_add',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
153 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{extsourceid<\\d+>}/delete',
                ],
                'name' => [
                    'jury_external_contest_source_delete',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
154 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{extsourceid<\\d+>}/enable',
                ],
                'name' => [
                    'jury_external_contest_source_enable',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
155 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{extsourceid<\\d+>}/disable',
                ],
                'name' => [
                    'jury_external_contest_source_disable',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
156 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/jury/import-export',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
157 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '',
                ],
                'name' => [
                    'jury_import_export',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
158 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/export/{type<groups|teams|results>}.tsv',
                ],
                'name' => [
                    'jury_tsv_export',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
159 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/export/{type<results|clarifications>}.html',
                ],
                'name' => [
                    'jury_html_export',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
160 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/jury/internal-errors',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_JURY',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
161 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '',
                ],
                'name' => [
                    'jury_internal_errors',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
162 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{errorId<\\d+>}',
                ],
                'name' => [
                    'jury_internal_error',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
163 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{errorId<\\d+>}/{action<ignore|resolve>}',
                ],
                'name' => [
                    'jury_internal_error_handle',
                ],
                'methods' => [
                    [
                        'POST',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
164 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/jury/judgehosts',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_JURY',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
165 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '',
                ],
                'name' => [
                    'jury_judgehosts',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
166 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{judgehostid}',
                ],
                'name' => [
                    'jury_judgehost',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
167 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{judgehostid}/delete',
                ],
                'name' => [
                    'jury_judgehost_delete',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
168 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{judgehostid}/enable',
                ],
                'name' => [
                    'jury_judgehost_enable',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
169 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{judgehostid}/disable',
                ],
                'name' => [
                    'jury_judgehost_disable',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
170 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/enable-all',
                ],
                'name' => [
                    'jury_judgehost_enable_all',
                ],
                'methods' => [
                    [
                        'POST',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
171 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/disable-all',
                ],
                'name' => [
                    'jury_judgehost_disable_all',
                ],
                'methods' => [
                    [
                        'POST',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
172 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/autohide',
                ],
                'name' => [
                    'jury_judgehost_autohide',
                ],
                'methods' => [
                    [
                        'POST',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
173 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/edit/multiple',
                ],
                'name' => [
                    'jury_judgehost_edit',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
174 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/jury',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
175 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Security'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Security')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '',
                ],
                'name' => [
                    'jury_index',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Security' => [
                'expression' => [
                    1 => 'is_granted(\'ROLE_JURY\') or is_granted(\'ROLE_BALLOON\') or is_granted(\'ROLE_CLARIFICATION_RW\')',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
176 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Security'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Security')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/updates',
                ],
                'name' => [
                    'jury_ajax_updates',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Security' => [
                'expression' => [
                    1 => 'is_granted(\'ROLE_JURY\') or is_granted(\'ROLE_BALLOON\')',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
177 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Security'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Security')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/ajax/{datatype}',
                ],
                'name' => [
                    'jury_ajax_data',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Security' => [
                'expression' => [
                    1 => 'is_granted(\'ROLE_JURY\') or is_granted(\'ROLE_BALLOON\')',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
178 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/refresh-cache',
                ],
                'name' => [
                    'jury_refresh_cache',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
179 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/judging-verifier',
                ],
                'name' => [
                    'jury_judging_verifier',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_JURY',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
180 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/change-contest/{contestId<-?\\d+>}',
                ],
                'name' => [
                    'jury_change_contest',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
181 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/jury/languages',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_JURY',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
182 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '',
                ],
                'name' => [
                    'jury_languages',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
183 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/add',
                ],
                'name' => [
                    'jury_language_add',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
184 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{langId}',
                ],
                'name' => [
                    'jury_language',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
185 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{langId}/toggle-submit',
                ],
                'name' => [
                    'jury_language_toggle_submit',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
186 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{langId}/toggle-judge',
                ],
                'name' => [
                    'jury_language_toggle_judge',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
187 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{langId}/edit',
                ],
                'name' => [
                    'jury_language_edit',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
188 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{langId}/delete',
                ],
                'name' => [
                    'jury_language_delete',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
189 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{langId}/request-remaining',
                ],
                'name' => [
                    'jury_language_request_remaining',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
190 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Security'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Security')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/jury/print',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Security' => [
                'expression' => [
                    1 => 'is_granted(\'ROLE_JURY\') or is_granted(\'ROLE_BALLOON\')',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
191 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '',
                ],
                'name' => [
                    'jury_print',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
192 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/jury/problems',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_JURY',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
193 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '',
                ],
                'name' => [
                    'jury_problems',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
194 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{problemId<\\d+>}/export',
                ],
                'name' => [
                    'jury_export_problem',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_JURY',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
195 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{probId<\\d+>}',
                ],
                'name' => [
                    'jury_problem',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
196 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{probId<\\d+>}/text',
                ],
                'name' => [
                    'jury_problem_text',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
197 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{probId<\\d+>}/testcases',
                ],
                'name' => [
                    'jury_problem_testcases',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
198 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{probId<\\d+>}/testcases/{rank<\\d+>}/move/{direction<up|down>}',
                ],
                'name' => [
                    'jury_problem_testcase_move',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
199 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{probId<\\d+>}/testcases/{rank<\\d+>}/fetch/{type<input|output|image>}',
                ],
                'name' => [
                    'jury_problem_testcase_fetch',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
200 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{probId<\\d+>}/edit',
                ],
                'name' => [
                    'jury_problem_edit',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
201 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{probId<\\d+>}/delete',
                ],
                'name' => [
                    'jury_problem_delete',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
202 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/attachments/{attachmentId<\\d+>}',
                ],
                'name' => [
                    'jury_attachment_fetch',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
203 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/attachments/{attachmentId<\\d+>}/delete',
                ],
                'name' => [
                    'jury_attachment_delete',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
204 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{testcaseId<\\d+>}/delete_testcase',
                ],
                'name' => [
                    'jury_testcase_delete',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
205 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/add',
                ],
                'name' => [
                    'jury_problem_add',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
206 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{probId<\\d+>}/request-remaining',
                ],
                'name' => [
                    'jury_problem_request_remaining',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
207 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/jury/queuetasks',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
208 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '',
                ],
                'name' => [
                    'jury_queue_tasks',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
209 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{queueTaskId}/change-priority/{priority}',
                ],
                'name' => [
                    'jury_queue_task_change_priority',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
210 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{queueTaskId}/judgetasks',
                ],
                'name' => [
                    'jury_queue_task_judge_tasks',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
211 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/jury/rejudgings',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_JURY',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
212 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '',
                ],
                'name' => [
                    'jury_rejudgings',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
213 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{rejudgingId<\\d+>}',
                ],
                'name' => [
                    'jury_rejudging',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
214 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{rejudgingId<\\d+>}/{action<cancel|apply>}',
                ],
                'name' => [
                    'jury_rejudging_finish',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
215 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/add',
                ],
                'name' => [
                    'jury_rejudging_add',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
216 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/create',
                ],
                'name' => [
                    'jury_create_rejudge',
                ],
                'methods' => [
                    [
                        'POST',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
217 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Security'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Security')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/jury/scoreboard',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Security' => [
                'expression' => [
                    1 => 'is_granted(\'ROLE_JURY\') or is_granted(\'ROLE_BALLOON\')',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
218 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '',
                ],
                'name' => [
                    'jury_scoreboard',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
219 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/jury/shadow-differences',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
220 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '',
                ],
                'name' => [
                    'jury_shadow_differences',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
221 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/jury/submissions',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_JURY',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
222 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '',
                ],
                'name' => [
                    'jury_submissions',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
223 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{submitId<\\d+>}',
                ],
                'name' => [
                    'jury_submission',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
224 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/request-full-debug/{jid}',
                ],
                'name' => [
                    'request_full_debug',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
225 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/download-full-debug/{debug_package_id}',
                ],
                'name' => [
                    'download_full_debug',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
226 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/request-output/{jid}/{jrid}',
                ],
                'name' => [
                    'request_output',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
227 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/by-judging-id/{jid}',
                ],
                'name' => [
                    'jury_submission_by_judging',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
228 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/by-external-judgement-id/{externalJudgement}',
                ],
                'name' => [
                    'jury_submission_by_external_judgement',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
229 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/by-external-id/{externalId}',
                ],
                'name' => [
                    'jury_submission_by_external_id',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
230 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{submission}/runs/{contest}/{run}/team-output',
                ],
                'name' => [
                    'jury_submission_team_output',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
231 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{submission}/source',
                ],
                'name' => [
                    'jury_submission_source',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
232 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{submission}/edit-source',
                ],
                'name' => [
                    'jury_submission_edit_source',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
233 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{judgingId<\\d+>}/request-remaining',
                ],
                'name' => [
                    'jury_submission_request_remaining',
                ],
                'methods' => [
                    [
                        'POST',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
234 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{submitId<\\d+>}/update-status',
                ],
                'name' => [
                    'jury_submission_update_status',
                ],
                'methods' => [
                    [
                        'POST',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
235 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{judgingId<\\d+>}/verify',
                ],
                'name' => [
                    'jury_judging_verify',
                ],
                'methods' => [
                    [
                        'POST',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
236 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/shadow-difference/{extjudgementid<\\d+>}/verify',
                ],
                'name' => [
                    'jury_shadow_difference_verify',
                ],
                'methods' => [
                    [
                        'POST',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
237 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/jury/affiliations',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_JURY',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
238 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '',
                ],
                'name' => [
                    'jury_team_affiliations',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
239 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{affilId<\\d+>}',
                ],
                'name' => [
                    'jury_team_affiliation',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
240 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{affilId<\\d+>}/edit',
                ],
                'name' => [
                    'jury_team_affiliation_edit',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
241 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{affilId<\\d+>}/delete',
                ],
                'name' => [
                    'jury_team_affiliation_delete',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
242 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/add',
                ],
                'name' => [
                    'jury_team_affiliation_add',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
243 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/jury/categories',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_JURY',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
244 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '',
                ],
                'name' => [
                    'jury_team_categories',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
245 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{categoryId<\\d+>}',
                ],
                'name' => [
                    'jury_team_category',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
246 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{categoryId<\\d+>}/edit',
                ],
                'name' => [
                    'jury_team_category_edit',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
247 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{categoryId<\\d+>}/delete',
                ],
                'name' => [
                    'jury_team_category_delete',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
248 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/add',
                ],
                'name' => [
                    'jury_team_category_add',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
249 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{categoryId<\\d+>}/request-remaining',
                ],
                'name' => [
                    'jury_team_category_request_remaining',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
250 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/jury/teams',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_JURY',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
251 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '',
                ],
                'name' => [
                    'jury_teams',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
252 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{teamId<\\d+>}',
                ],
                'name' => [
                    'jury_team',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
253 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{teamId<\\d+>}/edit',
                ],
                'name' => [
                    'jury_team_edit',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
254 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{teamId<\\d+>}/delete',
                ],
                'name' => [
                    'jury_team_delete',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
255 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/add',
                ],
                'name' => [
                    'jury_team_add',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
256 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/jury/users',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_JURY',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
257 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '',
                ],
                'name' => [
                    'jury_users',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
258 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{userId<\\d+>}',
                ],
                'name' => [
                    'jury_user',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
259 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{userId<\\d+>}/edit',
                ],
                'name' => [
                    'jury_user_edit',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
260 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{userId<\\d+>}/delete',
                ],
                'name' => [
                    'jury_user_delete',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
261 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/add',
                ],
                'name' => [
                    'jury_user_add',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
262 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/generate-passwords',
                ],
                'name' => [
                    'jury_generate_passwords',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
263 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/public',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
264 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '',
                ],
                'name' => [
                    'public_index',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
265 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/change-contest/{contestId<-?\\d+>}',
                ],
                'name' => [
                    'public_change_contest',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
266 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/team/{teamId<\\d+>}',
                ],
                'name' => [
                    'public_team',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
267 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/problems',
                ],
                'name' => [
                    'public_problems',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
268 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/problems/{probId<\\d+>}/text',
                ],
                'name' => [
                    'public_problem_text',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
269 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{probId<\\d+>}/attachment/{attachmentId<\\d+>}',
                ],
                'name' => [
                    'public_problem_attachment',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
270 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{probId<\\d+>}/samples.zip',
                ],
                'name' => [
                    'public_problem_sample_zip',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
271 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
272 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '',
                ],
                'name' => [
                    'root',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
273 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/login',
                ],
                'name' => [
                    'login',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
274 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/register',
                ],
                'name' => [
                    'register',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
275 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Security'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Security')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/team',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_TEAM',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Security' => [
                'expression' => [
                    2 => 'user.getTeam() !== null',
                ],
                'message' => [
                    2 => 'You do not have a team associated with your account. ',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
276 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/clarifications/{clarId<\\d+>}',
                ],
                'name' => [
                    'team_clarification',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
277 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/clarifications/add',
                ],
                'name' => [
                    'team_clarification_add',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
278 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '',
                ],
                'name' => [
                    'team_index',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
279 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/change-contest/{contestId<-?\\d+>}',
                ],
                'name' => [
                    'team_change_contest',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
280 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/print',
                ],
                'name' => [
                    'team_print',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
281 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/docs',
                ],
                'name' => [
                    'team_docs',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
282 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Security'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Security')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/team',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_TEAM',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Security' => [
                'expression' => [
                    2 => 'user.getTeam() !== null',
                ],
                'message' => [
                    2 => 'You do not have a team associated with your account.',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
283 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/problems',
                ],
                'name' => [
                    'team_problems',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
284 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/problems/{probId<\\d+>}/text',
                ],
                'name' => [
                    'team_problem_text',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
285 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{probId<\\d+>}/attachment/{attachmentId<\\d+>}',
                ],
                'name' => [
                    'team_problem_attachment',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
286 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{probId<\\d+>}/samples.zip',
                ],
                'name' => [
                    'team_problem_sample_zip',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
287 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/scoreboard',
                ],
                'name' => [
                    'team_scoreboard',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
288 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/team/{teamId<\\d+>}',
                ],
                'name' => [
                    'team_team',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
289 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/submit/{problem}',
                ],
                'name' => [
                    'team_submit',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
290 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/submission/{submitId<\\d+>}',
                ],
                'name' => [
                    'team_submission',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
291 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/submission/{submitId<\\d+>}/download',
                ],
                'name' => [
                    'team_submission_download',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
292 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
            clone ($p['Doctrine\\ORM\\Mapping\\Table'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Table')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'auditlog',
                ],
                'options' => [
                    1 => [
                        'collation' => 'utf8mb4_unicode_ci',
                        'charset' => 'utf8mb4',
                        'comment' => 'Log of all actions performed',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
293 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\GeneratedValue'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\GeneratedValue')),
            clone ($p['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    2 => 'logid',
                ],
                'type' => [
                    2 => 'integer',
                ],
                'length' => [
                    2 => 4,
                ],
                'precision' => [
                    2 => null,
                ],
                'scale' => [
                    2 => null,
                ],
                'options' => [
                    2 => [
                        'comment' => 'Audit log ID',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
294 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'logtime',
                ],
                'type' => [
                    'decimal',
                ],
                'precision' => [
                    32,
                ],
                'scale' => [
                    9,
                ],
                'options' => [
                    [
                        'comment' => 'Timestamp of the logentry',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
295 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'cid',
                ],
                'type' => [
                    'integer',
                ],
                'length' => [
                    4,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Contest ID associated to this entry',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
296 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'user',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    255,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'User who performed this action',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
297 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'datatype',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    32,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'Reference to DB table associated to this entry',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
298 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'dataid',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    64,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Identifier in reference table',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
299 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'action',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    128,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'Description of action performed',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
300 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'extrainfo',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    255,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Optional additional description of the entry',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
301 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
            clone ($p['Doctrine\\ORM\\Mapping\\Table'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Table')),
            clone ($p['Doctrine\\ORM\\Mapping\\Index'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Index')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'balloon',
                    'submitid',
                ],
                'indexes' => [
                    1 => [
                        $o[2],
                    ],
                ],
                'options' => [
                    1 => [
                        'collation' => 'utf8mb4_unicode_ci',
                        'charset' => 'utf8mb4',
                        'comment' => 'Balloons to be handed out',
                    ],
                ],
                'columns' => [
                    2 => [
                        'submitid',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
302 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\GeneratedValue'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\GeneratedValue')),
            clone ($p['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    2 => 'balloonid',
                ],
                'type' => [
                    2 => 'integer',
                ],
                'length' => [
                    2 => 4,
                ],
                'precision' => [
                    2 => null,
                ],
                'scale' => [
                    2 => null,
                ],
                'options' => [
                    2 => [
                        'comment' => 'Balloon ID',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
303 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'done',
                ],
                'type' => [
                    'boolean',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'Has been handed out yet?',
                        'default' => '0',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
304 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'Submission',
                ],
                'inversedBy' => [
                    'balloons',
                ],
                'name' => [
                    1 => 'submitid',
                ],
                'referencedColumnName' => [
                    1 => 'submitid',
                ],
                'onDelete' => [
                    1 => 'CASCADE',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
305 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
            clone ($p['Doctrine\\ORM\\Mapping\\Table'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Table')),
            clone ($p['Doctrine\\ORM\\Mapping\\Index'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Index')),
            clone $p['Doctrine\\ORM\\Mapping\\Index'],
            clone $p['Doctrine\\ORM\\Mapping\\Index'],
            clone $p['Doctrine\\ORM\\Mapping\\Index'],
            clone $p['Doctrine\\ORM\\Mapping\\Index'],
            clone $p['Doctrine\\ORM\\Mapping\\Index'],
            clone ($p['Doctrine\\ORM\\Mapping\\UniqueConstraint'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\UniqueConstraint')),
            clone ($p['Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'clarification',
                    'respid',
                    'probid',
                    'cid',
                    'cid_2',
                    'sender',
                    'recipient',
                    'externalid',
                ],
                'indexes' => [
                    1 => [
                        $o[2],
                        $o[3],
                        $o[4],
                        $o[5],
                        $o[6],
                        $o[7],
                    ],
                ],
                'uniqueConstraints' => [
                    1 => [
                        $o[8],
                    ],
                ],
                'options' => [
                    1 => [
                        'collation' => 'utf8mb4_unicode_ci',
                        'charset' => 'utf8mb4',
                        'comment' => 'Clarification requests by teams and responses by the jury',
                    ],
                    8 => [
                        'lengths' => [
                            null,
                            190,
                        ],
                    ],
                ],
                'columns' => [
                    2 => [
                        'respid',
                    ],
                    [
                        'probid',
                    ],
                    [
                        'cid',
                    ],
                    [
                        'cid',
                        'answered',
                        'submittime',
                    ],
                    [
                        'sender',
                    ],
                    [
                        'recipient',
                    ],
                    [
                        'cid',
                        'externalid',
                    ],
                ],
                'fields' => [
                    9 => 'externalid',
                ],
                'groups' => [
                    9 => [
                        'Default',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[9],
        ],
        []
    );
},
306 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['JMS\\Serializer\\Annotation\\VirtualProperty'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\VirtualProperty')),
            clone ($p['JMS\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\SerializedName')),
            clone ($p['JMS\\Serializer\\Annotation\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Type')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'time',
                    'string',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
307 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['JMS\\Serializer\\Annotation\\VirtualProperty'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\VirtualProperty')),
            clone ($p['JMS\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\SerializedName')),
            clone ($p['JMS\\Serializer\\Annotation\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Type')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'contest_time',
                    'string',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
308 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['JMS\\Serializer\\Annotation\\VirtualProperty'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\VirtualProperty')),
            clone ($p['JMS\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\SerializedName')),
            clone ($p['JMS\\Serializer\\Annotation\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Type')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'problem_id',
                    'string',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
309 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['JMS\\Serializer\\Annotation\\VirtualProperty'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\VirtualProperty')),
            clone ($p['JMS\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\SerializedName')),
            clone ($p['JMS\\Serializer\\Annotation\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Type')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'reply_to_id',
                    'string',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
310 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['JMS\\Serializer\\Annotation\\VirtualProperty'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\VirtualProperty')),
            clone ($p['JMS\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\SerializedName')),
            clone ($p['JMS\\Serializer\\Annotation\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Type')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'from_team_id',
                    'string',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
311 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['JMS\\Serializer\\Annotation\\VirtualProperty'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\VirtualProperty')),
            clone ($p['JMS\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\SerializedName')),
            clone ($p['JMS\\Serializer\\Annotation\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Type')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'to_team_id',
                    'string',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
312 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\GeneratedValue'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\GeneratedValue')),
            clone ($p['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\SerializedName')),
            clone ($p['JMS\\Serializer\\Annotation\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Type')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    2 => 'clarid',
                    'id',
                    'string',
                ],
                'type' => [
                    2 => 'integer',
                ],
                'length' => [
                    2 => 4,
                ],
                'precision' => [
                    2 => null,
                ],
                'scale' => [
                    2 => null,
                ],
                'options' => [
                    2 => [
                        'comment' => 'Clarification ID',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
            $o[4],
        ],
        []
    );
},
313 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'externalid',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    255,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Clarification ID in an external system, should be unique inside a single contest',
                        'collation' => 'utf8mb4_bin',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
314 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'submittime',
                ],
                'type' => [
                    'decimal',
                ],
                'precision' => [
                    32,
                ],
                'scale' => [
                    9,
                ],
                'options' => [
                    [
                        'comment' => 'Time sent',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
315 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'jury_member',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    255,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Name of jury member who answered this',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
316 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'category',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    255,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Category associated to this clarification; only set for non problem clars',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
317 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'queue',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    255,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Queue associated to this clarification',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
318 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\SerializedName')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'body',
                    'text',
                ],
                'type' => [
                    'text',
                ],
                'length' => [
                    4294967295,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'Clarification text',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
319 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'answered',
                ],
                'type' => [
                    'boolean',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'Has been answered by jury?',
                        'default' => '0',
                    ],
                ],
                'groups' => [
                    1 => [
                        'RestrictedNonstrict',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
320 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'Problem',
                ],
                'inversedBy' => [
                    'clarifications',
                ],
                'name' => [
                    1 => 'probid',
                ],
                'referencedColumnName' => [
                    1 => 'probid',
                ],
                'onDelete' => [
                    1 => 'SET NULL',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
321 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'Contest',
                ],
                'inversedBy' => [
                    'clarifications',
                ],
                'name' => [
                    1 => 'cid',
                ],
                'referencedColumnName' => [
                    1 => 'cid',
                ],
                'onDelete' => [
                    1 => 'CASCADE',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
322 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'Clarification',
                ],
                'inversedBy' => [
                    'replies',
                ],
                'name' => [
                    1 => 'respid',
                ],
                'referencedColumnName' => [
                    1 => 'clarid',
                ],
                'onDelete' => [
                    1 => 'SET NULL',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
323 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\OneToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToMany')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'mappedBy' => [
                    'in_reply_to',
                ],
                'targetEntity' => [
                    'Clarification',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
324 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'Team',
                ],
                'inversedBy' => [
                    'sent_clarifications',
                ],
                'name' => [
                    1 => 'sender',
                ],
                'referencedColumnName' => [
                    1 => 'teamid',
                ],
                'onDelete' => [
                    1 => 'CASCADE',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
325 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'Team',
                ],
                'inversedBy' => [
                    'received_clarifications',
                ],
                'name' => [
                    1 => 'recipient',
                ],
                'referencedColumnName' => [
                    1 => 'teamid',
                ],
                'onDelete' => [
                    1 => 'CASCADE',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
326 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
            clone ($p['Doctrine\\ORM\\Mapping\\Table'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Table')),
            clone ($p['Doctrine\\ORM\\Mapping\\UniqueConstraint'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\UniqueConstraint')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'configuration',
                    'name',
                ],
                'uniqueConstraints' => [
                    1 => [
                        $o[2],
                    ],
                ],
                'options' => [
                    1 => [
                        'collation' => 'utf8mb4_unicode_ci',
                        'charset' => 'utf8mb4',
                        'comment' => 'Global configuration variables',
                    ],
                ],
                'columns' => [
                    2 => [
                        'name',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
327 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\GeneratedValue'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\GeneratedValue')),
            clone ($p['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    2 => 'configid',
                ],
                'type' => [
                    2 => 'integer',
                ],
                'length' => [
                    2 => 4,
                ],
                'precision' => [
                    2 => null,
                ],
                'scale' => [
                    2 => null,
                ],
                'options' => [
                    2 => [
                        'comment' => 'Configuration ID',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
328 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'name',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    32,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'Name of the configuration variable',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
329 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'value',
                ],
                'type' => [
                    'json',
                ],
                'length' => [
                    4294967295,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'Content of the configuration variable (JSON encoded)',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
330 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
            clone ($p['Doctrine\\ORM\\Mapping\\Table'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Table')),
            clone ($p['Doctrine\\ORM\\Mapping\\Index'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Index')),
            clone ($p['Doctrine\\ORM\\Mapping\\UniqueConstraint'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\UniqueConstraint')),
            clone $p['Doctrine\\ORM\\Mapping\\UniqueConstraint'],
            clone ($p['JMS\\Serializer\\Annotation\\VirtualProperty'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\VirtualProperty')),
            clone ($p['JMS\\Serializer\\Annotation\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Type')),
            clone $p['JMS\\Serializer\\Annotation\\VirtualProperty'],
            clone $p['JMS\\Serializer\\Annotation\\Type'],
            clone ($p['Doctrine\\ORM\\Mapping\\HasLifecycleCallbacks'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\HasLifecycleCallbacks')),
            clone ($p['Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity')),
            clone $p['Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'contest',
                    'cid',
                    'externalid',
                    'shortname',
                    'formalName',
                    'string',
                    'penaltyTime',
                    'int',
                ],
                'indexes' => [
                    1 => [
                        $o[2],
                    ],
                ],
                'uniqueConstraints' => [
                    1 => [
                        $o[3],
                        $o[4],
                    ],
                ],
                'options' => [
                    1 => [
                        'collation' => 'utf8mb4_unicode_ci',
                        'charset' => 'utf8mb4',
                        'comment' => 'Contests that will be run with this install',
                    ],
                    3 => [
                        'lengths' => [
                            190,
                        ],
                    ],
                    [
                        'lengths' => [
                            190,
                        ],
                    ],
                    [
                        $o[6],
                    ],
                    7 => [
                        $o[8],
                    ],
                ],
                'columns' => [
                    2 => [
                        'cid',
                        'enabled',
                    ],
                    [
                        'externalid',
                    ],
                    [
                        'shortname',
                    ],
                ],
                'exp' => [
                    5 => 'object.getName()',
                    7 => '0',
                ],
                'fields' => [
                    10 => 'shortname',
                    'externalid',
                ],
                'groups' => [
                    10 => [
                        'Default',
                    ],
                    [
                        'Default',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[5],
            $o[7],
            $o[9],
            $o[10],
            $o[11],
        ],
        []
    );
},
331 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['JMS\\Serializer\\Annotation\\VirtualProperty'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\VirtualProperty')),
            clone ($p['JMS\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\SerializedName')),
            clone ($p['JMS\\Serializer\\Annotation\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Type')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'start_time',
                    'DateTime',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
332 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['JMS\\Serializer\\Annotation\\VirtualProperty'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\VirtualProperty')),
            clone ($p['JMS\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\SerializedName')),
            clone ($p['JMS\\Serializer\\Annotation\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Type')),
            clone ($p['JMS\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'end_time',
                    'DateTime',
                ],
                'groups' => [
                    3 => [
                        'Nonstrict',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
        ],
        []
    );
},
333 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['JMS\\Serializer\\Annotation\\VirtualProperty'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\VirtualProperty')),
            clone ($p['JMS\\Serializer\\Annotation\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Type')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'string',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
334 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\PrePersist'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\PrePersist')),
            clone ($p['Doctrine\\ORM\\Mapping\\PreUpdate'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\PreUpdate')),
        ],
        null,
        [],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
335 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Validator\\Constraints\\Callback'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Callback')),
        ],
        null,
        [
            'stdClass' => [
                'callback' => [
                    [],
                ],
                'groups' => [
                    [
                        'Default',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
336 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\GeneratedValue'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\GeneratedValue')),
            clone ($p['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\SerializedName')),
            clone ($p['JMS\\Serializer\\Annotation\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Type')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    2 => 'cid',
                    'id',
                    'string',
                ],
                'type' => [
                    2 => 'integer',
                ],
                'length' => [
                    2 => 4,
                ],
                'precision' => [
                    2 => null,
                ],
                'scale' => [
                    2 => null,
                ],
                'options' => [
                    2 => [
                        'comment' => 'Contest ID',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
            $o[4],
        ],
        []
    );
},
337 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Groups')),
            clone ($p['JMS\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\SerializedName')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'externalid',
                    2 => 'external_id',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    255,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Contest ID in an external system',
                        'collation' => 'utf8mb4_bin',
                    ],
                ],
                'groups' => [
                    1 => [
                        'Nonstrict',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
338 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'name',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    255,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'Descriptive name',
                    ],
                ],
                'groups' => [
                    1 => [
                        'Default',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
339 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Groups')),
            clone ($p['App\\Validator\\Constraints\\Identifier'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('App\\Validator\\Constraints\\Identifier')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'shortname',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    255,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'Short name for this contest',
                    ],
                ],
                'groups' => [
                    1 => [
                        'Nonstrict',
                    ],
                    [
                        'Default',
                    ],
                    [
                        'Default',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
        ],
        []
    );
},
340 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'activatetime',
                ],
                'type' => [
                    'decimal',
                ],
                'precision' => [
                    32,
                ],
                'scale' => [
                    9,
                ],
                'options' => [
                    [
                        'comment' => 'Time contest becomes visible in team/public views',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
341 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'starttime',
                ],
                'type' => [
                    'decimal',
                ],
                'precision' => [
                    32,
                ],
                'scale' => [
                    9,
                ],
                'options' => [
                    [
                        'comment' => 'Time contest starts, submissions accepted',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
342 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'starttime_enabled',
                ],
                'type' => [
                    'boolean',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'If disabled, starttime is not used, e.g. to delay contest start',
                        'default' => 1,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
343 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'freezetime',
                ],
                'type' => [
                    'decimal',
                ],
                'precision' => [
                    32,
                ],
                'scale' => [
                    9,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Time scoreboard is frozen',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
344 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'endtime',
                ],
                'type' => [
                    'decimal',
                ],
                'precision' => [
                    32,
                ],
                'scale' => [
                    9,
                ],
                'options' => [
                    [
                        'comment' => 'Time after which no more submissions are accepted',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
345 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'unfreezetime',
                ],
                'type' => [
                    'decimal',
                ],
                'precision' => [
                    32,
                ],
                'scale' => [
                    9,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Unfreeze a frozen scoreboard at this time',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
346 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'finalizetime',
                ],
                'type' => [
                    'decimal',
                ],
                'precision' => [
                    32,
                ],
                'scale' => [
                    9,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Time when contest was finalized, null if not yet',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
347 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'finalizecomment',
                ],
                'type' => [
                    'text',
                ],
                'length' => [
                    65535,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Comments by the finalizer',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
348 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'b',
                ],
                'type' => [
                    'smallint',
                ],
                'length' => [
                    3,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'Number of extra bronze medals',
                        'unsigned' => 'true',
                        'default' => 0,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
349 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'medals_enabled',
                ],
                'type' => [
                    'boolean',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'default' => 0,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
350 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToMany')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinTable'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinTable')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
            clone $p['Doctrine\\ORM\\Mapping\\JoinColumn'],
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'App\\Entity\\TeamCategory',
                ],
                'inversedBy' => [
                    'contests_for_medals',
                ],
                'name' => [
                    1 => 'contestteamcategoryformedals',
                    'cid',
                    'categoryid',
                ],
                'joinColumns' => [
                    1 => [
                        $o[2],
                    ],
                ],
                'inverseJoinColumns' => [
                    1 => [
                        $o[3],
                    ],
                ],
                'referencedColumnName' => [
                    2 => 'cid',
                    'categoryid',
                ],
                'onDelete' => [
                    2 => 'CASCADE',
                    'CASCADE',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[4],
        ],
        []
    );
},
351 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'gold_medals',
                ],
                'type' => [
                    'smallint',
                ],
                'length' => [
                    3,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'Number of gold medals',
                        'unsigned' => 'true',
                        'default' => 4,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
352 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'silver_medals',
                ],
                'type' => [
                    'smallint',
                ],
                'length' => [
                    3,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'Number of silver medals',
                        'unsigned' => 'true',
                        'default' => 4,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
353 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'bronze_medals',
                ],
                'type' => [
                    'smallint',
                ],
                'length' => [
                    3,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'Number of bronze medals',
                        'unsigned' => 'true',
                        'default' => 4,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
354 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'deactivatetime',
                ],
                'type' => [
                    'decimal',
                ],
                'precision' => [
                    32,
                ],
                'scale' => [
                    9,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Time contest becomes invisible in team/public views',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
355 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
            clone ($p['App\\Validator\\Constraints\\TimeString'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('App\\Validator\\Constraints\\TimeString')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'activatetime_string',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    64,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'Authoritative absolute or relative string representation of activatetime',
                    ],
                ],
                'relativeIsPositive' => [
                    2 => false,
                ],
                'groups' => [
                    2 => [
                        'Default',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
356 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
            clone ($p['App\\Validator\\Constraints\\TimeString'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('App\\Validator\\Constraints\\TimeString')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'starttime_string',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    64,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'Authoritative absolute (only!) string representation of starttime',
                    ],
                ],
                'allowRelative' => [
                    2 => false,
                ],
                'groups' => [
                    2 => [
                        'Default',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
357 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
            clone ($p['App\\Validator\\Constraints\\TimeString'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('App\\Validator\\Constraints\\TimeString')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'freezetime_string',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    64,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Authoritative absolute or relative string representation of freezetime',
                    ],
                ],
                'groups' => [
                    2 => [
                        'Default',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
358 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
            clone ($p['App\\Validator\\Constraints\\TimeString'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('App\\Validator\\Constraints\\TimeString')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'endtime_string',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    64,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'Authoritative absolute or relative string representation of endtime',
                    ],
                ],
                'groups' => [
                    2 => [
                        'Default',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
359 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
            clone ($p['App\\Validator\\Constraints\\TimeString'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('App\\Validator\\Constraints\\TimeString')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'unfreezetime_string',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    64,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Authoritative absolute or relative string representation of unfreezetime',
                    ],
                ],
                'groups' => [
                    2 => [
                        'Default',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
360 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
            clone ($p['App\\Validator\\Constraints\\TimeString'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('App\\Validator\\Constraints\\TimeString')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'deactivatetime_string',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    64,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Authoritative absolute or relative string representation of deactivatetime',
                    ],
                ],
                'groups' => [
                    2 => [
                        'Default',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
361 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'enabled',
                ],
                'type' => [
                    'boolean',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'Whether this contest can be active',
                        'default' => 1,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
362 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'process_balloons',
                ],
                'type' => [
                    'boolean',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'Will balloons be processed for this contest?',
                        'default' => 1,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
363 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'public',
                ],
                'type' => [
                    'boolean',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'Is this contest visible for the public?',
                        'default' => 1,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
364 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\File'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\File')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'mimeTypes' => [
                    [
                        'image/png',
                        'image/jpeg',
                        'image/svg+xml',
                    ],
                ],
                'mimeTypesMessage' => [
                    'Only PNG\'s, JPG\'s and SVG\'s are allowed',
                ],
                'groups' => [
                    [
                        'Default',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
365 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [],
        [
            $o[0],
        ],
        []
    );
},
366 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'open_to_all_teams',
                ],
                'type' => [
                    'boolean',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'Is this contest open to all teams?',
                        'default' => 1,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
367 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToMany')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinTable'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinTable')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
            clone $p['Doctrine\\ORM\\Mapping\\JoinColumn'],
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'Team',
                ],
                'inversedBy' => [
                    'contests',
                ],
                'name' => [
                    1 => 'contestteam',
                    'cid',
                    'teamid',
                ],
                'joinColumns' => [
                    1 => [
                        $o[2],
                    ],
                ],
                'inverseJoinColumns' => [
                    1 => [
                        $o[3],
                    ],
                ],
                'referencedColumnName' => [
                    2 => 'cid',
                    'teamid',
                ],
                'onDelete' => [
                    2 => 'CASCADE',
                    'CASCADE',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[4],
        ],
        []
    );
},
368 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToMany')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinTable'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinTable')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
            clone $p['Doctrine\\ORM\\Mapping\\JoinColumn'],
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'App\\Entity\\TeamCategory',
                ],
                'inversedBy' => [
                    'contests',
                ],
                'name' => [
                    1 => 'contestteamcategory',
                    'cid',
                    'categoryid',
                ],
                'joinColumns' => [
                    1 => [
                        $o[2],
                    ],
                ],
                'inverseJoinColumns' => [
                    1 => [
                        $o[3],
                    ],
                ],
                'referencedColumnName' => [
                    2 => 'cid',
                    'categoryid',
                ],
                'onDelete' => [
                    2 => 'CASCADE',
                    'CASCADE',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[4],
        ],
        []
    );
},
369 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\OneToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToMany')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'mappedBy' => [
                    'contest',
                ],
                'targetEntity' => [
                    'Clarification',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
370 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\OneToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToMany')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'mappedBy' => [
                    'contest',
                ],
                'targetEntity' => [
                    'Submission',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
371 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\OneToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToMany')),
            clone ($p['Doctrine\\ORM\\Mapping\\OrderBy'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OrderBy')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Valid'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Valid')),
        ],
        null,
        [
            'stdClass' => [
                'mappedBy' => [
                    'contest',
                ],
                'targetEntity' => [
                    'ContestProblem',
                ],
                'cascade' => [
                    [
                        'persist',
                    ],
                ],
                'orphanRemoval' => [
                    true,
                ],
                'value' => [
                    1 => [
                        'shortname' => 'ASC',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
        ],
        []
    );
},
372 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\OneToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToMany')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'mappedBy' => [
                    'contest',
                ],
                'targetEntity' => [
                    'InternalError',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
373 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\OneToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToMany')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Valid'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Valid')),
        ],
        null,
        [
            'stdClass' => [
                'mappedBy' => [
                    'contest',
                ],
                'targetEntity' => [
                    'App\\Entity\\RemovedInterval',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
374 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\OneToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToMany')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Valid'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Valid')),
        ],
        null,
        [
            'stdClass' => [
                'mappedBy' => [
                    'contest',
                ],
                'targetEntity' => [
                    'App\\Entity\\ExternalContestSource',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
375 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
            clone ($p['Doctrine\\ORM\\Mapping\\Table'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Table')),
            clone ($p['Doctrine\\ORM\\Mapping\\Index'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Index')),
            clone $p['Doctrine\\ORM\\Mapping\\Index'],
            clone ($p['Doctrine\\ORM\\Mapping\\UniqueConstraint'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\UniqueConstraint')),
            clone ($p['JMS\\Serializer\\Annotation\\VirtualProperty'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\VirtualProperty')),
            clone ($p['JMS\\Serializer\\Annotation\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Type')),
            clone $p['JMS\\Serializer\\Annotation\\VirtualProperty'],
            clone ($p['JMS\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Groups')),
            clone $p['JMS\\Serializer\\Annotation\\Type'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'contestproblem',
                    'cid',
                    'probid',
                    'shortname',
                    'id',
                    'string',
                    'short_name',
                    9 => 'string',
                ],
                'indexes' => [
                    1 => [
                        $o[2],
                        $o[3],
                    ],
                ],
                'uniqueConstraints' => [
                    1 => [
                        $o[4],
                    ],
                ],
                'options' => [
                    1 => [
                        'collation' => 'utf8mb4_unicode_ci',
                        'charset' => 'utf8mb4',
                        'comment' => 'Many-to-Many mapping of contests and problems',
                    ],
                    4 => [
                        'lengths' => [
                            null,
                            190,
                        ],
                    ],
                    [
                        $o[6],
                    ],
                    7 => [
                        $o[8],
                        $o[9],
                    ],
                ],
                'columns' => [
                    2 => [
                        'cid',
                    ],
                    [
                        'probid',
                    ],
                    [
                        'cid',
                        'shortname',
                    ],
                ],
                'exp' => [
                    5 => 'object.getProblem().getProbid()',
                    7 => 'object.getShortname()',
                ],
                'groups' => [
                    8 => [
                        'Nonstrict',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[5],
            $o[7],
        ],
        []
    );
},
376 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\SerializedName')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'shortname',
                    'label',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    255,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'Unique problem ID within contest, used to sort problems in the scoreboard and typically a single letter',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
377 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\GreaterThanOrEqual'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\GreaterThanOrEqual')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'points',
                ],
                'type' => [
                    'integer',
                ],
                'length' => [
                    4,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'Number of points earned by solving this problem',
                        'unsigned' => true,
                        'default' => '1',
                    ],
                ],
                'value' => [
                    2 => 0,
                ],
                'groups' => [
                    2 => [
                        'Default',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
378 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'allow_submit',
                ],
                'type' => [
                    'boolean',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'Are submissions accepted for this problem?',
                        'default' => '1',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
379 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'allow_judge',
                ],
                'type' => [
                    'boolean',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'Are submissions for this problem judged?',
                        'default' => '1',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
380 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'color',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    32,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Balloon colour to display on the scoreboard',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
381 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'lazy_eval_results',
                ],
                'type' => [
                    'boolean',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Whether to do lazy evaluation for this problem; if set this overrides the global configuration setting',
                        'unsigned' => 'true',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
382 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    1 => 'Contest',
                ],
                'inversedBy' => [
                    1 => 'problems',
                ],
                'name' => [
                    2 => 'cid',
                ],
                'referencedColumnName' => [
                    2 => 'cid',
                ],
                'onDelete' => [
                    2 => 'CASCADE',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
        ],
        []
    );
},
383 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
            clone ($p['JMS\\Serializer\\Annotation\\Inline'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Inline')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    1 => 'Problem',
                ],
                'fetch' => [
                    1 => 'EAGER',
                ],
                'inversedBy' => [
                    1 => 'contest_problems',
                ],
                'name' => [
                    2 => 'probid',
                ],
                'referencedColumnName' => [
                    2 => 'probid',
                ],
                'onDelete' => [
                    2 => 'CASCADE',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
        ],
        []
    );
},
384 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\OneToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToMany')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'mappedBy' => [
                    'contest_problem',
                ],
                'targetEntity' => [
                    'App\\Entity\\Submission',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
385 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
            clone ($p['Doctrine\\ORM\\Mapping\\Table'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Table')),
            clone ($p['Doctrine\\ORM\\Mapping\\Index'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Index')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'debug_package',
                    'judgingid',
                ],
                'indexes' => [
                    1 => [
                        $o[2],
                    ],
                ],
                'options' => [
                    1 => [
                        'collation' => 'utf8mb4_unicode_ci',
                        'charset' => 'utf8mb4',
                        'comment' => 'Debug packages.',
                    ],
                ],
                'columns' => [
                    2 => [
                        'judgingid',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
386 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\GeneratedValue'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\GeneratedValue')),
            clone ($p['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    2 => 'debug_package_id',
                ],
                'type' => [
                    2 => 'integer',
                ],
                'length' => [
                    2 => 4,
                ],
                'precision' => [
                    2 => null,
                ],
                'scale' => [
                    2 => null,
                ],
                'options' => [
                    2 => [
                        'comment' => 'Debug Package ID',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
387 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'Judging',
                ],
                'inversedBy' => [
                    'debug_packages',
                ],
                'name' => [
                    1 => 'judgingid',
                ],
                'referencedColumnName' => [
                    1 => 'judgingid',
                ],
                'onDelete' => [
                    1 => 'CASCADE',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
388 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'filename',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    255,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'Name of the file where we stored the debug package.',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
389 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'Judgehost',
                ],
                'name' => [
                    1 => 'judgehostid',
                ],
                'referencedColumnName' => [
                    1 => 'judgehostid',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
390 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Table'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Table')),
            clone ($p['Doctrine\\ORM\\Mapping\\Index'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Index')),
            clone $p['Doctrine\\ORM\\Mapping\\Index'],
            clone $p['Doctrine\\ORM\\Mapping\\Index'],
            clone ($p['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'event',
                    'eventtime',
                    'cid',
                    'endpoint',
                ],
                'indexes' => [
                    [
                        $o[1],
                        $o[2],
                        $o[3],
                    ],
                ],
                'options' => [
                    [
                        'collation' => 'utf8mb4_unicode_ci',
                        'charset' => 'utf8mb4',
                        'comment' => 'Log of all events during a contest',
                    ],
                ],
                'columns' => [
                    1 => [
                        'cid',
                        'eventtime',
                    ],
                    [
                        'cid',
                    ],
                    [
                        'cid',
                        'endpointtype',
                        'endpointid',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[4],
        ],
        []
    );
},
391 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Doctrine\\ORM\\Mapping\\GeneratedValue'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\GeneratedValue')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'eventid',
                ],
                'type' => [
                    1 => 'integer',
                ],
                'length' => [
                    1 => 4,
                ],
                'precision' => [
                    1 => null,
                ],
                'scale' => [
                    1 => null,
                ],
                'options' => [
                    1 => [
                        'comment' => 'Event ID',
                        'unsigned' => true,
                    ],
                ],
                'strategy' => [
                    2 => 'IDENTITY',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
392 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'eventtime',
                ],
                'type' => [
                    'decimal',
                ],
                'precision' => [
                    32,
                ],
                'scale' => [
                    9,
                ],
                'options' => [
                    [
                        'comment' => 'When the event occurred',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
393 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'endpointtype',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    32,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'API endpoint associated to this entry',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
394 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'endpointid',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    64,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'API endpoint (external) ID',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
395 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'action',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    32,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'Description of action performed',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
396 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'content',
                ],
                'type' => [
                    'binaryjson',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'JSON encoded content of the change, as provided in the event feed',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
397 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'Contest',
                ],
                'inversedBy' => [
                    'problems',
                ],
                'name' => [
                    1 => 'cid',
                ],
                'referencedColumnName' => [
                    1 => 'cid',
                ],
                'onDelete' => [
                    1 => 'CASCADE',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
398 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
            clone ($p['Doctrine\\ORM\\Mapping\\Table'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Table')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'executable',
                ],
                'options' => [
                    1 => [
                        'collation' => 'utf8mb4_unicode_ci',
                        'charset' => 'utf8mb4',
                        'comment' => 'Compile, compare, and run script executable bundles',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
399 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
            clone ($p['App\\Validator\\Constraints\\Identifier'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('App\\Validator\\Constraints\\Identifier')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'execid',
                ],
                'type' => [
                    1 => 'string',
                ],
                'length' => [
                    1 => 32,
                ],
                'precision' => [
                    1 => null,
                ],
                'scale' => [
                    1 => null,
                ],
                'options' => [
                    1 => [
                        'comment' => 'Executable ID (string)',
                    ],
                ],
                'groups' => [
                    2 => [
                        'Default',
                    ],
                    [
                        'Default',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
        ],
        []
    );
},
400 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'description',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    255,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Description of this executable',
                    ],
                ],
                'groups' => [
                    1 => [
                        'Default',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
401 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Choice'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Choice')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'type',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    32,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'Type of executable',
                    ],
                ],
                'choices' => [
                    1 => [
                        'compare',
                        'compile',
                        'debug',
                        'run',
                    ],
                ],
                'groups' => [
                    1 => [
                        'Default',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
402 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\OneToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'ImmutableExecutable',
                ],
                'name' => [
                    1 => 'immutable_execid',
                ],
                'referencedColumnName' => [
                    1 => 'immutable_execid',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
403 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\OneToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToMany')),
        ],
        null,
        [
            'stdClass' => [
                'mappedBy' => [
                    'compile_executable',
                ],
                'targetEntity' => [
                    'Language',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
404 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\OneToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToMany')),
        ],
        null,
        [
            'stdClass' => [
                'mappedBy' => [
                    'compare_executable',
                ],
                'targetEntity' => [
                    'Problem',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
405 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\OneToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToMany')),
        ],
        null,
        [
            'stdClass' => [
                'mappedBy' => [
                    'run_executable',
                ],
                'targetEntity' => [
                    'Problem',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
406 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
            clone ($p['Doctrine\\ORM\\Mapping\\Table'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Table')),
            clone ($p['Doctrine\\ORM\\Mapping\\Index'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Index')),
            clone ($p['Doctrine\\ORM\\Mapping\\UniqueConstraint'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\UniqueConstraint')),
            clone $p['Doctrine\\ORM\\Mapping\\UniqueConstraint'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'executable_file',
                    'immutable_execid',
                    'rankindex',
                    'filename',
                ],
                'indexes' => [
                    1 => [
                        $o[2],
                    ],
                ],
                'uniqueConstraints' => [
                    1 => [
                        $o[3],
                        $o[4],
                    ],
                ],
                'options' => [
                    1 => [
                        'collation' => 'utf8mb4_unicode_ci',
                        'charset' => 'utf8mb4',
                        'comment' => 'Files associated to an executable',
                    ],
                    4 => [
                        'lengths' => [
                            null,
                            190,
                        ],
                    ],
                ],
                'columns' => [
                    2 => [
                        'immutable_execid',
                    ],
                    [
                        'immutable_execid',
                        'ranknumber',
                    ],
                    [
                        'immutable_execid',
                        'filename',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
407 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\GeneratedValue'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\GeneratedValue')),
            clone ($p['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    2 => 'execfileid',
                ],
                'type' => [
                    2 => 'integer',
                ],
                'length' => [
                    2 => 4,
                ],
                'precision' => [
                    2 => null,
                ],
                'scale' => [
                    2 => null,
                ],
                'options' => [
                    2 => [
                        'comment' => 'Executable file ID',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
408 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'filename',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    255,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'Filename as uploaded',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
409 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'ranknumber',
                ],
                'type' => [
                    'integer',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'Order of the executable files, zero-indexed',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
410 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'ImmutableExecutable',
                ],
                'inversedBy' => [
                    'files',
                ],
                'name' => [
                    1 => 'immutable_execid',
                ],
                'referencedColumnName' => [
                    1 => 'immutable_execid',
                ],
                'onDelete' => [
                    1 => 'CASCADE',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
411 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'file_content',
                ],
                'type' => [
                    'blobtext',
                ],
                'length' => [
                    4294967295,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'Full file content',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
412 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'hash',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    32,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'hash of the content',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
413 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'is_executable',
                ],
                'type' => [
                    'boolean',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'Whether this file gets an executable bit.',
                        'default' => '0',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
414 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
            clone ($p['Doctrine\\ORM\\Mapping\\Table'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Table')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'external_contest_source',
                ],
                'options' => [
                    1 => [
                        'collation' => 'utf8mb4_unicode_ci',
                        'charset' => 'utf8mb4',
                        'comment' => 'Sources for external contests',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
415 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\GeneratedValue'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\GeneratedValue')),
            clone ($p['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    2 => 'extsourceid',
                ],
                'type' => [
                    2 => 'integer',
                ],
                'length' => [
                    2 => 4,
                ],
                'precision' => [
                    2 => null,
                ],
                'scale' => [
                    2 => null,
                ],
                'options' => [
                    2 => [
                        'comment' => 'External contest source ID',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
416 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'enabled',
                ],
                'type' => [
                    'boolean',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'Is this contest source currently enabled?',
                        'default' => '1',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
417 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'type',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    255,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'Type of this contest source',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
418 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'source',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    255,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'Source for this contest',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
419 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'username',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    255,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Username for this source, if any',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
420 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'password',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    255,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Password for this source, if any',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
421 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'last_event_id',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    255,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Last encountered event ID, if any',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
422 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'last_poll_time',
                ],
                'type' => [
                    'decimal',
                ],
                'precision' => [
                    32,
                ],
                'scale' => [
                    9,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Time of last poll by event feed reader',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
423 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'Contest',
                ],
                'inversedBy' => [
                    'externalContestSources',
                ],
                'name' => [
                    1 => 'cid',
                ],
                'referencedColumnName' => [
                    1 => 'cid',
                ],
                'onDelete' => [
                    1 => 'CASCADE',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
424 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\OneToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToMany')),
        ],
        null,
        [
            'stdClass' => [
                'mappedBy' => [
                    'externalContestSource',
                ],
                'targetEntity' => [
                    'App\\Entity\\ExternalSourceWarning',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
425 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Table'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Table')),
            clone ($p['Doctrine\\ORM\\Mapping\\Index'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Index')),
            clone $p['Doctrine\\ORM\\Mapping\\Index'],
            clone $p['Doctrine\\ORM\\Mapping\\Index'],
            clone ($p['Doctrine\\ORM\\Mapping\\UniqueConstraint'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\UniqueConstraint')),
            clone ($p['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'external_judgement',
                    'submitid',
                    'cid',
                    'verified',
                    'externalid',
                ],
                'indexes' => [
                    [
                        $o[1],
                        $o[2],
                        $o[3],
                    ],
                ],
                'uniqueConstraints' => [
                    [
                        $o[4],
                    ],
                ],
                'options' => [
                    [
                        'collation' => 'utf8mb4_unicode_ci',
                        'charset' => 'utf8mb4',
                        'comment' => 'Judgement in external system',
                    ],
                    4 => [
                        'lengths' => [
                            null,
                            190,
                        ],
                    ],
                ],
                'columns' => [
                    1 => [
                        'submitid',
                    ],
                    [
                        'cid',
                    ],
                    [
                        'verified',
                    ],
                    [
                        'cid',
                        'externalid',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[5],
        ],
        []
    );
},
426 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\GeneratedValue'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\GeneratedValue')),
            clone ($p['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    2 => 'extjudgementid',
                ],
                'type' => [
                    2 => 'integer',
                ],
                'precision' => [
                    2 => null,
                ],
                'scale' => [
                    2 => null,
                ],
                'options' => [
                    2 => [
                        'comment' => 'External judgement ID',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
427 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'externalid',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    255,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Judgement ID in external system, should be unique inside a single contest',
                        'collation' => 'utf8mb4_bin',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
428 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'result',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    32,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Result string as obtained from external system. null if not finished yet',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
429 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'verified',
                ],
                'type' => [
                    'boolean',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'Result / difference verified?',
                        'default' => 0,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
430 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'jury_member',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    255,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Name of user who verified the result / diference',
                        'default' => null,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
431 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'verify_comment',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    255,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Optional additional information provided by the verifier',
                        'default' => null,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
432 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'starttime',
                ],
                'type' => [
                    'decimal',
                ],
                'precision' => [
                    32,
                ],
                'scale' => [
                    9,
                ],
                'options' => [
                    [
                        'comment' => 'Time judging started',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
433 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'endtime',
                ],
                'type' => [
                    'decimal',
                ],
                'precision' => [
                    32,
                ],
                'scale' => [
                    9,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Time judging ended, null = still busy',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
434 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'valid',
                ],
                'type' => [
                    'boolean',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'Old external judgement is marked as invalid when receiving a new one',
                        'default' => '1',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
435 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'App\\Entity\\Contest',
                ],
                'name' => [
                    1 => 'cid',
                ],
                'referencedColumnName' => [
                    1 => 'cid',
                ],
                'onDelete' => [
                    1 => 'CASCADE',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
436 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'Submission',
                ],
                'inversedBy' => [
                    'external_judgements',
                ],
                'name' => [
                    1 => 'submitid',
                ],
                'referencedColumnName' => [
                    1 => 'submitid',
                ],
                'onDelete' => [
                    1 => 'CASCADE',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
437 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\OneToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToMany')),
        ],
        null,
        [
            'stdClass' => [
                'mappedBy' => [
                    'external_judgement',
                ],
                'targetEntity' => [
                    'ExternalRun',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
438 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Table'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Table')),
            clone ($p['Doctrine\\ORM\\Mapping\\Index'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Index')),
            clone $p['Doctrine\\ORM\\Mapping\\Index'],
            clone ($p['Doctrine\\ORM\\Mapping\\UniqueConstraint'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\UniqueConstraint')),
            clone ($p['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'external_run',
                    'extjudgementid',
                    'testcaseid',
                    'externalid',
                ],
                'indexes' => [
                    [
                        $o[1],
                        $o[2],
                    ],
                ],
                'uniqueConstraints' => [
                    [
                        $o[3],
                    ],
                ],
                'options' => [
                    [
                        'collation' => 'utf8mb4_unicode_ci',
                        'charset' => 'utf8mb4',
                        'comment' => 'Run in external system',
                    ],
                    3 => [
                        'lengths' => [
                            null,
                            190,
                        ],
                    ],
                ],
                'columns' => [
                    1 => [
                        'extjudgementid',
                    ],
                    [
                        'testcaseid',
                    ],
                    [
                        'cid',
                        'externalid',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[4],
        ],
        []
    );
},
439 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\GeneratedValue'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\GeneratedValue')),
            clone ($p['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    2 => 'extrunid',
                ],
                'type' => [
                    2 => 'integer',
                ],
                'length' => [
                    2 => 4,
                ],
                'precision' => [
                    2 => null,
                ],
                'scale' => [
                    2 => null,
                ],
                'options' => [
                    2 => [
                        'comment' => 'External run ID',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
440 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'externalid',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    255,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Run ID in external system, should be unique inside a single contest',
                        'collation' => 'utf8mb4_bin',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
441 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'result',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    32,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'Result string as obtained from external system',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
442 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'endtime',
                ],
                'type' => [
                    'decimal',
                ],
                'precision' => [
                    32,
                ],
                'scale' => [
                    9,
                ],
                'options' => [
                    [
                        'comment' => 'Time run ended',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
443 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'runtime',
                ],
                'type' => [
                    'float',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'Running time on this testcase',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
444 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'ExternalJudgement',
                ],
                'inversedBy' => [
                    'external_runs',
                ],
                'name' => [
                    1 => 'extjudgementid',
                ],
                'referencedColumnName' => [
                    1 => 'extjudgementid',
                ],
                'onDelete' => [
                    1 => 'CASCADE',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
445 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'Testcase',
                ],
                'inversedBy' => [
                    'external_runs',
                ],
                'name' => [
                    1 => 'testcaseid',
                ],
                'referencedColumnName' => [
                    1 => 'testcaseid',
                ],
                'onDelete' => [
                    1 => 'CASCADE',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
446 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
            clone ($p['Doctrine\\ORM\\Mapping\\Table'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Table')),
            clone ($p['Doctrine\\ORM\\Mapping\\UniqueConstraint'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\UniqueConstraint')),
            clone ($p['Doctrine\\ORM\\Mapping\\HasLifecycleCallbacks'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\HasLifecycleCallbacks')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'external_source_warning',
                    'hash',
                ],
                'uniqueConstraints' => [
                    1 => [
                        $o[2],
                    ],
                ],
                'options' => [
                    1 => [
                        'collation' => 'utf8mb4_unicode_ci',
                        'charset' => 'utf8mb4',
                        'comment' => 'Warnings for external sources',
                    ],
                    [
                        'lengths' => [
                            null,
                            190,
                        ],
                    ],
                ],
                'columns' => [
                    2 => [
                        'extsourceid',
                        'hash',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[3],
        ],
        []
    );
},
447 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\PrePersist'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\PrePersist')),
        ],
        null,
        [],
        [
            $o[0],
        ],
        []
    );
},
448 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\GeneratedValue'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\GeneratedValue')),
            clone ($p['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    2 => 'extwarningid',
                ],
                'type' => [
                    2 => 'integer',
                ],
                'length' => [
                    2 => 4,
                ],
                'precision' => [
                    2 => null,
                ],
                'scale' => [
                    2 => null,
                ],
                'options' => [
                    2 => [
                        'comment' => 'External source warning ID',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
449 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'last_event_id',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    255,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'Last event ID this warning happened at',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
450 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'time',
                ],
                'type' => [
                    'decimal',
                ],
                'precision' => [
                    32,
                ],
                'scale' => [
                    9,
                ],
                'options' => [
                    [
                        'comment' => 'Time this warning happened last',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
451 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'entity_type',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    255,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'Type of the entity for this warning',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
452 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'entity_id',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    255,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'ID of the entity for this warning',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
453 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'type',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    255,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'Type of this warning',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
454 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'hash',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    255,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'Hash of this warning. Unique within the source.',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
455 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'content',
                ],
                'type' => [
                    'json',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'JSON encoded content of the warning. Type-specific.',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
456 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'ExternalContestSource',
                ],
                'inversedBy' => [
                    'warnings',
                ],
                'name' => [
                    1 => 'extsourceid',
                ],
                'referencedColumnName' => [
                    1 => 'extsourceid',
                ],
                'onDelete' => [
                    1 => 'CASCADE',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
457 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
            clone ($p['Doctrine\\ORM\\Mapping\\Table'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Table')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'immutable_executable',
                ],
                'options' => [
                    1 => [
                        'collation' => 'utf8mb4_unicode_ci',
                        'charset' => 'utf8mb4',
                        'comment' => 'Immutable wrapper for a collection of files for executable bundles.',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
458 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\GeneratedValue'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\GeneratedValue')),
            clone ($p['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    2 => 'immutable_execid',
                ],
                'type' => [
                    2 => 'integer',
                ],
                'length' => [
                    2 => 4,
                ],
                'precision' => [
                    2 => null,
                ],
                'scale' => [
                    2 => null,
                ],
                'options' => [
                    2 => [
                        'comment' => 'ID',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
459 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'User',
                ],
                'name' => [
                    1 => 'userid',
                ],
                'referencedColumnName' => [
                    1 => 'userid',
                ],
                'onDelete' => [
                    1 => 'SET NULL',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
460 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\OneToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToMany')),
            clone ($p['Doctrine\\ORM\\Mapping\\OrderBy'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OrderBy')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'mappedBy' => [
                    'immutableExecutable',
                ],
                'targetEntity' => [
                    'ExecutableFile',
                ],
                'value' => [
                    1 => [
                        'filename' => 'ASC',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
461 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'hash',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    32,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'hash of the files',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
462 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
            clone ($p['Doctrine\\ORM\\Mapping\\Table'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Table')),
            clone ($p['Doctrine\\ORM\\Mapping\\Index'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Index')),
            clone $p['Doctrine\\ORM\\Mapping\\Index'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'internal_error',
                    'judgingid',
                    'cid',
                ],
                'indexes' => [
                    1 => [
                        $o[2],
                        $o[3],
                    ],
                ],
                'options' => [
                    1 => [
                        'collation' => 'utf8mb4_unicode_ci',
                        'charset' => 'utf8mb4',
                        'comment' => 'Log of judgehost internal errors',
                    ],
                ],
                'columns' => [
                    2 => [
                        'judgingid',
                    ],
                    [
                        'cid',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
463 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Doctrine\\ORM\\Mapping\\GeneratedValue'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\GeneratedValue')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'errorid',
                ],
                'type' => [
                    1 => 'integer',
                ],
                'length' => [
                    1 => 4,
                ],
                'precision' => [
                    1 => null,
                ],
                'scale' => [
                    1 => null,
                ],
                'options' => [
                    1 => [
                        'comment' => 'Internal error ID',
                        'unsigned' => true,
                    ],
                ],
                'strategy' => [
                    2 => 'IDENTITY',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
464 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'description',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    255,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'Description of the error',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
465 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'judgehostlog',
                ],
                'type' => [
                    'text',
                ],
                'length' => [
                    65535,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'Last N lines of the judgehost log',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
466 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'time',
                ],
                'type' => [
                    'decimal',
                ],
                'precision' => [
                    32,
                ],
                'scale' => [
                    9,
                ],
                'options' => [
                    [
                        'comment' => 'Timestamp of the internal error',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
467 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'disabled',
                ],
                'type' => [
                    'json',
                ],
                'length' => [
                    65535,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'Disabled stuff, JSON-encoded',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
468 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'status',
                ],
                'type' => [
                    'internal_error_status',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'Status of internal error',
                        'default' => 'open',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
469 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'Contest',
                ],
                'inversedBy' => [
                    'internal_errors',
                ],
                'name' => [
                    1 => 'cid',
                ],
                'referencedColumnName' => [
                    1 => 'cid',
                ],
                'onDelete' => [
                    1 => 'SET NULL',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
470 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'Judging',
                ],
                'name' => [
                    1 => 'judgingid',
                ],
                'referencedColumnName' => [
                    1 => 'judgingid',
                ],
                'onDelete' => [
                    1 => 'SET NULL',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
471 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\OneToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToMany')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'mappedBy' => [
                    'internalError',
                ],
                'targetEntity' => [
                    'Judging',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
472 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
            clone ($p['Doctrine\\ORM\\Mapping\\Table'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Table')),
            clone ($p['Doctrine\\ORM\\Mapping\\Index'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Index')),
            clone $p['Doctrine\\ORM\\Mapping\\Index'],
            clone $p['Doctrine\\ORM\\Mapping\\Index'],
            clone $p['Doctrine\\ORM\\Mapping\\Index'],
            clone $p['Doctrine\\ORM\\Mapping\\Index'],
            clone $p['Doctrine\\ORM\\Mapping\\Index'],
            clone $p['Doctrine\\ORM\\Mapping\\Index'],
            clone $p['Doctrine\\ORM\\Mapping\\Index'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'judgetask',
                    'judgehostid',
                    'priority',
                    'jobid',
                    'submitid',
                    'valid',
                    'judgehostid_jobid',
                    'judgehostid_valid_priority',
                    'specific_type',
                ],
                'indexes' => [
                    1 => [
                        $o[2],
                        $o[3],
                        $o[4],
                        $o[5],
                        $o[6],
                        $o[7],
                        $o[8],
                        $o[9],
                    ],
                ],
                'options' => [
                    1 => [
                        'collation' => 'utf8mb4_unicode_ci',
                        'charset' => 'utf8mb4',
                        'comment' => 'Individual judge tasks.',
                    ],
                ],
                'columns' => [
                    2 => [
                        'judgehostid',
                    ],
                    [
                        'priority',
                    ],
                    [
                        'jobid',
                    ],
                    [
                        'submitid',
                    ],
                    [
                        'valid',
                    ],
                    [
                        'judgehostid',
                        'jobid',
                    ],
                    [
                        'judgehostid',
                        'valid',
                        'priority',
                    ],
                    [
                        'judgehostid',
                        'starttime',
                        'valid',
                        'type',
                        'priority',
                        'judgetaskid',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
473 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\GeneratedValue'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\GeneratedValue')),
            clone ($p['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    2 => 'judgetaskid',
                ],
                'type' => [
                    2 => 'integer',
                ],
                'length' => [
                    2 => 4,
                ],
                'precision' => [
                    2 => null,
                ],
                'scale' => [
                    2 => null,
                ],
                'options' => [
                    2 => [
                        'comment' => 'Judgetask ID',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
474 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'Judgehost',
                ],
                'inversedBy' => [
                    'judgetasks',
                ],
                'name' => [
                    1 => 'judgehostid',
                ],
                'referencedColumnName' => [
                    1 => 'judgehostid',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
475 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'type',
                ],
                'type' => [
                    'judge_task_type',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'Type of the judge task.',
                        'default' => 'judging_run',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
476 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'priority',
                ],
                'type' => [
                    'integer',
                ],
                'length' => [
                    4,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'Priority; negative means higher priority',
                        'unsigned' => false,
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
477 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Type')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'jobid',
                    'string',
                ],
                'type' => [
                    'integer',
                ],
                'length' => [
                    4,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'All judgetasks with the same jobid belong together.',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
478 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'uuid',
                ],
                'type' => [
                    'string',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Optional UUID for the associated judging, used for caching.',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
479 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Type')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'submitid',
                    'string',
                ],
                'type' => [
                    'integer',
                ],
                'length' => [
                    4,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Submission ID being judged',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
480 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Type')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'compile_script_id',
                    'string',
                ],
                'type' => [
                    'integer',
                ],
                'length' => [
                    4,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Compile script ID',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
481 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Type')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'run_script_id',
                    'string',
                ],
                'type' => [
                    'integer',
                ],
                'length' => [
                    4,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Run script ID',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
482 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Type')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'compare_script_id',
                    'string',
                ],
                'type' => [
                    'integer',
                ],
                'length' => [
                    4,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Compare script ID',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
483 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Type')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'testcase_id',
                    'string',
                ],
                'type' => [
                    'integer',
                ],
                'length' => [
                    4,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Testcase ID',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
484 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Type')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'testcase_hash',
                    'string',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    100,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Testcase Hash',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
485 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'compile_config',
                ],
                'type' => [
                    'text',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'The compile config as JSON-blob.',
                        'collation' => 'utf8mb4_bin',
                        'default' => 'NULL',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
486 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'run_config',
                ],
                'type' => [
                    'text',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'The run config as JSON-blob.',
                        'collation' => 'utf8mb4_bin',
                        'default' => 'NULL',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
487 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'compare_config',
                ],
                'type' => [
                    'text',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'The compare config as JSON-blob.',
                        'collation' => 'utf8mb4_bin',
                        'default' => 'NULL',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
488 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'valid',
                ],
                'type' => [
                    'boolean',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'Only handed out if still valid.',
                        'default' => '1',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
489 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'starttime',
                ],
                'type' => [
                    'decimal',
                ],
                'precision' => [
                    32,
                ],
                'scale' => [
                    9,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Time the judgetask was started',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
490 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\OneToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToMany')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'mappedBy' => [
                    'judgetask',
                ],
                'targetEntity' => [
                    'JudgingRun',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
491 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
            clone ($p['Doctrine\\ORM\\Mapping\\Table'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Table')),
            clone ($p['Doctrine\\ORM\\Mapping\\UniqueConstraint'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\UniqueConstraint')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'judgehost',
                    'hostname',
                ],
                'uniqueConstraints' => [
                    1 => [
                        $o[2],
                    ],
                ],
                'options' => [
                    1 => [
                        'collation' => 'utf8mb4_unicode_ci',
                        'charset' => 'utf8mb4',
                        'comment' => 'Hostnames of the autojudgers',
                    ],
                ],
                'columns' => [
                    2 => [
                        'hostname',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
492 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\GeneratedValue'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\GeneratedValue')),
            clone ($p['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\SerializedName')),
            clone ($p['JMS\\Serializer\\Annotation\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Type')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    2 => 'judgehostid',
                    'id',
                    'string',
                ],
                'type' => [
                    2 => 'integer',
                ],
                'length' => [
                    2 => 4,
                ],
                'precision' => [
                    2 => null,
                ],
                'scale' => [
                    2 => null,
                ],
                'options' => [
                    2 => [
                        'comment' => 'Judgehost ID',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
            $o[4],
        ],
        []
    );
},
493 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Regex'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Regex')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'hostname',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    64,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'Resolvable hostname of judgehost',
                    ],
                ],
                'message' => [
                    1 => 'Invalid hostname. Only characters in [A-Za-z0-9_\\-.] are allowed.',
                ],
                'pattern' => [
                    1 => '/^[A-Za-z0-9_\\-.]*$/',
                ],
                'groups' => [
                    1 => [
                        'Default',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
494 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'enabled',
                ],
                'type' => [
                    'boolean',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'Should this host take on judgings?',
                        'default' => '1',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
495 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'polltime',
                ],
                'type' => [
                    'decimal',
                ],
                'precision' => [
                    32,
                ],
                'scale' => [
                    9,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Time of last poll by autojudger',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
496 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\OneToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToMany')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'mappedBy' => [
                    'judgehost',
                ],
                'targetEntity' => [
                    'JudgeTask',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
497 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'hidden',
                ],
                'type' => [
                    'boolean',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'Should this host be hidden in the overview?',
                        'default' => '0',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
498 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
            clone ($p['Doctrine\\ORM\\Mapping\\Table'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Table')),
            clone ($p['Doctrine\\ORM\\Mapping\\Index'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Index')),
            clone $p['Doctrine\\ORM\\Mapping\\Index'],
            clone $p['Doctrine\\ORM\\Mapping\\Index'],
            clone $p['Doctrine\\ORM\\Mapping\\Index'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'judging',
                    'submitid',
                    'cid',
                    'rejudgingid',
                    'prevjudgingid',
                ],
                'indexes' => [
                    1 => [
                        $o[2],
                        $o[3],
                        $o[4],
                        $o[5],
                    ],
                ],
                'options' => [
                    1 => [
                        'collation' => 'utf8mb4_unicode_ci',
                        'charset' => 'utf8mb4',
                        'comment' => 'Result of judging a submission',
                    ],
                ],
                'columns' => [
                    2 => [
                        'submitid',
                    ],
                    [
                        'cid',
                    ],
                    [
                        'rejudgingid',
                    ],
                    [
                        'prevjudgingid',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
499 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['JMS\\Serializer\\Annotation\\VirtualProperty'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\VirtualProperty')),
            clone ($p['JMS\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\SerializedName')),
            clone ($p['JMS\\Serializer\\Annotation\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Type')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'start_time',
                    'string',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
500 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['JMS\\Serializer\\Annotation\\VirtualProperty'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\VirtualProperty')),
            clone ($p['JMS\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\SerializedName')),
            clone ($p['JMS\\Serializer\\Annotation\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Type')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'start_contest_time',
                    'string',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
501 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['JMS\\Serializer\\Annotation\\VirtualProperty'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\VirtualProperty')),
            clone ($p['JMS\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\SerializedName')),
            clone ($p['JMS\\Serializer\\Annotation\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Type')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'end_time',
                    'string',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
502 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['JMS\\Serializer\\Annotation\\VirtualProperty'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\VirtualProperty')),
            clone ($p['JMS\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\SerializedName')),
            clone ($p['JMS\\Serializer\\Annotation\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Type')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'end_contest_time',
                    'string',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
503 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['JMS\\Serializer\\Annotation\\VirtualProperty'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\VirtualProperty')),
            clone ($p['JMS\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\SerializedName')),
            clone ($p['JMS\\Serializer\\Annotation\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Type')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'submission_id',
                    'string',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
504 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\GeneratedValue'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\GeneratedValue')),
            clone ($p['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\SerializedName')),
            clone ($p['JMS\\Serializer\\Annotation\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Type')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    2 => 'judgingid',
                    'id',
                    'string',
                ],
                'type' => [
                    2 => 'integer',
                ],
                'length' => [
                    2 => 4,
                ],
                'precision' => [
                    2 => null,
                ],
                'scale' => [
                    2 => null,
                ],
                'options' => [
                    2 => [
                        'comment' => 'Judging ID',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
            $o[4],
        ],
        []
    );
},
505 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'starttime',
                ],
                'type' => [
                    'decimal',
                ],
                'precision' => [
                    32,
                ],
                'scale' => [
                    9,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Time judging started',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
506 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'endtime',
                ],
                'type' => [
                    'decimal',
                ],
                'precision' => [
                    32,
                ],
                'scale' => [
                    9,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Time judging ended, null = still busy',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
507 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'result',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    32,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Result string as defined in config.php',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
508 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'verified',
                ],
                'type' => [
                    'boolean',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'Result verified by jury member?',
                        'default' => '0',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
509 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'jury_member',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    255,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Name of jury member who verified this',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
510 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'verify_comment',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    255,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Optional additional information provided by the verifier',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
511 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'valid',
                ],
                'type' => [
                    'boolean',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'Old judging is marked as invalid when rejudging',
                        'default' => '1',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
512 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'output_compile',
                ],
                'type' => [
                    'blob',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Output of the compiling the program',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
513 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'metadata',
                ],
                'type' => [
                    'blobtext',
                ],
                'length' => [
                    4294967295,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Compilation metadata',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
514 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'seen',
                ],
                'type' => [
                    'boolean',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'Whether the team has seen this judging',
                        'default' => '0',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
515 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'judge_completely',
                ],
                'type' => [
                    'boolean',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'Explicitly requested to be judged completely.',
                        'default' => '0',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
516 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'uuid',
                ],
                'type' => [
                    'string',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'UUID, to make caching of compilation results safe.',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
517 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'Contest',
                ],
                'name' => [
                    1 => 'cid',
                ],
                'referencedColumnName' => [
                    1 => 'cid',
                ],
                'onDelete' => [
                    1 => 'CASCADE',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
518 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'Submission',
                ],
                'inversedBy' => [
                    'judgings',
                ],
                'name' => [
                    1 => 'submitid',
                ],
                'referencedColumnName' => [
                    1 => 'submitid',
                ],
                'onDelete' => [
                    1 => 'CASCADE',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
519 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'Rejudging',
                ],
                'inversedBy' => [
                    'judgings',
                ],
                'name' => [
                    1 => 'rejudgingid',
                ],
                'referencedColumnName' => [
                    1 => 'rejudgingid',
                ],
                'onDelete' => [
                    1 => 'SET NULL',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
520 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'Judging',
                ],
                'name' => [
                    1 => 'prevjudgingid',
                ],
                'referencedColumnName' => [
                    1 => 'judgingid',
                ],
                'onDelete' => [
                    1 => 'SET NULL',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
521 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\OneToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToMany')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'mappedBy' => [
                    'judging',
                ],
                'targetEntity' => [
                    'JudgingRun',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
522 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\OneToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToMany')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'mappedBy' => [
                    'judging',
                ],
                'targetEntity' => [
                    'DebugPackage',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
523 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'InternalError',
                ],
                'inversedBy' => [
                    'affectedJudgings',
                ],
                'name' => [
                    1 => 'errorid',
                ],
                'referencedColumnName' => [
                    1 => 'errorid',
                ],
                'onDelete' => [
                    1 => 'SET NULL',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
524 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
            clone ($p['Doctrine\\ORM\\Mapping\\Table'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Table')),
            clone ($p['Doctrine\\ORM\\Mapping\\Index'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Index')),
            clone $p['Doctrine\\ORM\\Mapping\\Index'],
            clone ($p['Doctrine\\ORM\\Mapping\\UniqueConstraint'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\UniqueConstraint')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'judging_run',
                    'judgingid',
                    'testcaseid_2',
                    'testcaseid',
                ],
                'indexes' => [
                    1 => [
                        $o[2],
                        $o[3],
                    ],
                ],
                'uniqueConstraints' => [
                    1 => [
                        $o[4],
                    ],
                ],
                'options' => [
                    1 => [
                        'collation' => 'utf8mb4_unicode_ci',
                        'charset' => 'utf8mb4',
                        'comment' => 'Result of a testcase run within a judging',
                    ],
                ],
                'columns' => [
                    2 => [
                        'judgingid',
                    ],
                    [
                        'testcaseid',
                    ],
                    [
                        'judgingid',
                        'testcaseid',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
525 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['JMS\\Serializer\\Annotation\\VirtualProperty'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\VirtualProperty')),
            clone ($p['JMS\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\SerializedName')),
            clone ($p['JMS\\Serializer\\Annotation\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Type')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'run_time',
                    'float',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
526 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['JMS\\Serializer\\Annotation\\VirtualProperty'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\VirtualProperty')),
            clone ($p['JMS\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\SerializedName')),
            clone ($p['JMS\\Serializer\\Annotation\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Type')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'judgement_id',
                    'string',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
527 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['JMS\\Serializer\\Annotation\\VirtualProperty'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\VirtualProperty')),
            clone ($p['JMS\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\SerializedName')),
            clone ($p['JMS\\Serializer\\Annotation\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Type')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'ordinal',
                    'int',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
528 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\GeneratedValue'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\GeneratedValue')),
            clone ($p['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\SerializedName')),
            clone ($p['JMS\\Serializer\\Annotation\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Type')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    2 => 'runid',
                    'id',
                    'string',
                ],
                'type' => [
                    2 => 'integer',
                ],
                'length' => [
                    2 => 4,
                ],
                'precision' => [
                    2 => null,
                ],
                'scale' => [
                    2 => null,
                ],
                'options' => [
                    2 => [
                        'comment' => 'Run ID',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
            $o[4],
        ],
        []
    );
},
529 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'judgetaskid',
                ],
                'type' => [
                    'integer',
                ],
                'length' => [
                    4,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'JudgeTask ID',
                        'unsigned' => true,
                        'default' => null,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
530 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'runresult',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    32,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Result of this run, NULL if not finished yet',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
531 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'runtime',
                ],
                'type' => [
                    'float',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Submission running time on this testcase',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
532 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'endtime',
                ],
                'type' => [
                    'decimal',
                ],
                'precision' => [
                    32,
                ],
                'scale' => [
                    9,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Time run judging ended',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
533 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'Judging',
                ],
                'inversedBy' => [
                    'runs',
                ],
                'name' => [
                    1 => 'judgingid',
                ],
                'referencedColumnName' => [
                    1 => 'judgingid',
                ],
                'onDelete' => [
                    1 => 'CASCADE',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
534 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'Testcase',
                ],
                'inversedBy' => [
                    'judging_runs',
                ],
                'name' => [
                    1 => 'testcaseid',
                ],
                'referencedColumnName' => [
                    1 => 'testcaseid',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
535 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\OneToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToMany')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'mappedBy' => [
                    'run',
                ],
                'targetEntity' => [
                    'JudgingRunOutput',
                ],
                'cascade' => [
                    [
                        'persist',
                    ],
                ],
                'orphanRemoval' => [
                    true,
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
536 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'JudgeTask',
                ],
                'inversedBy' => [
                    'judging_runs',
                ],
                'name' => [
                    1 => 'judgetaskid',
                ],
                'referencedColumnName' => [
                    1 => 'judgetaskid',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
537 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
            clone ($p['Doctrine\\ORM\\Mapping\\Table'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Table')),
            clone ($p['Doctrine\\ORM\\Mapping\\Index'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Index')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'judging_run_output',
                    'runid',
                ],
                'indexes' => [
                    1 => [
                        $o[2],
                    ],
                ],
                'options' => [
                    1 => [
                        'collation' => 'utf8mb4_unicode_ci',
                        'charset' => 'utf8mb4',
                        'comment' => 'Stores output of judging run',
                    ],
                ],
                'columns' => [
                    2 => [
                        'runid',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
538 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    1 => 'App\\Entity\\JudgingRun',
                ],
                'inversedBy' => [
                    1 => 'output',
                ],
                'name' => [
                    2 => 'runid',
                ],
                'referencedColumnName' => [
                    2 => 'runid',
                ],
                'onDelete' => [
                    2 => 'CASCADE',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
539 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'output_run',
                ],
                'type' => [
                    'blobtext',
                ],
                'length' => [
                    4294967295,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Output of running the program',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
540 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'output_diff',
                ],
                'type' => [
                    'blobtext',
                ],
                'length' => [
                    4294967295,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Diffing the program output and testcase output',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
541 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'output_error',
                ],
                'type' => [
                    'blobtext',
                ],
                'length' => [
                    4294967295,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Standard error output of the program',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
542 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'output_system',
                ],
                'type' => [
                    'blobtext',
                ],
                'length' => [
                    4294967295,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Judging system output',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
543 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'metadata',
                ],
                'type' => [
                    'blobtext',
                ],
                'length' => [
                    4294967295,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Judging metadata',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
544 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
            clone ($p['Doctrine\\ORM\\Mapping\\Table'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Table')),
            clone ($p['Doctrine\\ORM\\Mapping\\Index'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Index')),
            clone ($p['Doctrine\\ORM\\Mapping\\UniqueConstraint'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\UniqueConstraint')),
            clone ($p['Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity')),
            clone $p['Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'language',
                    'compile_script',
                    'externalid',
                ],
                'indexes' => [
                    1 => [
                        $o[2],
                    ],
                ],
                'uniqueConstraints' => [
                    1 => [
                        $o[3],
                    ],
                ],
                'options' => [
                    1 => [
                        'collation' => 'utf8mb4_unicode_ci',
                        'charset' => 'utf8mb4',
                        'comment' => 'Programming languages in which teams can submit solutions',
                    ],
                    3 => [
                        'lengths' => [
                            190,
                        ],
                    ],
                ],
                'columns' => [
                    2 => [
                        'compile_script',
                    ],
                    [
                        'externalid',
                    ],
                ],
                'fields' => [
                    4 => 'langid',
                    'externalid',
                ],
                'groups' => [
                    4 => [
                        'Default',
                    ],
                    [
                        'Default',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[4],
            $o[5],
        ],
        []
    );
},
545 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\NotEqualTo'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotEqualTo')),
            clone ($p['App\\Validator\\Constraints\\Identifier'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('App\\Validator\\Constraints\\Identifier')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'langid',
                ],
                'type' => [
                    1 => 'string',
                ],
                'length' => [
                    1 => 32,
                ],
                'precision' => [
                    1 => null,
                ],
                'scale' => [
                    1 => null,
                ],
                'options' => [
                    1 => [
                        'comment' => 'Language ID (string)',
                    ],
                ],
                'groups' => [
                    3 => [
                        'Default',
                    ],
                    [
                        'Default',
                    ],
                    [
                        'Default',
                    ],
                ],
                'value' => [
                    4 => 'add',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
            $o[4],
            $o[5],
        ],
        []
    );
},
546 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\SerializedName')),
            clone ($p['JMS\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'externalid',
                    'id',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    255,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Language ID to expose in the REST API',
                    ],
                ],
                'groups' => [
                    2 => [
                        'Default',
                        'Nonstrict',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
547 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Groups')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'name',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    255,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'Descriptive language name',
                    ],
                ],
                'groups' => [
                    1 => [
                        'Default',
                        'Nonstrict',
                    ],
                    [
                        'Default',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
548 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Type')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'extensions',
                    'array<string>',
                ],
                'type' => [
                    'json',
                ],
                'length' => [
                    4294967295,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'List of recognized extensions (JSON encoded)',
                    ],
                ],
                'groups' => [
                    2 => [
                        'Default',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
549 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'filter_compiler_files',
                ],
                'type' => [
                    'boolean',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'Whether to filter the files passed to the compiler by the extension list.',
                        'default' => '1',
                    ],
                ],
                'groups' => [
                    1 => [
                        'Nonstrict',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
550 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'allow_submit',
                ],
                'type' => [
                    'boolean',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'Are submissions accepted in this language?',
                        'default' => '1',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
551 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'allow_judge',
                ],
                'type' => [
                    'boolean',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'Are submissions in this language judged?',
                        'default' => '1',
                    ],
                ],
                'groups' => [
                    1 => [
                        'Nonstrict',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
552 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Type')),
            clone ($p['JMS\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Groups')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\GreaterThan'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\GreaterThan')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'time_factor',
                    'double',
                ],
                'type' => [
                    'float',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'Language-specific factor multiplied by problem run times',
                        'default' => '1',
                    ],
                ],
                'groups' => [
                    2 => [
                        'Nonstrict',
                    ],
                    [
                        'Default',
                    ],
                    [
                        'Default',
                    ],
                ],
                'value' => [
                    3 => 0,
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
            $o[4],
        ],
        []
    );
},
553 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\SerializedName')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'require_entry_point',
                    'entry_point_required',
                ],
                'type' => [
                    'boolean',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'Whether submissions require a code entry point to be specified.',
                        'default' => '0',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
554 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\SerializedName')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'entry_point_description',
                    'entry_point_name',
                ],
                'type' => [
                    'string',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'The description used in the UI for the entry point field.',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
555 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'Executable',
                ],
                'inversedBy' => [
                    'languages',
                ],
                'name' => [
                    1 => 'compile_script',
                ],
                'referencedColumnName' => [
                    1 => 'execid',
                ],
                'onDelete' => [
                    1 => 'SET NULL',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
556 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\OneToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToMany')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'mappedBy' => [
                    'language',
                ],
                'targetEntity' => [
                    'Submission',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
557 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
            clone ($p['Doctrine\\ORM\\Mapping\\Table'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Table')),
            clone ($p['Doctrine\\ORM\\Mapping\\Index'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Index')),
            clone $p['Doctrine\\ORM\\Mapping\\Index'],
            clone $p['Doctrine\\ORM\\Mapping\\Index'],
            clone ($p['Doctrine\\ORM\\Mapping\\HasLifecycleCallbacks'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\HasLifecycleCallbacks')),
            clone ($p['Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'problem',
                    'externalid',
                    'special_run',
                    'special_compare',
                ],
                'indexes' => [
                    1 => [
                        $o[2],
                        $o[3],
                        $o[4],
                    ],
                ],
                'options' => [
                    1 => [
                        'collation' => 'utf8mb4_unicode_ci',
                        'charset' => 'utf8mb4',
                        'comment' => 'Problems the teams can submit solutions for',
                    ],
                    [
                        'lengths' => [
                            190,
                        ],
                    ],
                ],
                'columns' => [
                    2 => [
                        'externalid',
                    ],
                    [
                        'special_run',
                    ],
                    [
                        'special_compare',
                    ],
                ],
                'message' => [
                    6 => 'A problem with the same `externalid` already exists - is this a duplicate?',
                ],
                'fields' => [
                    6 => 'externalid',
                ],
                'groups' => [
                    6 => [
                        'Default',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[5],
            $o[6],
        ],
        []
    );
},
558 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['JMS\\Serializer\\Annotation\\VirtualProperty'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\VirtualProperty')),
            clone ($p['JMS\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\SerializedName')),
            clone ($p['JMS\\Serializer\\Annotation\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Type')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'time_limit',
                    'float',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
559 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\GeneratedValue'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\GeneratedValue')),
            clone ($p['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    2 => 'probid',
                ],
                'type' => [
                    2 => 'integer',
                ],
                'precision' => [
                    2 => null,
                ],
                'scale' => [
                    2 => null,
                ],
                'options' => [
                    2 => [
                        'comment' => 'Problem ID',
                        'unsigned' => 'true',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
        ],
        []
    );
},
560 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'externalid',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    255,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Problem ID in an external system, should be unique inside a single contest',
                        'collation' => 'utf8mb4_bin',
                    ],
                ],
                'groups' => [
                    1 => [
                        'Nonstrict',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
561 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'name',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    255,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'Descriptive name',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
562 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\GreaterThan'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\GreaterThan')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'timelimit',
                ],
                'type' => [
                    'float',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'Maximum run time (in seconds) for this problem',
                        'default' => '0',
                        'unsigned' => 'true',
                    ],
                ],
                'value' => [
                    2 => 0,
                ],
                'groups' => [
                    2 => [
                        'Default',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
563 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\GreaterThan'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\GreaterThan')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'memlimit',
                ],
                'type' => [
                    'integer',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Maximum memory available (in kB) for this problem',
                        'unsigned' => true,
                    ],
                ],
                'value' => [
                    2 => 0,
                ],
                'groups' => [
                    2 => [
                        'Default',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
564 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\GreaterThan'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\GreaterThan')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'outputlimit',
                ],
                'type' => [
                    'integer',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Maximum output size (in kB) for this problem',
                        'unsigned' => true,
                    ],
                ],
                'value' => [
                    2 => 0,
                ],
                'groups' => [
                    2 => [
                        'Default',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
565 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'special_compare_args',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    255,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Optional arguments to special_compare script',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
566 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'combined_run_compare',
                ],
                'type' => [
                    'boolean',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'Use the exit code of the run script to compute the verdict',
                        'default' => '0',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
567 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'problemtext',
                ],
                'type' => [
                    'blob',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Problem text in HTML/PDF/ASCII',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
568 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\File'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\File')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'groups' => [
                    [
                        'Default',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
569 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'problemtext_type',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    4,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'File type of problem text',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
570 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\OneToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToMany')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'mappedBy' => [
                    'problem',
                ],
                'targetEntity' => [
                    'Submission',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
571 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\OneToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToMany')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'mappedBy' => [
                    'problem',
                ],
                'targetEntity' => [
                    'Clarification',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
572 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\OneToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToMany')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'mappedBy' => [
                    'problem',
                ],
                'targetEntity' => [
                    'ContestProblem',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
573 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'Executable',
                ],
                'inversedBy' => [
                    'problems_compare',
                ],
                'name' => [
                    1 => 'special_compare',
                ],
                'referencedColumnName' => [
                    1 => 'execid',
                ],
                'onDelete' => [
                    1 => 'SET NULL',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
574 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'Executable',
                ],
                'inversedBy' => [
                    'problems_run',
                ],
                'name' => [
                    1 => 'special_run',
                ],
                'referencedColumnName' => [
                    1 => 'execid',
                ],
                'onDelete' => [
                    1 => 'SET NULL',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
575 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\OneToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToMany')),
            clone ($p['Doctrine\\ORM\\Mapping\\OrderBy'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OrderBy')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'mappedBy' => [
                    'problem',
                ],
                'targetEntity' => [
                    'Testcase',
                ],
                'value' => [
                    1 => [
                        'ranknumber' => 'ASC',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
576 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\OneToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToMany')),
            clone ($p['Doctrine\\ORM\\Mapping\\OrderBy'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OrderBy')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'mappedBy' => [
                    'problem',
                ],
                'targetEntity' => [
                    'App\\Entity\\ProblemAttachment',
                ],
                'orphanRemoval' => [
                    true,
                ],
                'value' => [
                    1 => [
                        'name' => 'ASC',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
577 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
            clone ($p['Doctrine\\ORM\\Mapping\\Table'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Table')),
            clone ($p['Doctrine\\ORM\\Mapping\\Index'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Index')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'problem_attachment',
                    'name',
                ],
                'indexes' => [
                    1 => [
                        $o[2],
                    ],
                ],
                'options' => [
                    1 => [
                        'collation' => 'utf8mb4_unicode_ci',
                        'charset' => 'utf8mb4',
                        'comment' => 'Attachments belonging to problems',
                    ],
                    [
                        'lengths' => [
                            null,
                            190,
                        ],
                    ],
                ],
                'columns' => [
                    2 => [
                        'attachmentid',
                        'name',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
578 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\GeneratedValue'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\GeneratedValue')),
            clone ($p['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    2 => 'integer',
                ],
                'precision' => [
                    2 => null,
                ],
                'scale' => [
                    2 => null,
                ],
                'options' => [
                    2 => [
                        'comment' => 'Attachment ID',
                        'unsigned' => 'true',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
579 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    'string',
                ],
                'length' => [
                    255,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'Filename of attachment',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
580 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    'string',
                ],
                'length' => [
                    4,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'File type of attachment',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
581 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'App\\Entity\\Problem',
                ],
                'inversedBy' => [
                    'attachments',
                ],
                'name' => [
                    1 => 'probid',
                ],
                'referencedColumnName' => [
                    1 => 'probid',
                ],
                'onDelete' => [
                    1 => 'CASCADE',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
582 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\OneToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToMany')),
        ],
        null,
        [
            'stdClass' => [
                'mappedBy' => [
                    'attachment',
                ],
                'targetEntity' => [
                    'App\\Entity\\ProblemAttachmentContent',
                ],
                'cascade' => [
                    [
                        'persist',
                    ],
                ],
                'orphanRemoval' => [
                    true,
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
583 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
            clone ($p['Doctrine\\ORM\\Mapping\\Table'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Table')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'problem_attachment_content',
                ],
                'options' => [
                    1 => [
                        'collation' => 'utf8mb4_unicode_ci',
                        'charset' => 'utf8mb4',
                        'comment' => 'Stores contents of problem attachments',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
584 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    1 => 'App\\Entity\\ProblemAttachment',
                ],
                'inversedBy' => [
                    1 => 'content',
                ],
                'name' => [
                    2 => 'attachmentid',
                ],
                'referencedColumnName' => [
                    2 => 'attachmentid',
                ],
                'onDelete' => [
                    2 => 'CASCADE',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
585 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'content',
                ],
                'type' => [
                    'blobtext',
                ],
                'length' => [
                    4294967295,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'Attachment content',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
586 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
            clone ($p['Doctrine\\ORM\\Mapping\\Table'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Table')),
            clone ($p['Doctrine\\ORM\\Mapping\\Index'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Index')),
            clone $p['Doctrine\\ORM\\Mapping\\Index'],
            clone $p['Doctrine\\ORM\\Mapping\\Index'],
            clone $p['Doctrine\\ORM\\Mapping\\Index'],
            clone $p['Doctrine\\ORM\\Mapping\\Index'],
            clone $p['Doctrine\\ORM\\Mapping\\Index'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'queuetask',
                    'queuetaskid',
                    'jobid',
                    'priority',
                    'teampriority',
                    'teamid',
                    'starttime',
                ],
                'indexes' => [
                    1 => [
                        $o[2],
                        $o[3],
                        $o[4],
                        $o[5],
                        $o[6],
                        $o[7],
                    ],
                ],
                'options' => [
                    1 => [
                        'collation' => 'utf8mb4_unicode_ci',
                        'charset' => 'utf8mb4',
                        'comment' => 'Work items.',
                    ],
                ],
                'columns' => [
                    2 => [
                        'queuetaskid',
                    ],
                    [
                        'jobid',
                    ],
                    [
                        'priority',
                    ],
                    [
                        'teampriority',
                    ],
                    [
                        'teamid',
                    ],
                    [
                        'starttime',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
587 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\GeneratedValue'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\GeneratedValue')),
            clone ($p['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    2 => 'queuetaskid',
                ],
                'type' => [
                    2 => 'integer',
                ],
                'length' => [
                    2 => 4,
                ],
                'precision' => [
                    2 => null,
                ],
                'scale' => [
                    2 => null,
                ],
                'options' => [
                    2 => [
                        'comment' => 'Queuetask ID',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
588 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Type')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'jobid',
                    'string',
                ],
                'type' => [
                    'integer',
                ],
                'length' => [
                    4,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'All queuetasks with the same jobid belong together.',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
589 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'teampriority',
                ],
                'type' => [
                    'integer',
                ],
                'length' => [
                    4,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'Team Priority; somewhat magic, lower implies higher priority.',
                        'unsigned' => false,
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
590 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'Team',
                ],
                'name' => [
                    1 => 'teamid',
                ],
                'referencedColumnName' => [
                    1 => 'teamid',
                ],
                'onDelete' => [
                    1 => 'CASCADE',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
591 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'starttime',
                ],
                'type' => [
                    'decimal',
                ],
                'precision' => [
                    32,
                ],
                'scale' => [
                    9,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Time started work',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
592 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
            clone ($p['Doctrine\\ORM\\Mapping\\Table'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Table')),
            clone ($p['Doctrine\\ORM\\Mapping\\Index'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Index')),
            clone $p['Doctrine\\ORM\\Mapping\\Index'],
            clone $p['Doctrine\\ORM\\Mapping\\Index'],
            clone $p['Doctrine\\ORM\\Mapping\\Index'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'rankcache',
                    'order_restricted',
                    'order_public',
                    'cid',
                    'teamid',
                ],
                'indexes' => [
                    1 => [
                        $o[2],
                        $o[3],
                        $o[4],
                        $o[5],
                    ],
                ],
                'options' => [
                    1 => [
                        'collation' => 'utf8mb4_unicode_ci',
                        'charset' => 'utf8mb4',
                        'comment' => 'Scoreboard rank cache',
                    ],
                ],
                'columns' => [
                    2 => [
                        'cid',
                        'points_restricted',
                        'totaltime_restricted',
                    ],
                    [
                        'cid',
                        'points_public',
                        'totaltime_public',
                    ],
                    [
                        'cid',
                    ],
                    [
                        'teamid',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
593 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'points_restricted',
                ],
                'type' => [
                    'integer',
                ],
                'length' => [
                    4,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'Total correctness points (restricted audience)',
                        'unsigned' => true,
                        'default' => '0',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
594 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'totaltime_restricted',
                ],
                'type' => [
                    'integer',
                ],
                'length' => [
                    4,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'Total penalty time in minutes (restricted audience)',
                        'default' => '0',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
595 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'points_public',
                ],
                'type' => [
                    'integer',
                ],
                'length' => [
                    4,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'Total correctness points (public)',
                        'unsigned' => true,
                        'default' => '0',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
596 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'totaltime_public',
                ],
                'type' => [
                    'integer',
                ],
                'length' => [
                    4,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'Total penalty time in minutes (public)',
                        'default' => '0',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
597 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    1 => 'Contest',
                ],
                'name' => [
                    2 => 'cid',
                ],
                'referencedColumnName' => [
                    2 => 'cid',
                ],
                'onDelete' => [
                    2 => 'CASCADE',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
598 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    1 => 'Team',
                ],
                'name' => [
                    2 => 'teamid',
                ],
                'referencedColumnName' => [
                    2 => 'teamid',
                ],
                'onDelete' => [
                    2 => 'CASCADE',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
599 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
            clone ($p['Doctrine\\ORM\\Mapping\\Table'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Table')),
            clone ($p['Doctrine\\ORM\\Mapping\\Index'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Index')),
            clone $p['Doctrine\\ORM\\Mapping\\Index'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'rejudging',
                    'userid_start',
                    'userid_finish',
                ],
                'indexes' => [
                    1 => [
                        $o[2],
                        $o[3],
                    ],
                ],
                'options' => [
                    1 => [
                        'collation' => 'utf8mb4_unicode_ci',
                        'charset' => 'utf8mb4',
                        'comment' => 'Rejudge group',
                    ],
                ],
                'columns' => [
                    2 => [
                        'userid_start',
                    ],
                    [
                        'userid_finish',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
600 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\GeneratedValue'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\GeneratedValue')),
            clone ($p['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    2 => 'rejudgingid',
                ],
                'type' => [
                    2 => 'integer',
                ],
                'length' => [
                    2 => 4,
                ],
                'precision' => [
                    2 => null,
                ],
                'scale' => [
                    2 => null,
                ],
                'options' => [
                    2 => [
                        'comment' => 'Rejudging ID',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
601 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'starttime',
                ],
                'type' => [
                    'decimal',
                ],
                'precision' => [
                    32,
                ],
                'scale' => [
                    9,
                ],
                'options' => [
                    [
                        'comment' => 'Time rejudging started',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
602 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'endtime',
                ],
                'type' => [
                    'decimal',
                ],
                'precision' => [
                    32,
                ],
                'scale' => [
                    9,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Time rejudging ended, null = still busy',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
603 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'reason',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    255,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'Reason to start this rejudge',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
604 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'valid',
                ],
                'type' => [
                    'boolean',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'Rejudging is marked as invalid if canceled',
                        'default' => '1',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
605 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'User',
                ],
                'name' => [
                    1 => 'userid_start',
                ],
                'referencedColumnName' => [
                    1 => 'userid',
                ],
                'onDelete' => [
                    1 => 'SET NULL',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
606 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'User',
                ],
                'name' => [
                    1 => 'userid_finish',
                ],
                'referencedColumnName' => [
                    1 => 'userid',
                ],
                'onDelete' => [
                    1 => 'SET NULL',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
607 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\OneToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToMany')),
        ],
        null,
        [
            'stdClass' => [
                'mappedBy' => [
                    'rejudging',
                ],
                'targetEntity' => [
                    'Judging',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
608 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\OneToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToMany')),
        ],
        null,
        [
            'stdClass' => [
                'mappedBy' => [
                    'rejudging',
                ],
                'targetEntity' => [
                    'App\\Entity\\Submission',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
609 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'auto_apply',
                ],
                'type' => [
                    'boolean',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'If set, judgings are accepted automatically.',
                        'default' => '0',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
610 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    '`repeat`',
                ],
                'type' => [
                    'integer',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Number of times this rejudging will be repeated.',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
611 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'Rejudging',
                ],
                'name' => [
                    1 => 'repeat_rejudgingid',
                ],
                'referencedColumnName' => [
                    1 => 'rejudgingid',
                ],
                'onDelete' => [
                    1 => 'SET NULL',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
612 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
            clone ($p['Doctrine\\ORM\\Mapping\\Table'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Table')),
            clone ($p['Doctrine\\ORM\\Mapping\\Index'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Index')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'removed_interval',
                    'cid',
                ],
                'indexes' => [
                    1 => [
                        $o[2],
                    ],
                ],
                'options' => [
                    1 => [
                        'collation' => 'utf8mb4_unicode_ci',
                        'charset' => 'utf8mb4',
                        'comment' => 'Time intervals removed from the contest for scoring',
                    ],
                ],
                'columns' => [
                    2 => [
                        'cid',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
613 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\GeneratedValue'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\GeneratedValue')),
            clone ($p['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    2 => 'intervalid',
                ],
                'type' => [
                    2 => 'integer',
                ],
                'length' => [
                    2 => 4,
                ],
                'precision' => [
                    2 => null,
                ],
                'scale' => [
                    2 => null,
                ],
                'options' => [
                    2 => [
                        'comment' => 'Removed interval ID',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
614 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'starttime',
                ],
                'type' => [
                    'decimal',
                ],
                'precision' => [
                    32,
                ],
                'scale' => [
                    9,
                ],
                'options' => [
                    [
                        'comment' => 'Initial time of removed interval',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
615 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'endtime',
                ],
                'type' => [
                    'decimal',
                ],
                'precision' => [
                    32,
                ],
                'scale' => [
                    9,
                ],
                'options' => [
                    [
                        'comment' => 'Final time of removed interval',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
616 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['App\\Validator\\Constraints\\TimeString'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('App\\Validator\\Constraints\\TimeString')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'starttime_string',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    64,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'Authoritative (absolute only) string representation of starttime',
                    ],
                ],
                'allowRelative' => [
                    1 => false,
                ],
                'groups' => [
                    1 => [
                        'Default',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
617 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['App\\Validator\\Constraints\\TimeString'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('App\\Validator\\Constraints\\TimeString')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'endtime_string',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    64,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'Authoritative (absolute only) string representation of endtime',
                    ],
                ],
                'allowRelative' => [
                    1 => false,
                ],
                'groups' => [
                    1 => [
                        'Default',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
618 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'Contest',
                ],
                'inversedBy' => [
                    'removedIntervals',
                ],
                'name' => [
                    1 => 'cid',
                ],
                'referencedColumnName' => [
                    1 => 'cid',
                ],
                'onDelete' => [
                    1 => 'CASCADE',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
619 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
            clone ($p['Doctrine\\ORM\\Mapping\\Table'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Table')),
            clone ($p['Doctrine\\ORM\\Mapping\\UniqueConstraint'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\UniqueConstraint')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'role',
                    'role',
                ],
                'uniqueConstraints' => [
                    1 => [
                        $o[2],
                    ],
                ],
                'options' => [
                    1 => [
                        'collation' => 'utf8mb4_unicode_ci',
                        'charset' => 'utf8mb4',
                        'comment' => 'Possible user roles',
                    ],
                ],
                'columns' => [
                    2 => [
                        'role',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
620 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\GeneratedValue'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\GeneratedValue')),
            clone ($p['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    2 => 'roleid',
                ],
                'type' => [
                    2 => 'integer',
                ],
                'length' => [
                    2 => 4,
                ],
                'precision' => [
                    2 => null,
                ],
                'scale' => [
                    2 => null,
                ],
                'options' => [
                    2 => [
                        'comment' => 'Role ID',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
621 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'role',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    32,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'Role name',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
622 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'description',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    255,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'Description for the web interface',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
623 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\ManyToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToMany')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'User',
                ],
                'mappedBy' => [
                    'user_roles',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
624 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
            clone ($p['Doctrine\\ORM\\Mapping\\Table'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Table')),
            clone ($p['Doctrine\\ORM\\Mapping\\Index'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Index')),
            clone $p['Doctrine\\ORM\\Mapping\\Index'],
            clone $p['Doctrine\\ORM\\Mapping\\Index'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'scorecache',
                    'cid',
                    'teamid',
                    'probid',
                ],
                'indexes' => [
                    1 => [
                        $o[2],
                        $o[3],
                        $o[4],
                    ],
                ],
                'options' => [
                    1 => [
                        'collation' => 'utf8mb4_unicode_ci',
                        'charset' => 'utf8mb4',
                        'comment' => 'Scoreboard cache',
                    ],
                ],
                'columns' => [
                    2 => [
                        'cid',
                    ],
                    [
                        'teamid',
                    ],
                    [
                        'probid',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
625 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'submissions_restricted',
                ],
                'type' => [
                    'integer',
                ],
                'length' => [
                    4,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'Number of submissions made (restricted audiences)',
                        'unsigned' => true,
                        'default' => '0',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
626 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'pending_restricted',
                ],
                'type' => [
                    'integer',
                ],
                'length' => [
                    4,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'Number of submissions pending judgement (restricted audience)',
                        'unsigned' => true,
                        'default' => '0',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
627 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'is_correct_restricted',
                ],
                'type' => [
                    'boolean',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'Has there been a correct submission? (restricted audience)',
                        'default' => '0',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
628 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'solvetime_restricted',
                ],
                'type' => [
                    'decimal',
                ],
                'precision' => [
                    32,
                ],
                'scale' => [
                    9,
                ],
                'options' => [
                    [
                        'comment' => 'Seconds into contest when problem solved (restricted audience)',
                        'default' => '0.000000000',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
629 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'submissions_public',
                ],
                'type' => [
                    'integer',
                ],
                'length' => [
                    4,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'Number of submissions made (public)',
                        'unsigned' => true,
                        'default' => '0',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
630 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'pending_public',
                ],
                'type' => [
                    'integer',
                ],
                'length' => [
                    4,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'Number of submissions pending judgement (public)',
                        'unsigned' => true,
                        'default' => '0',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
631 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'is_correct_public',
                ],
                'type' => [
                    'boolean',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'Has there been a correct submission? (public)',
                        'default' => '0',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
632 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'solvetime_public',
                ],
                'type' => [
                    'decimal',
                ],
                'precision' => [
                    32,
                ],
                'scale' => [
                    9,
                ],
                'options' => [
                    [
                        'comment' => 'Seconds into contest when problem solved (public)',
                        'default' => '0.000000000',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
633 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'is_first_to_solve',
                ],
                'type' => [
                    'boolean',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'Is this the first solution to this problem?',
                        'default' => '0',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
634 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    1 => 'Problem',
                ],
                'name' => [
                    2 => 'probid',
                ],
                'referencedColumnName' => [
                    2 => 'probid',
                ],
                'onDelete' => [
                    2 => 'CASCADE',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
635 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
            clone ($p['Doctrine\\ORM\\Mapping\\Table'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Table')),
            clone ($p['Doctrine\\ORM\\Mapping\\Index'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Index')),
            clone $p['Doctrine\\ORM\\Mapping\\Index'],
            clone $p['Doctrine\\ORM\\Mapping\\Index'],
            clone $p['Doctrine\\ORM\\Mapping\\Index'],
            clone $p['Doctrine\\ORM\\Mapping\\Index'],
            clone $p['Doctrine\\ORM\\Mapping\\Index'],
            clone $p['Doctrine\\ORM\\Mapping\\Index'],
            clone $p['Doctrine\\ORM\\Mapping\\Index'],
            clone ($p['Doctrine\\ORM\\Mapping\\UniqueConstraint'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\UniqueConstraint')),
            clone ($p['Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'submission',
                    'teamid',
                    'teamid_2',
                    'userid',
                    'probid',
                    'langid',
                    'origsubmitid',
                    'rejudgingid',
                    'probid_2',
                    'externalid',
                ],
                'indexes' => [
                    1 => [
                        $o[2],
                        $o[3],
                        $o[4],
                        $o[5],
                        $o[6],
                        $o[7],
                        $o[8],
                        $o[9],
                    ],
                ],
                'uniqueConstraints' => [
                    1 => [
                        $o[10],
                    ],
                ],
                'options' => [
                    1 => [
                        'collation' => 'utf8mb4_unicode_ci',
                        'charset' => 'utf8mb4',
                        'comment' => 'All incoming submissions',
                    ],
                    10 => [
                        'lengths' => [
                            null,
                            190,
                        ],
                    ],
                ],
                'columns' => [
                    2 => [
                        'cid',
                        'teamid',
                    ],
                    [
                        'teamid',
                    ],
                    [
                        'userid',
                    ],
                    [
                        'probid',
                    ],
                    [
                        'langid',
                    ],
                    [
                        'origsubmitid',
                    ],
                    [
                        'rejudgingid',
                    ],
                    [
                        'cid',
                        'probid',
                    ],
                    [
                        'cid',
                        'externalid',
                    ],
                ],
                'fields' => [
                    11 => 'externalid',
                ],
                'groups' => [
                    11 => [
                        'Default',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[11],
        ],
        []
    );
},
636 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['JMS\\Serializer\\Annotation\\VirtualProperty'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\VirtualProperty')),
            clone ($p['JMS\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\SerializedName')),
            clone ($p['JMS\\Serializer\\Annotation\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Type')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'language_id',
                    'string',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
637 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['JMS\\Serializer\\Annotation\\VirtualProperty'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\VirtualProperty')),
            clone ($p['JMS\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\SerializedName')),
            clone ($p['JMS\\Serializer\\Annotation\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Type')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'team_id',
                    'string',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
638 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\GeneratedValue'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\GeneratedValue')),
            clone ($p['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\SerializedName')),
            clone ($p['JMS\\Serializer\\Annotation\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Type')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    2 => 'submitid',
                    'id',
                    'string',
                ],
                'type' => [
                    2 => 'integer',
                ],
                'length' => [
                    2 => 4,
                ],
                'precision' => [
                    2 => null,
                ],
                'scale' => [
                    2 => null,
                ],
                'options' => [
                    2 => [
                        'comment' => 'Submission ID',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
            $o[4],
        ],
        []
    );
},
639 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Groups')),
            clone ($p['JMS\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\SerializedName')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'externalid',
                    2 => 'external_id',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    255,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Specifies ID of submission if imported from external CCS, e.g. Kattis',
                        'collation' => 'utf8mb4_bin',
                    ],
                ],
                'groups' => [
                    1 => [
                        'Nonstrict',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
640 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'submittime',
                ],
                'type' => [
                    'decimal',
                ],
                'precision' => [
                    32,
                ],
                'scale' => [
                    9,
                ],
                'options' => [
                    [
                        'comment' => 'Time submitted',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
641 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'valid',
                ],
                'type' => [
                    'boolean',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'If false ignore this submission in all scoreboard calculations',
                        'default' => '1',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
642 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'expected_results',
                ],
                'type' => [
                    'json',
                ],
                'length' => [
                    255,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'JSON encoded list of expected results - used to validate jury submissions',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
643 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Expose'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Expose')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'entry_point',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    255,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Optional entry point. Can be used e.g. for java main class.',
                    ],
                ],
                'if' => [
                    1 => 'context.getAttribute(\'domjudge_service\').checkrole(\'jury\')',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
644 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'Contest',
                ],
                'inversedBy' => [
                    'submissions',
                ],
                'name' => [
                    1 => 'cid',
                ],
                'referencedColumnName' => [
                    1 => 'cid',
                ],
                'onDelete' => [
                    1 => 'CASCADE',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
645 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'Language',
                ],
                'inversedBy' => [
                    'submissions',
                ],
                'name' => [
                    1 => 'langid',
                ],
                'referencedColumnName' => [
                    1 => 'langid',
                ],
                'onDelete' => [
                    1 => 'CASCADE',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
646 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'Team',
                ],
                'inversedBy' => [
                    'submissions',
                ],
                'name' => [
                    1 => 'teamid',
                ],
                'referencedColumnName' => [
                    1 => 'teamid',
                ],
                'onDelete' => [
                    1 => 'CASCADE',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
647 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'User',
                ],
                'inversedBy' => [
                    'submissions',
                ],
                'name' => [
                    1 => 'userid',
                ],
                'referencedColumnName' => [
                    1 => 'userid',
                ],
                'onDelete' => [
                    1 => 'CASCADE',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
648 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'Problem',
                ],
                'inversedBy' => [
                    'submissions',
                ],
                'name' => [
                    1 => 'probid',
                ],
                'referencedColumnName' => [
                    1 => 'probid',
                ],
                'onDelete' => [
                    1 => 'CASCADE',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
649 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumns'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumns')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
            clone $p['Doctrine\\ORM\\Mapping\\JoinColumn'],
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'App\\Entity\\ContestProblem',
                ],
                'inversedBy' => [
                    'submissions',
                ],
                'value' => [
                    1 => [
                        $o[2],
                        $o[3],
                    ],
                ],
                'name' => [
                    2 => 'cid',
                    'probid',
                ],
                'referencedColumnName' => [
                    2 => 'cid',
                    'probid',
                ],
                'onDelete' => [
                    2 => 'CASCADE',
                    'CASCADE',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[4],
        ],
        []
    );
},
650 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\OneToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToMany')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'mappedBy' => [
                    'submission',
                ],
                'targetEntity' => [
                    'Judging',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
651 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\OneToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToMany')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'mappedBy' => [
                    'submission',
                ],
                'targetEntity' => [
                    'App\\Entity\\ExternalJudgement',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
652 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\OneToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToMany')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'mappedBy' => [
                    'submission',
                ],
                'targetEntity' => [
                    'SubmissionFile',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
653 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\OneToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToMany')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'mappedBy' => [
                    'submission',
                ],
                'targetEntity' => [
                    'Balloon',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
654 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'Rejudging',
                ],
                'inversedBy' => [
                    'submissions',
                ],
                'name' => [
                    1 => 'rejudgingid',
                ],
                'referencedColumnName' => [
                    1 => 'rejudgingid',
                ],
                'onDelete' => [
                    1 => 'SET NULL',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
655 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'App\\Entity\\Submission',
                ],
                'inversedBy' => [
                    'resubmissions',
                ],
                'name' => [
                    1 => 'origsubmitid',
                ],
                'referencedColumnName' => [
                    1 => 'submitid',
                ],
                'onDelete' => [
                    1 => 'SET NULL',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
656 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\OneToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToMany')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'mappedBy' => [
                    'originalSubmission',
                ],
                'targetEntity' => [
                    'App\\Entity\\Submission',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
657 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
            clone ($p['Doctrine\\ORM\\Mapping\\Table'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Table')),
            clone ($p['Doctrine\\ORM\\Mapping\\Index'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Index')),
            clone ($p['Doctrine\\ORM\\Mapping\\UniqueConstraint'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\UniqueConstraint')),
            clone $p['Doctrine\\ORM\\Mapping\\UniqueConstraint'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'submission_file',
                    'submitid',
                    'rankindex',
                    'filename',
                ],
                'indexes' => [
                    1 => [
                        $o[2],
                    ],
                ],
                'uniqueConstraints' => [
                    1 => [
                        $o[3],
                        $o[4],
                    ],
                ],
                'options' => [
                    1 => [
                        'collation' => 'utf8mb4_unicode_ci',
                        'charset' => 'utf8mb4',
                        'comment' => 'Files associated to a submission',
                    ],
                    4 => [
                        'lengths' => [
                            null,
                            190,
                        ],
                    ],
                ],
                'columns' => [
                    2 => [
                        'submitid',
                    ],
                    [
                        'submitid',
                        'ranknumber',
                    ],
                    [
                        'submitid',
                        'filename',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
658 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\GeneratedValue'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\GeneratedValue')),
            clone ($p['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    2 => 'submitfileid',
                ],
                'type' => [
                    2 => 'integer',
                ],
                'length' => [
                    2 => 4,
                ],
                'precision' => [
                    2 => null,
                ],
                'scale' => [
                    2 => null,
                ],
                'options' => [
                    2 => [
                        'comment' => 'Submission file ID',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
659 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'filename',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    255,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'Filename as submitted',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
660 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'ranknumber',
                ],
                'type' => [
                    'integer',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'Order of the submission files, zero-indexed',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
661 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'Submission',
                ],
                'inversedBy' => [
                    'files',
                ],
                'name' => [
                    1 => 'submitid',
                ],
                'referencedColumnName' => [
                    1 => 'submitid',
                ],
                'onDelete' => [
                    1 => 'CASCADE',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
662 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'sourcecode',
                ],
                'type' => [
                    'blobtext',
                ],
                'length' => [
                    4294967295,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'Full source code',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
663 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
            clone ($p['Doctrine\\ORM\\Mapping\\Table'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Table')),
            clone ($p['Doctrine\\ORM\\Mapping\\Index'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Index')),
            clone $p['Doctrine\\ORM\\Mapping\\Index'],
            clone ($p['Doctrine\\ORM\\Mapping\\UniqueConstraint'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\UniqueConstraint')),
            clone ($p['Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'team',
                    'affilid',
                    'categoryid',
                    'externalid',
                ],
                'indexes' => [
                    1 => [
                        $o[2],
                        $o[3],
                    ],
                ],
                'uniqueConstraints' => [
                    1 => [
                        $o[4],
                    ],
                ],
                'options' => [
                    1 => [
                        'collation' => 'utf8mb4_unicode_ci',
                        'charset' => 'utf8mb4',
                    ],
                    4 => [
                        'lengths' => [
                            190,
                        ],
                    ],
                ],
                'columns' => [
                    2 => [
                        'affilid',
                    ],
                    [
                        'categoryid',
                    ],
                    [
                        'externalid',
                    ],
                ],
                'fields' => [
                    5 => 'externalid',
                ],
                'groups' => [
                    5 => [
                        'Default',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[5],
        ],
        []
    );
},
664 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['JMS\\Serializer\\Annotation\\VirtualProperty'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\VirtualProperty')),
            clone ($p['JMS\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\SerializedName')),
            clone ($p['JMS\\Serializer\\Annotation\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Type')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'organization_id',
                    'string',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
665 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['JMS\\Serializer\\Annotation\\VirtualProperty'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\VirtualProperty')),
            clone ($p['JMS\\Serializer\\Annotation\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Type')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'array<string>',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
666 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['JMS\\Serializer\\Annotation\\VirtualProperty'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\VirtualProperty')),
            clone ($p['JMS\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\SerializedName')),
            clone ($p['JMS\\Serializer\\Annotation\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Type')),
            clone ($p['JMS\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'affiliation',
                    'string',
                ],
                'groups' => [
                    3 => [
                        'Nonstrict',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
        ],
        []
    );
},
667 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['JMS\\Serializer\\Annotation\\VirtualProperty'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\VirtualProperty')),
            clone ($p['JMS\\Serializer\\Annotation\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Type')),
            clone ($p['JMS\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Groups')),
            clone ($p['JMS\\Serializer\\Annotation\\Expose'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Expose')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'string',
                ],
                'groups' => [
                    2 => [
                        'Nonstrict',
                    ],
                ],
                'if' => [
                    3 => 'context.getAttribute(\'config_service\').get(\'show_flags\')',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
        ],
        []
    );
},
668 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\GeneratedValue'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\GeneratedValue')),
            clone ($p['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\SerializedName')),
            clone ($p['JMS\\Serializer\\Annotation\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Type')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    2 => 'teamid',
                    'id',
                    'string',
                ],
                'type' => [
                    2 => 'integer',
                ],
                'length' => [
                    2 => 4,
                ],
                'precision' => [
                    2 => null,
                ],
                'scale' => [
                    2 => null,
                ],
                'options' => [
                    2 => [
                        'comment' => 'Team ID',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
            $o[4],
        ],
        []
    );
},
669 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'externalid',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    255,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Team ID in an external system',
                        'collation' => 'utf8mb4_bin',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
670 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\SerializedName')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'icpcid',
                    'icpc_id',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    255,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Team ID in the ICPC system',
                        'collation' => 'utf8mb4_bin',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
671 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'name',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    255,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'Team name',
                        'collation' => 'utf8mb4_bin',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
672 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'display_name',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    255,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Team display name',
                        'collation' => 'utf8mb4_bin',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
673 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'enabled',
                ],
                'type' => [
                    'boolean',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'Whether the team is visible and operational',
                        'default' => 1,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
674 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'publicdescription',
                ],
                'type' => [
                    'text',
                ],
                'length' => [
                    4294967295,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Public team definition; for example: Team member names (freeform)',
                    ],
                ],
                'groups' => [
                    1 => [
                        'Nonstrict',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
675 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'room',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    255,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Physical location of team',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
676 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'internalcomments',
                ],
                'type' => [
                    'text',
                ],
                'length' => [
                    4294967295,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Internal comments about this team (jury only)',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
677 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'judging_last_started',
                ],
                'type' => [
                    'decimal',
                ],
                'precision' => [
                    32,
                ],
                'scale' => [
                    9,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Start time of last judging for priorization',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
678 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'penalty',
                ],
                'type' => [
                    'integer',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'Additional penalty time in minutes',
                        'default' => 0,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
679 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\Regex'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Regex')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'message' => [
                    'Only alphanumeric characters and _-@. are allowed',
                ],
                'pattern' => [
                    '/^[a-z0-9@._-]+$/i',
                ],
                'groups' => [
                    [
                        'Default',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
680 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'TeamAffiliation',
                ],
                'inversedBy' => [
                    'teams',
                ],
                'name' => [
                    1 => 'affilid',
                ],
                'referencedColumnName' => [
                    1 => 'affilid',
                ],
                'onDelete' => [
                    1 => 'SET NULL',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
681 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'TeamCategory',
                ],
                'inversedBy' => [
                    'teams',
                ],
                'name' => [
                    1 => 'categoryid',
                ],
                'referencedColumnName' => [
                    1 => 'categoryid',
                ],
                'onDelete' => [
                    1 => 'CASCADE',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
682 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToMany')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'Contest',
                ],
                'mappedBy' => [
                    'teams',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
683 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\OneToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToMany')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Valid'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Valid')),
        ],
        null,
        [
            'stdClass' => [
                'mappedBy' => [
                    'team',
                ],
                'targetEntity' => [
                    'User',
                ],
                'cascade' => [
                    [
                        'persist',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
684 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\OneToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToMany')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'mappedBy' => [
                    'team',
                ],
                'targetEntity' => [
                    'Submission',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
685 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\OneToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToMany')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'mappedBy' => [
                    'sender',
                ],
                'targetEntity' => [
                    'Clarification',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
686 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\OneToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToMany')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'mappedBy' => [
                    'recipient',
                ],
                'targetEntity' => [
                    'Clarification',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
687 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToMany')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinTable'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinTable')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
            clone $p['Doctrine\\ORM\\Mapping\\JoinColumn'],
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'Clarification',
                ],
                'name' => [
                    1 => 'team_unread',
                    'teamid',
                    'mesgid',
                ],
                'joinColumns' => [
                    1 => [
                        $o[2],
                    ],
                ],
                'inverseJoinColumns' => [
                    1 => [
                        $o[3],
                    ],
                ],
                'referencedColumnName' => [
                    2 => 'teamid',
                    'clarid',
                ],
                'onDelete' => [
                    2 => 'CASCADE',
                    'CASCADE',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[4],
        ],
        []
    );
},
688 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
            clone ($p['Doctrine\\ORM\\Mapping\\Table'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Table')),
            clone ($p['Doctrine\\ORM\\Mapping\\UniqueConstraint'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\UniqueConstraint')),
            clone ($p['JMS\\Serializer\\Annotation\\VirtualProperty'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\VirtualProperty')),
            clone ($p['JMS\\Serializer\\Annotation\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Type')),
            clone ($p['JMS\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\SerializedName')),
            clone ($p['JMS\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Groups')),
            clone ($p['Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'team_affiliation',
                    'externalid',
                    'shortName',
                    'string',
                    'shortname',
                ],
                'uniqueConstraints' => [
                    1 => [
                        $o[2],
                    ],
                ],
                'options' => [
                    1 => [
                        'collation' => 'utf8mb4_unicode_ci',
                        'charset' => 'utf8mb4',
                        'comment' => 'Affilitations for teams (e.g.: university, company)',
                    ],
                    [
                        'lengths' => [
                            190,
                        ],
                    ],
                    [
                        $o[4],
                        $o[5],
                        $o[6],
                    ],
                ],
                'columns' => [
                    2 => [
                        'externalid',
                    ],
                ],
                'exp' => [
                    3 => 'object.getShortname()',
                ],
                'groups' => [
                    6 => [
                        'Nonstrict',
                    ],
                    [
                        'Default',
                    ],
                ],
                'fields' => [
                    7 => 'externalid',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[3],
            $o[7],
        ],
        []
    );
},
689 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\GeneratedValue'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\GeneratedValue')),
            clone ($p['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\SerializedName')),
            clone ($p['JMS\\Serializer\\Annotation\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Type')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    2 => 'affilid',
                    'id',
                    'string',
                ],
                'type' => [
                    2 => 'integer',
                ],
                'length' => [
                    2 => 4,
                ],
                'precision' => [
                    2 => null,
                ],
                'scale' => [
                    2 => null,
                ],
                'options' => [
                    2 => [
                        'comment' => 'Team affiliation ID',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
            $o[4],
        ],
        []
    );
},
690 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'externalid',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    255,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Team affiliation ID in an external system',
                        'collation' => 'utf8mb4_bin',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
691 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\SerializedName')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'icpcid',
                    'icpc_id',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    255,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'External identifier from ICPC CMS',
                        'collation' => 'utf8mb4_bin',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
692 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\SerializedName')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'shortname',
                    'name',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    32,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'Short descriptive name',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
693 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\SerializedName')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'name',
                    'formal_name',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    255,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'Descriptive name',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
694 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Expose'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Expose')),
            clone ($p['App\\Validator\\Constraints\\Country'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('App\\Validator\\Constraints\\Country')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'country',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    3,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'ISO 3166-1 alpha-3 country code',
                        'fixed' => true,
                    ],
                ],
                'if' => [
                    1 => 'context.getAttribute(\'config_service\').get(\'show_flags\')',
                ],
                'groups' => [
                    2 => [
                        'Default',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
695 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'internalcomments',
                ],
                'type' => [
                    'text',
                ],
                'length' => [
                    4294967295,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Internal comments (jury only)',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
696 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\OneToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToMany')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'mappedBy' => [
                    'affiliation',
                ],
                'targetEntity' => [
                    'Team',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
697 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
            clone ($p['Doctrine\\ORM\\Mapping\\Table'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Table')),
            clone ($p['Doctrine\\ORM\\Mapping\\Index'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Index')),
            clone ($p['Doctrine\\ORM\\Mapping\\UniqueConstraint'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\UniqueConstraint')),
            clone ($p['JMS\\Serializer\\Annotation\\VirtualProperty'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\VirtualProperty')),
            clone ($p['JMS\\Serializer\\Annotation\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Type')),
            clone ($p['Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'team_category',
                    'sortorder',
                    'externalid',
                    'hidden',
                    'boolean',
                ],
                'indexes' => [
                    1 => [
                        $o[2],
                    ],
                ],
                'uniqueConstraints' => [
                    1 => [
                        $o[3],
                    ],
                ],
                'options' => [
                    1 => [
                        'collation' => 'utf8mb4_unicode_ci',
                        'charset' => 'utf8mb4',
                        'comment' => 'Categories for teams (e.g.: participants, observers, ...)',
                    ],
                    3 => [
                        'lengths' => [
                            190,
                        ],
                    ],
                    [
                        $o[5],
                    ],
                ],
                'columns' => [
                    2 => [
                        'sortorder',
                    ],
                    [
                        'externalid',
                    ],
                ],
                'exp' => [
                    4 => '!object.getVisible()',
                ],
                'fields' => [
                    6 => 'externalid',
                ],
                'groups' => [
                    6 => [
                        'Default',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[4],
            $o[6],
        ],
        []
    );
},
698 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\GeneratedValue'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\GeneratedValue')),
            clone ($p['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\SerializedName')),
            clone ($p['JMS\\Serializer\\Annotation\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Type')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    2 => 'categoryid',
                    'id',
                    'string',
                ],
                'type' => [
                    2 => 'integer',
                ],
                'length' => [
                    2 => 4,
                ],
                'precision' => [
                    2 => null,
                ],
                'scale' => [
                    2 => null,
                ],
                'options' => [
                    2 => [
                        'comment' => 'Team category ID',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
            $o[4],
        ],
        []
    );
},
699 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'externalid',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    255,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Team category ID in an external system',
                        'collation' => 'utf8mb4_bin',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
700 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Groups')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\GreaterThanOrEqual'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\GreaterThanOrEqual')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'sortorder',
                ],
                'type' => [
                    'tinyint',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'Where to sort this category on the scoreboard',
                        'unsigned' => true,
                        'default' => '0',
                    ],
                ],
                'groups' => [
                    1 => [
                        'Nonstrict',
                    ],
                    [
                        'Default',
                    ],
                ],
                'message' => [
                    2 => 'Only non-negative sortorders are supported',
                ],
                'value' => [
                    2 => 0,
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
701 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'color',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    32,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Background colour on the scoreboard',
                    ],
                ],
                'groups' => [
                    1 => [
                        'Nonstrict',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
702 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'visible',
                ],
                'type' => [
                    'boolean',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'Are teams in this category visible?',
                        'default' => '1',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
703 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'allow_self_registration',
                ],
                'type' => [
                    'boolean',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'Are self-registered teams allowed to choose this category?',
                        'default' => '0',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
704 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\OneToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToMany')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'mappedBy' => [
                    'category',
                ],
                'targetEntity' => [
                    'Team',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
705 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToMany')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'Contest',
                ],
                'mappedBy' => [
                    'team_categories',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
706 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToMany')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'Contest',
                ],
                'mappedBy' => [
                    'medal_categories',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
707 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
            clone ($p['Doctrine\\ORM\\Mapping\\Table'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Table')),
            clone ($p['Doctrine\\ORM\\Mapping\\Index'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Index')),
            clone ($p['Doctrine\\ORM\\Mapping\\UniqueConstraint'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\UniqueConstraint')),
            clone $p['Doctrine\\ORM\\Mapping\\UniqueConstraint'],
            clone ($p['Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'user',
                    'teamid',
                    'username',
                    'externalid',
                ],
                'indexes' => [
                    1 => [
                        $o[2],
                    ],
                ],
                'uniqueConstraints' => [
                    1 => [
                        $o[3],
                        $o[4],
                    ],
                ],
                'options' => [
                    1 => [
                        'collation' => 'utf8mb4_unicode_ci',
                        'charset' => 'utf8mb4',
                        'comment' => 'Users that have access to DOMjudge',
                    ],
                    3 => [
                        'lengths' => [
                            190,
                        ],
                    ],
                    [
                        'lengths' => [
                            190,
                        ],
                    ],
                ],
                'columns' => [
                    2 => [
                        'teamid',
                    ],
                    [
                        'username',
                    ],
                    [
                        'externalid',
                    ],
                ],
                'message' => [
                    5 => 'The username \'{{ value }}\' is already in use.',
                ],
                'fields' => [
                    5 => 'username',
                ],
                'groups' => [
                    5 => [
                        'Default',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[5],
        ],
        []
    );
},
708 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['JMS\\Serializer\\Annotation\\VirtualProperty'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\VirtualProperty')),
            clone ($p['JMS\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\SerializedName')),
            clone ($p['JMS\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Groups')),
            clone ($p['JMS\\Serializer\\Annotation\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Type')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'last_login_time',
                    3 => 'DateTime',
                ],
                'groups' => [
                    2 => [
                        'Nonstrict',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
        ],
        []
    );
},
709 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['JMS\\Serializer\\Annotation\\VirtualProperty'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\VirtualProperty')),
            clone ($p['JMS\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\SerializedName')),
            clone ($p['JMS\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Groups')),
            clone ($p['JMS\\Serializer\\Annotation\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Type')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'first_login_time',
                    3 => 'DateTime',
                ],
                'groups' => [
                    2 => [
                        'Nonstrict',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
        ],
        []
    );
},
710 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['JMS\\Serializer\\Annotation\\VirtualProperty'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\VirtualProperty')),
            clone ($p['JMS\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\SerializedName')),
            clone ($p['JMS\\Serializer\\Annotation\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Type')),
            clone ($p['JMS\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'team',
                    'string',
                ],
                'groups' => [
                    3 => [
                        'Nonstrict',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
        ],
        []
    );
},
711 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['JMS\\Serializer\\Annotation\\VirtualProperty'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\VirtualProperty')),
            clone ($p['JMS\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\SerializedName')),
            clone ($p['JMS\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Groups')),
            clone ($p['JMS\\Serializer\\Annotation\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Type')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'roles',
                    3 => 'array<string>',
                ],
                'groups' => [
                    2 => [
                        'Nonstrict',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
        ],
        []
    );
},
712 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['JMS\\Serializer\\Annotation\\VirtualProperty'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\VirtualProperty')),
            clone ($p['JMS\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\SerializedName')),
            clone ($p['JMS\\Serializer\\Annotation\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Type')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'type',
                    'string',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
713 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\GeneratedValue'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\GeneratedValue')),
            clone ($p['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\SerializedName')),
            clone ($p['JMS\\Serializer\\Annotation\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Type')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    2 => 'userid',
                    'id',
                    'string',
                ],
                'type' => [
                    2 => 'integer',
                ],
                'length' => [
                    2 => 4,
                ],
                'precision' => [
                    2 => null,
                ],
                'scale' => [
                    2 => null,
                ],
                'options' => [
                    2 => [
                        'comment' => 'User ID',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
            $o[4],
        ],
        []
    );
},
714 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'externalid',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    255,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'User ID in an external system',
                        'collation' => 'utf8mb4_bin',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
715 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Regex'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Regex')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'username',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    255,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'User login name',
                    ],
                ],
                'message' => [
                    1 => 'Only alphanumeric characters and _-@. are allowed',
                ],
                'pattern' => [
                    1 => '/^[a-z0-9@._-]+$/i',
                ],
                'groups' => [
                    1 => [
                        'Default',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
716 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'name',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    255,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'Name',
                    ],
                ],
                'groups' => [
                    1 => [
                        'Nonstrict',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
717 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Email'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Email')),
            clone ($p['JMS\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'email',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    255,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Email address',
                    ],
                ],
                'groups' => [
                    1 => [
                        'Default',
                    ],
                    [
                        'Nonstrict',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
718 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'last_login',
                ],
                'type' => [
                    'decimal',
                ],
                'precision' => [
                    32,
                ],
                'scale' => [
                    9,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Time of last successful login',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
719 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'first_login',
                ],
                'type' => [
                    'decimal',
                ],
                'precision' => [
                    32,
                ],
                'scale' => [
                    9,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Time of first login',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
720 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\SerializedName')),
            clone ($p['JMS\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'last_ip_address',
                    'last_ip',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    255,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Last IP address of successful login',
                    ],
                ],
                'groups' => [
                    2 => [
                        'Nonstrict',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
721 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'password',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    255,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Password hash',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
722 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\SerializedName')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Ip'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Ip')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'ip_address',
                    'ip',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    255,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'IP Address used to autologin',
                    ],
                ],
                'version' => [
                    2 => 'all',
                ],
                'groups' => [
                    2 => [
                        'Default',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
723 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'enabled',
                ],
                'type' => [
                    'boolean',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'comment' => 'Whether the user is able to log in',
                        'default' => '1',
                    ],
                ],
                'groups' => [
                    1 => [
                        'Nonstrict',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
724 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'Team',
                ],
                'inversedBy' => [
                    'users',
                ],
                'name' => [
                    1 => 'teamid',
                ],
                'referencedColumnName' => [
                    1 => 'teamid',
                ],
                'onDelete' => [
                    1 => 'SET NULL',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
725 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToMany')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinTable'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinTable')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
            clone $p['Doctrine\\ORM\\Mapping\\JoinColumn'],
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Count'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Count')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'Role',
                ],
                'inversedBy' => [
                    'users',
                ],
                'name' => [
                    1 => 'userrole',
                    'userid',
                    'roleid',
                ],
                'joinColumns' => [
                    1 => [
                        $o[2],
                    ],
                ],
                'inverseJoinColumns' => [
                    1 => [
                        $o[3],
                    ],
                ],
                'referencedColumnName' => [
                    2 => 'userid',
                    'roleid',
                ],
                'onDelete' => [
                    2 => 'CASCADE',
                    'CASCADE',
                ],
                'min' => [
                    5 => '1',
                ],
                'groups' => [
                    5 => [
                        'Default',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[4],
            $o[5],
        ],
        []
    );
},
726 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\OneToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToMany')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'mappedBy' => [
                    'user',
                ],
                'targetEntity' => [
                    'Submission',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},

]];
