<?php //App%255CEntity%255CTeamCategory

return [PHP_INT_MAX, static function () { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
        clone ($p['Doctrine\\ORM\\Mapping\\Table'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Table')),
        clone ($p['Doctrine\\ORM\\Mapping\\Index'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Index')),
        clone ($p['Doctrine\\ORM\\Mapping\\UniqueConstraint'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\UniqueConstraint')),
        clone ($p['JMS\\Serializer\\Annotation\\VirtualProperty'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\VirtualProperty')),
        clone ($p['JMS\\Serializer\\Annotation\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Type')),
        clone ($p['Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity')),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                1 => 'team_category',
                'sortorder',
                'externalid',
                'hidden',
                'boolean',
            ],
            'indexes' => [
                1 => [
                    $o[2],
                ],
            ],
            'uniqueConstraints' => [
                1 => [
                    $o[3],
                ],
            ],
            'options' => [
                1 => [
                    'collation' => 'utf8mb4_unicode_ci',
                    'charset' => 'utf8mb4',
                    'comment' => 'Categories for teams (e.g.: participants, observers, ...)',
                ],
                3 => [
                    'lengths' => [
                        190,
                    ],
                ],
                [
                    $o[5],
                ],
            ],
            'columns' => [
                2 => [
                    'sortorder',
                ],
                [
                    'externalid',
                ],
            ],
            'exp' => [
                4 => '!object.getVisible()',
            ],
            'fields' => [
                6 => 'externalid',
            ],
            'groups' => [
                6 => [
                    'Default',
                ],
            ],
        ],
    ],
    [
        $o[0],
        $o[1],
        $o[4],
        $o[6],
    ],
    []
); }];
