<?php //App%255CController%255CAPI%255CExecutableController%2523singleAction

return [PHP_INT_MAX, static function () { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Security'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Security')),
        clone ($p['FOS\\RestBundle\\Controller\\Annotations\\Get'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Get')),
        clone ($p['OpenApi\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Parameter')),
        clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
        clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
        clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
        clone $p['OpenApi\\Context'],
        clone $p['OpenApi\\Loggers\\DefaultLogger'],
        clone ($p['OpenApi\\Annotations\\JsonContent'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\JsonContent')),
        clone $p['OpenApi\\Context'],
        clone $p['OpenApi\\Loggers\\DefaultLogger'],
    ],
    null,
    [
        'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Security' => [
            'expression' => [
                'is_granted(\'ROLE_JURY\') or is_granted(\'ROLE_JUDGEHOST\')',
            ],
        ],
        'Symfony\\Component\\Routing\\Annotation\\Route' => [
            'path' => [
                1 => '/{id}',
            ],
            'methods' => [
                1 => [
                    'GET',
                ],
            ],
        ],
        'stdClass' => [
            'ref' => [
                2 => '#/components/parameters/id',
            ],
            '_context' => [
                2 => $o[3],
                5 => $o[6],
                8 => $o[9],
            ],
            'logger' => [
                3 => $o[4],
                6 => $o[7],
                9 => $o[10],
            ],
            'filename' => [
                3 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                6 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                9 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
            ],
            'line' => [
                3 => 977,
                6 => 977,
                9 => 977,
            ],
            'method' => [
                3 => 'Annotation',
                6 => 'Annotation',
                9 => 'Annotation',
            ],
            'class' => [
                3 => 'DocParser',
                6 => 'DocParser',
                9 => 'DocParser',
            ],
            'namespace' => [
                3 => 'Doctrine\\Common\\Annotations',
                6 => 'Doctrine\\Common\\Annotations',
                9 => 'Doctrine\\Common\\Annotations',
            ],
            'annotations' => [
                3 => [
                    $o[2],
                ],
                6 => [
                    $o[5],
                ],
                9 => [
                    $o[8],
                ],
            ],
            'response' => [
                5 => '200',
            ],
            'description' => [
                5 => 'Information about the requested executable',
                8 => 'Base64-encoded executable contents',
            ],
            '_unmerged' => [
                5 => [
                    $o[8],
                ],
            ],
            'type' => [
                8 => 'string',
            ],
        ],
    ],
    [
        $o[0],
        $o[1],
        $o[2],
        $o[5],
    ],
    []
); }];
