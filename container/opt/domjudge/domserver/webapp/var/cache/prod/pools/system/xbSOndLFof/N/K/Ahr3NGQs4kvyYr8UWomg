<?php //App%255CEntity%255CUser%2524user_roles

return [PHP_INT_MAX, static function () { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToMany')),
        clone ($p['Doctrine\\ORM\\Mapping\\JoinTable'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinTable')),
        clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
        clone $p['Doctrine\\ORM\\Mapping\\JoinColumn'],
        clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Count'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Count')),
    ],
    null,
    [
        'stdClass' => [
            'targetEntity' => [
                'Role',
            ],
            'inversedBy' => [
                'users',
            ],
            'name' => [
                1 => 'userrole',
                'userid',
                'roleid',
            ],
            'joinColumns' => [
                1 => [
                    $o[2],
                ],
            ],
            'inverseJoinColumns' => [
                1 => [
                    $o[3],
                ],
            ],
            'referencedColumnName' => [
                2 => 'userid',
                'roleid',
            ],
            'onDelete' => [
                2 => 'CASCADE',
                'CASCADE',
            ],
            'min' => [
                5 => '1',
            ],
            'groups' => [
                5 => [
                    'Default',
                ],
            ],
        ],
    ],
    [
        $o[0],
        $o[1],
        $o[4],
        $o[5],
    ],
    []
); }];
