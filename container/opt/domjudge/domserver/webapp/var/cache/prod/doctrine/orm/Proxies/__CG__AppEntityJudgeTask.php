<?php

namespace Proxies\__CG__\App\Entity;


/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class JudgeTask extends \App\Entity\JudgeTask implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\JudgeTask' . "\0" . 'judgetaskid', '' . "\0" . 'App\\Entity\\JudgeTask' . "\0" . 'judgehost', '' . "\0" . 'App\\Entity\\JudgeTask' . "\0" . 'type', '' . "\0" . 'App\\Entity\\JudgeTask' . "\0" . 'priority', '' . "\0" . 'App\\Entity\\JudgeTask' . "\0" . 'jobid', '' . "\0" . 'App\\Entity\\JudgeTask' . "\0" . 'uuid', '' . "\0" . 'App\\Entity\\JudgeTask' . "\0" . 'submitid', '' . "\0" . 'App\\Entity\\JudgeTask' . "\0" . 'compile_script_id', '' . "\0" . 'App\\Entity\\JudgeTask' . "\0" . 'run_script_id', '' . "\0" . 'App\\Entity\\JudgeTask' . "\0" . 'compare_script_id', '' . "\0" . 'App\\Entity\\JudgeTask' . "\0" . 'testcase_id', '' . "\0" . 'App\\Entity\\JudgeTask' . "\0" . 'testcase_hash', 'compile_config', 'run_config', 'compare_config', 'valid', '' . "\0" . 'App\\Entity\\JudgeTask' . "\0" . 'starttime', '' . "\0" . 'App\\Entity\\JudgeTask' . "\0" . 'judging_runs'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\JudgeTask' . "\0" . 'judgetaskid', '' . "\0" . 'App\\Entity\\JudgeTask' . "\0" . 'judgehost', '' . "\0" . 'App\\Entity\\JudgeTask' . "\0" . 'type', '' . "\0" . 'App\\Entity\\JudgeTask' . "\0" . 'priority', '' . "\0" . 'App\\Entity\\JudgeTask' . "\0" . 'jobid', '' . "\0" . 'App\\Entity\\JudgeTask' . "\0" . 'uuid', '' . "\0" . 'App\\Entity\\JudgeTask' . "\0" . 'submitid', '' . "\0" . 'App\\Entity\\JudgeTask' . "\0" . 'compile_script_id', '' . "\0" . 'App\\Entity\\JudgeTask' . "\0" . 'run_script_id', '' . "\0" . 'App\\Entity\\JudgeTask' . "\0" . 'compare_script_id', '' . "\0" . 'App\\Entity\\JudgeTask' . "\0" . 'testcase_id', '' . "\0" . 'App\\Entity\\JudgeTask' . "\0" . 'testcase_hash', 'compile_config', 'run_config', 'compare_config', 'valid', '' . "\0" . 'App\\Entity\\JudgeTask' . "\0" . 'starttime', '' . "\0" . 'App\\Entity\\JudgeTask' . "\0" . 'judging_runs'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (JudgeTask $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load(): void
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized(): bool
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized): void
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null): void
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer(): ?\Closure
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null): void
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner(): ?\Closure
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties(): array
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getJudgetaskid(): int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getJudgetaskid();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getJudgetaskid', []);

        return parent::getJudgetaskid();
    }

    /**
     * {@inheritDoc}
     */
    public function setJudgehost(\App\Entity\Judgehost $judgehost = NULL): \App\Entity\JudgeTask
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setJudgehost', [$judgehost]);

        return parent::setJudgehost($judgehost);
    }

    /**
     * {@inheritDoc}
     */
    public function getJudgehost(): ?\App\Entity\Judgehost
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getJudgehost', []);

        return parent::getJudgehost();
    }

    /**
     * {@inheritDoc}
     */
    public function setType(string $type): \App\Entity\JudgeTask
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setType', [$type]);

        return parent::setType($type);
    }

    /**
     * {@inheritDoc}
     */
    public function getType(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getType', []);

        return parent::getType();
    }

    /**
     * {@inheritDoc}
     */
    public function setPriority(int $priority): \App\Entity\JudgeTask
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPriority', [$priority]);

        return parent::setPriority($priority);
    }

    /**
     * {@inheritDoc}
     */
    public function getPriority(): int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPriority', []);

        return parent::getPriority();
    }

    /**
     * {@inheritDoc}
     */
    public function setJobId($jobid): \App\Entity\JudgeTask
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setJobId', [$jobid]);

        return parent::setJobId($jobid);
    }

    /**
     * {@inheritDoc}
     */
    public function getJobId(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getJobId', []);

        return parent::getJobId();
    }

    /**
     * {@inheritDoc}
     */
    public function setUuid(string $uuid): \App\Entity\JudgeTask
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUuid', [$uuid]);

        return parent::setUuid($uuid);
    }

    /**
     * {@inheritDoc}
     */
    public function getUuid(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUuid', []);

        return parent::getUuid();
    }

    /**
     * {@inheritDoc}
     */
    public function setSubmitid(int $submitid): \App\Entity\JudgeTask
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSubmitid', [$submitid]);

        return parent::setSubmitid($submitid);
    }

    /**
     * {@inheritDoc}
     */
    public function getSubmitid(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSubmitid', []);

        return parent::getSubmitid();
    }

    /**
     * {@inheritDoc}
     */
    public function setCompileScriptId(int $compile_script_id): \App\Entity\JudgeTask
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCompileScriptId', [$compile_script_id]);

        return parent::setCompileScriptId($compile_script_id);
    }

    /**
     * {@inheritDoc}
     */
    public function getCompileScriptId(): int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCompileScriptId', []);

        return parent::getCompileScriptId();
    }

    /**
     * {@inheritDoc}
     */
    public function setRunScriptId(int $run_script_id): \App\Entity\JudgeTask
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRunScriptId', [$run_script_id]);

        return parent::setRunScriptId($run_script_id);
    }

    /**
     * {@inheritDoc}
     */
    public function getRunScriptId(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRunScriptId', []);

        return parent::getRunScriptId();
    }

    /**
     * {@inheritDoc}
     */
    public function setCompareScriptId(int $compare_script_id): \App\Entity\JudgeTask
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCompareScriptId', [$compare_script_id]);

        return parent::setCompareScriptId($compare_script_id);
    }

    /**
     * {@inheritDoc}
     */
    public function getCompareScriptId(): int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCompareScriptId', []);

        return parent::getCompareScriptId();
    }

    /**
     * {@inheritDoc}
     */
    public function setTestcaseId(int $testcase_id): \App\Entity\JudgeTask
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTestcaseId', [$testcase_id]);

        return parent::setTestcaseId($testcase_id);
    }

    /**
     * {@inheritDoc}
     */
    public function getTestcaseId(): int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTestcaseId', []);

        return parent::getTestcaseId();
    }

    /**
     * {@inheritDoc}
     */
    public function setTestcaseHash(?string $testcase_hash): \App\Entity\JudgeTask
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTestcaseHash', [$testcase_hash]);

        return parent::setTestcaseHash($testcase_hash);
    }

    /**
     * {@inheritDoc}
     */
    public function getTestcaseHash(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTestcaseHash', []);

        return parent::getTestcaseHash();
    }

    /**
     * {@inheritDoc}
     */
    public function setCompileConfig(string $compile_config): \App\Entity\JudgeTask
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCompileConfig', [$compile_config]);

        return parent::setCompileConfig($compile_config);
    }

    /**
     * {@inheritDoc}
     */
    public function getCompileConfig(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCompileConfig', []);

        return parent::getCompileConfig();
    }

    /**
     * {@inheritDoc}
     */
    public function setRunConfig(string $run_config): \App\Entity\JudgeTask
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRunConfig', [$run_config]);

        return parent::setRunConfig($run_config);
    }

    /**
     * {@inheritDoc}
     */
    public function getRunConfig(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRunConfig', []);

        return parent::getRunConfig();
    }

    /**
     * {@inheritDoc}
     */
    public function setCompareConfig(string $compare_config): \App\Entity\JudgeTask
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCompareConfig', [$compare_config]);

        return parent::setCompareConfig($compare_config);
    }

    /**
     * {@inheritDoc}
     */
    public function getCompareConfig(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCompareConfig', []);

        return parent::getCompareConfig();
    }

    /**
     * {@inheritDoc}
     */
    public function setValid(bool $valid): \App\Entity\JudgeTask
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setValid', [$valid]);

        return parent::setValid($valid);
    }

    /**
     * {@inheritDoc}
     */
    public function getValid(): bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getValid', []);

        return parent::getValid();
    }

    /**
     * {@inheritDoc}
     */
    public function setStarttime($starttime): \App\Entity\JudgeTask
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStarttime', [$starttime]);

        return parent::setStarttime($starttime);
    }

    /**
     * {@inheritDoc}
     */
    public function getStarttime()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStarttime', []);

        return parent::getStarttime();
    }

    /**
     * {@inheritDoc}
     */
    public function addJudgingRun(\App\Entity\JudgingRun $judgingRun): \App\Entity\JudgeTask
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addJudgingRun', [$judgingRun]);

        return parent::addJudgingRun($judgingRun);
    }

    /**
     * {@inheritDoc}
     */
    public function removeJudgingRun(\App\Entity\JudgingRun $judgingRun): \App\Entity\JudgeTask
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeJudgingRun', [$judgingRun]);

        return parent::removeJudgingRun($judgingRun);
    }

    /**
     * {@inheritDoc}
     */
    public function getJudgingRuns(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getJudgingRuns', []);

        return parent::getJudgingRuns();
    }

    /**
     * {@inheritDoc}
     */
    public function getFirstJudgingRun(): ?\App\Entity\JudgingRun
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFirstJudgingRun', []);

        return parent::getFirstJudgingRun();
    }

}
