<?php

namespace Proxies\__CG__\App\Entity;


/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class ExternalContestSource extends \App\Entity\ExternalContestSource implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\ExternalContestSource' . "\0" . 'extsourceid', '' . "\0" . 'App\\Entity\\ExternalContestSource' . "\0" . 'enabled', '' . "\0" . 'App\\Entity\\ExternalContestSource' . "\0" . 'type', '' . "\0" . 'App\\Entity\\ExternalContestSource' . "\0" . 'source', '' . "\0" . 'App\\Entity\\ExternalContestSource' . "\0" . 'username', '' . "\0" . 'App\\Entity\\ExternalContestSource' . "\0" . 'password', '' . "\0" . 'App\\Entity\\ExternalContestSource' . "\0" . 'lastEventId', '' . "\0" . 'App\\Entity\\ExternalContestSource' . "\0" . 'lastPollTime', '' . "\0" . 'App\\Entity\\ExternalContestSource' . "\0" . 'contest', '' . "\0" . 'App\\Entity\\ExternalContestSource' . "\0" . 'warnings'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\ExternalContestSource' . "\0" . 'extsourceid', '' . "\0" . 'App\\Entity\\ExternalContestSource' . "\0" . 'enabled', '' . "\0" . 'App\\Entity\\ExternalContestSource' . "\0" . 'type', '' . "\0" . 'App\\Entity\\ExternalContestSource' . "\0" . 'source', '' . "\0" . 'App\\Entity\\ExternalContestSource' . "\0" . 'username', '' . "\0" . 'App\\Entity\\ExternalContestSource' . "\0" . 'password', '' . "\0" . 'App\\Entity\\ExternalContestSource' . "\0" . 'lastEventId', '' . "\0" . 'App\\Entity\\ExternalContestSource' . "\0" . 'lastPollTime', '' . "\0" . 'App\\Entity\\ExternalContestSource' . "\0" . 'contest', '' . "\0" . 'App\\Entity\\ExternalContestSource' . "\0" . 'warnings'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (ExternalContestSource $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load(): void
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized(): bool
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized): void
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null): void
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer(): ?\Closure
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null): void
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner(): ?\Closure
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties(): array
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getExtsourceid(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getExtsourceid();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExtsourceid', []);

        return parent::getExtsourceid();
    }

    /**
     * {@inheritDoc}
     */
    public function isEnabled(): bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isEnabled', []);

        return parent::isEnabled();
    }

    /**
     * {@inheritDoc}
     */
    public function setEnabled(bool $enabled): \App\Entity\ExternalContestSource
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEnabled', [$enabled]);

        return parent::setEnabled($enabled);
    }

    /**
     * {@inheritDoc}
     */
    public function getType(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getType', []);

        return parent::getType();
    }

    /**
     * {@inheritDoc}
     */
    public function getReadableType(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReadableType', []);

        return parent::getReadableType();
    }

    /**
     * {@inheritDoc}
     */
    public function setType(string $type): \App\Entity\ExternalContestSource
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setType', [$type]);

        return parent::setType($type);
    }

    /**
     * {@inheritDoc}
     */
    public function getSource(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSource', []);

        return parent::getSource();
    }

    /**
     * {@inheritDoc}
     */
    public function setSource(string $source): \App\Entity\ExternalContestSource
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSource', [$source]);

        return parent::setSource($source);
    }

    /**
     * {@inheritDoc}
     */
    public function getUsername(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUsername', []);

        return parent::getUsername();
    }

    /**
     * {@inheritDoc}
     */
    public function setUsername(?string $username): \App\Entity\ExternalContestSource
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUsername', [$username]);

        return parent::setUsername($username);
    }

    /**
     * {@inheritDoc}
     */
    public function getPassword(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPassword', []);

        return parent::getPassword();
    }

    /**
     * {@inheritDoc}
     */
    public function setPassword(?string $password): \App\Entity\ExternalContestSource
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPassword', [$password]);

        return parent::setPassword($password);
    }

    /**
     * {@inheritDoc}
     */
    public function getLastEventId(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastEventId', []);

        return parent::getLastEventId();
    }

    /**
     * {@inheritDoc}
     */
    public function setLastEventId(?string $lastEventId): \App\Entity\ExternalContestSource
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLastEventId', [$lastEventId]);

        return parent::setLastEventId($lastEventId);
    }

    /**
     * {@inheritDoc}
     */
    public function getLastPollTime(): ?float
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastPollTime', []);

        return parent::getLastPollTime();
    }

    /**
     * {@inheritDoc}
     */
    public function setLastPollTime(?float $lastPollTime): \App\Entity\ExternalContestSource
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLastPollTime', [$lastPollTime]);

        return parent::setLastPollTime($lastPollTime);
    }

    /**
     * {@inheritDoc}
     */
    public function setContest(\App\Entity\Contest $contest = NULL): \App\Entity\ExternalContestSource
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContest', [$contest]);

        return parent::setContest($contest);
    }

    /**
     * {@inheritDoc}
     */
    public function getContest(): \App\Entity\Contest
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContest', []);

        return parent::getContest();
    }

    /**
     * {@inheritDoc}
     */
    public function getExternalSourceWarnings(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExternalSourceWarnings', []);

        return parent::getExternalSourceWarnings();
    }

    /**
     * {@inheritDoc}
     */
    public function addExternalSourceWarning(\App\Entity\ExternalSourceWarning $warning): \App\Entity\ExternalContestSource
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addExternalSourceWarning', [$warning]);

        return parent::addExternalSourceWarning($warning);
    }

    /**
     * {@inheritDoc}
     */
    public function removeExternalSourceWarning(\App\Entity\ExternalSourceWarning $warning): \App\Entity\ExternalContestSource
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeExternalSourceWarning', [$warning]);

        return parent::removeExternalSourceWarning($warning);
    }

    /**
     * {@inheritDoc}
     */
    public function getShortDescription(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getShortDescription', []);

        return parent::getShortDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function validate(\Symfony\Component\Validator\Context\ExecutionContextInterface $context): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'validate', [$context]);

        parent::validate($context);
    }

}
