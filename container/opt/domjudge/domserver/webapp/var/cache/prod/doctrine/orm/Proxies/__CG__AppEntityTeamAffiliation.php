<?php

namespace Proxies\__CG__\App\Entity;


/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class TeamAffiliation extends \App\Entity\TeamAffiliation implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'affilid', 'externalid', 'icpcid', '' . "\0" . 'App\\Entity\\TeamAffiliation' . "\0" . 'shortname', '' . "\0" . 'App\\Entity\\TeamAffiliation' . "\0" . 'name', '' . "\0" . 'App\\Entity\\TeamAffiliation' . "\0" . 'country', '' . "\0" . 'App\\Entity\\TeamAffiliation' . "\0" . 'logoFile', '' . "\0" . 'App\\Entity\\TeamAffiliation' . "\0" . 'clearLogo', '' . "\0" . 'App\\Entity\\TeamAffiliation' . "\0" . 'internalComments', '' . "\0" . 'App\\Entity\\TeamAffiliation' . "\0" . 'teams'];
        }

        return ['__isInitialized__', 'affilid', 'externalid', 'icpcid', '' . "\0" . 'App\\Entity\\TeamAffiliation' . "\0" . 'shortname', '' . "\0" . 'App\\Entity\\TeamAffiliation' . "\0" . 'name', '' . "\0" . 'App\\Entity\\TeamAffiliation' . "\0" . 'country', '' . "\0" . 'App\\Entity\\TeamAffiliation' . "\0" . 'logoFile', '' . "\0" . 'App\\Entity\\TeamAffiliation' . "\0" . 'clearLogo', '' . "\0" . 'App\\Entity\\TeamAffiliation' . "\0" . 'internalComments', '' . "\0" . 'App\\Entity\\TeamAffiliation' . "\0" . 'teams'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (TeamAffiliation $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load(): void
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized(): bool
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized): void
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null): void
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer(): ?\Closure
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null): void
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner(): ?\Closure
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties(): array
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function setAffilid(int $affilid): \App\Entity\TeamAffiliation
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAffilid', [$affilid]);

        return parent::setAffilid($affilid);
    }

    /**
     * {@inheritDoc}
     */
    public function getAffilid(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getAffilid();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAffilid', []);

        return parent::getAffilid();
    }

    /**
     * {@inheritDoc}
     */
    public function setExternalid(?string $externalid): \App\Entity\TeamAffiliation
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setExternalid', [$externalid]);

        return parent::setExternalid($externalid);
    }

    /**
     * {@inheritDoc}
     */
    public function getExternalid(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExternalid', []);

        return parent::getExternalid();
    }

    /**
     * {@inheritDoc}
     */
    public function setIcpcid(?string $icpcid): \App\Entity\TeamAffiliation
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIcpcid', [$icpcid]);

        return parent::setIcpcid($icpcid);
    }

    /**
     * {@inheritDoc}
     */
    public function getIcpcid(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIcpcid', []);

        return parent::getIcpcid();
    }

    /**
     * {@inheritDoc}
     */
    public function setShortname(string $shortname): \App\Entity\TeamAffiliation
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setShortname', [$shortname]);

        return parent::setShortname($shortname);
    }

    /**
     * {@inheritDoc}
     */
    public function getShortname(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getShortname', []);

        return parent::getShortname();
    }

    /**
     * {@inheritDoc}
     */
    public function setName(string $name): \App\Entity\TeamAffiliation
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getName(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function getShortDescription(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getShortDescription', []);

        return parent::getShortDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setCountry(?string $country): \App\Entity\TeamAffiliation
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCountry', [$country]);

        return parent::setCountry($country);
    }

    /**
     * {@inheritDoc}
     */
    public function getCountry(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCountry', []);

        return parent::getCountry();
    }

    /**
     * {@inheritDoc}
     */
    public function setInternalComments(?string $comments): \App\Entity\TeamAffiliation
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInternalComments', [$comments]);

        return parent::setInternalComments($comments);
    }

    /**
     * {@inheritDoc}
     */
    public function getInternalComments(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInternalComments', []);

        return parent::getInternalComments();
    }

    /**
     * {@inheritDoc}
     */
    public function getLogoFile(): ?\Symfony\Component\HttpFoundation\File\UploadedFile
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLogoFile', []);

        return parent::getLogoFile();
    }

    /**
     * {@inheritDoc}
     */
    public function setLogoFile(?\Symfony\Component\HttpFoundation\File\UploadedFile $logoFile): \App\Entity\TeamAffiliation
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLogoFile', [$logoFile]);

        return parent::setLogoFile($logoFile);
    }

    /**
     * {@inheritDoc}
     */
    public function isClearLogo(): bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isClearLogo', []);

        return parent::isClearLogo();
    }

    /**
     * {@inheritDoc}
     */
    public function setClearLogo(bool $clearLogo): \App\Entity\TeamAffiliation
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setClearLogo', [$clearLogo]);

        return parent::setClearLogo($clearLogo);
    }

    /**
     * {@inheritDoc}
     */
    public function addTeam(\App\Entity\Team $team): \App\Entity\TeamAffiliation
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addTeam', [$team]);

        return parent::addTeam($team);
    }

    /**
     * {@inheritDoc}
     */
    public function removeTeam(\App\Entity\Team $team): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeTeam', [$team]);

        parent::removeTeam($team);
    }

    /**
     * {@inheritDoc}
     */
    public function getTeams(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTeams', []);

        return parent::getTeams();
    }

    /**
     * {@inheritDoc}
     */
    public function getAssetProperties(): array
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAssetProperties', []);

        return parent::getAssetProperties();
    }

    /**
     * {@inheritDoc}
     */
    public function getAssetFile(string $property): ?\Symfony\Component\HttpFoundation\File\UploadedFile
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAssetFile', [$property]);

        return parent::getAssetFile($property);
    }

    /**
     * {@inheritDoc}
     */
    public function isClearAsset(string $property): ?bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isClearAsset', [$property]);

        return parent::isClearAsset($property);
    }

    /**
     * {@inheritDoc}
     */
    public function getApiIdField(\App\Service\EventLogService $eventLogService): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getApiIdField', [$eventLogService]);

        return parent::getApiIdField($eventLogService);
    }

    /**
     * {@inheritDoc}
     */
    public function getApiId(\App\Service\EventLogService $eventLogService): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getApiId', [$eventLogService]);

        return parent::getApiId($eventLogService);
    }

}
