<?php

namespace Proxies\__CG__\App\Entity;


/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class JudgingRun extends \App\Entity\JudgingRun implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'runid', '' . "\0" . 'App\\Entity\\JudgingRun' . "\0" . 'judgetaskid', '' . "\0" . 'App\\Entity\\JudgingRun' . "\0" . 'runresult', '' . "\0" . 'App\\Entity\\JudgingRun' . "\0" . 'runtime', '' . "\0" . 'App\\Entity\\JudgingRun' . "\0" . 'endtime', '' . "\0" . 'App\\Entity\\JudgingRun' . "\0" . 'judging', '' . "\0" . 'App\\Entity\\JudgingRun' . "\0" . 'testcase', '' . "\0" . 'App\\Entity\\JudgingRun' . "\0" . 'output', '' . "\0" . 'App\\Entity\\JudgingRun' . "\0" . 'judgetask'];
        }

        return ['__isInitialized__', 'runid', '' . "\0" . 'App\\Entity\\JudgingRun' . "\0" . 'judgetaskid', '' . "\0" . 'App\\Entity\\JudgingRun' . "\0" . 'runresult', '' . "\0" . 'App\\Entity\\JudgingRun' . "\0" . 'runtime', '' . "\0" . 'App\\Entity\\JudgingRun' . "\0" . 'endtime', '' . "\0" . 'App\\Entity\\JudgingRun' . "\0" . 'judging', '' . "\0" . 'App\\Entity\\JudgingRun' . "\0" . 'testcase', '' . "\0" . 'App\\Entity\\JudgingRun' . "\0" . 'output', '' . "\0" . 'App\\Entity\\JudgingRun' . "\0" . 'judgetask'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (JudgingRun $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load(): void
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized(): bool
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized): void
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null): void
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer(): ?\Closure
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null): void
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner(): ?\Closure
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties(): array
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getRunid(): int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getRunid();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRunid', []);

        return parent::getRunid();
    }

    /**
     * {@inheritDoc}
     */
    public function setJudgeTaskId(int $judgetaskid): \App\Entity\JudgingRun
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setJudgeTaskId', [$judgetaskid]);

        return parent::setJudgeTaskId($judgetaskid);
    }

    /**
     * {@inheritDoc}
     */
    public function getJudgeTaskId(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getJudgeTaskId', []);

        return parent::getJudgeTaskId();
    }

    /**
     * {@inheritDoc}
     */
    public function getJudgeTask(): ?\App\Entity\JudgeTask
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getJudgeTask', []);

        return parent::getJudgeTask();
    }

    /**
     * {@inheritDoc}
     */
    public function setJudgeTask(\App\Entity\JudgeTask $judgeTask): \App\Entity\JudgingRun
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setJudgeTask', [$judgeTask]);

        return parent::setJudgeTask($judgeTask);
    }

    /**
     * {@inheritDoc}
     */
    public function setRunresult(string $runresult): \App\Entity\JudgingRun
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRunresult', [$runresult]);

        return parent::setRunresult($runresult);
    }

    /**
     * {@inheritDoc}
     */
    public function getRunresult(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRunresult', []);

        return parent::getRunresult();
    }

    /**
     * {@inheritDoc}
     */
    public function setRuntime(float $runtime): \App\Entity\JudgingRun
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRuntime', [$runtime]);

        return parent::setRuntime($runtime);
    }

    /**
     * {@inheritDoc}
     */
    public function getRuntime(): ?float
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRuntime', []);

        return parent::getRuntime();
    }

    /**
     * {@inheritDoc}
     */
    public function setEndtime($endtime): \App\Entity\JudgingRun
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEndtime', [$endtime]);

        return parent::setEndtime($endtime);
    }

    /**
     * {@inheritDoc}
     */
    public function getEndtime()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEndtime', []);

        return parent::getEndtime();
    }

    /**
     * {@inheritDoc}
     */
    public function getAbsoluteEndTime(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAbsoluteEndTime', []);

        return parent::getAbsoluteEndTime();
    }

    /**
     * {@inheritDoc}
     */
    public function getRelativeEndTime(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRelativeEndTime', []);

        return parent::getRelativeEndTime();
    }

    /**
     * {@inheritDoc}
     */
    public function setJudging(\App\Entity\Judging $judging = NULL): \App\Entity\JudgingRun
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setJudging', [$judging]);

        return parent::setJudging($judging);
    }

    /**
     * {@inheritDoc}
     */
    public function getJudging(): \App\Entity\Judging
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getJudging', []);

        return parent::getJudging();
    }

    /**
     * {@inheritDoc}
     */
    public function getJudgingId(): int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getJudgingId', []);

        return parent::getJudgingId();
    }

    /**
     * {@inheritDoc}
     */
    public function setTestcase(\App\Entity\Testcase $testcase = NULL): \App\Entity\JudgingRun
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTestcase', [$testcase]);

        return parent::setTestcase($testcase);
    }

    /**
     * {@inheritDoc}
     */
    public function getTestcase(): \App\Entity\Testcase
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTestcase', []);

        return parent::getTestcase();
    }

    /**
     * {@inheritDoc}
     */
    public function getTestcaseRank(): int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTestcaseRank', []);

        return parent::getTestcaseRank();
    }

    /**
     * {@inheritDoc}
     */
    public function setOutput(\App\Entity\JudgingRunOutput $output): \App\Entity\JudgingRun
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOutput', [$output]);

        return parent::setOutput($output);
    }

    /**
     * {@inheritDoc}
     */
    public function getOutput(): ?\App\Entity\JudgingRunOutput
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOutput', []);

        return parent::getOutput();
    }

    /**
     * {@inheritDoc}
     */
    public function getApiIdField(\App\Service\EventLogService $eventLogService): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getApiIdField', [$eventLogService]);

        return parent::getApiIdField($eventLogService);
    }

    /**
     * {@inheritDoc}
     */
    public function getApiId(\App\Service\EventLogService $eventLogService): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getApiId', [$eventLogService]);

        return parent::getApiId($eventLogService);
    }

}
